<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="COM061">
<!-- 공지사항조회  -->
 	<select id="Get_NOTI_ALL_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">		
		SELECT       
                     A.SEQ_NO  AS SEQ_NO               
			       , MAX(A.NOTI_DT ) AS NOTI_DT
			       , MAX(A.WRTR_ID ) AS WRTR_ID           
			       , MAX(A.WRTR_NM ) AS WRTR_NM       
		           , MAX(FUN_GET_CDNM('OLD11',A.NOTI_MTTR_TYP_CD)) AS NOTI_MTTR_TYP_CD       
			       , MAX(FUN_GET_CDNM('NW033',A.NOTI_DV_CD)      ) AS NOTI_DV_CD  
			       , MAX(A.TMPL_REG_YN     ) AS TMPL_REG_YN
			       , MAX(A.NOTI_VALD_STR_DT) AS NOTI_VALD_STR_DT
			       , MAX(A.NOTI_VALD_END_DT) AS NOTI_VALD_END_DT
			       , MAX(A.UGC_YN ) AS UGC_YN
			       , MAX(A.DEL_YN ) AS DEL_YN
			       , MAX(A.TITE   ) AS TITE
			       , MAX(A.CTT    ) AS CTT      
			       , MAX(CASE WHEN B.SEQ_NO IS NULL THEN 'N' ELSE 'Y' END) AS FILE_CNT
			       , MAX(NVL(A.INQ_NCNT,0))   AS INQ_NCNT
			       , MAX(A.REG_ID         )  AS REG_ID
			       , MAX(A.REG_DTM        )  AS REG_DTM
			       , MAX(A.LST_CORC_ID    )  AS LST_CORC_ID
			       , MAX(A.LST_CORC_DTM   )  AS LST_CORC_DTM
		 	 	     , MAX(CASE WHEN H.NOTI_SEQ_NO IS NOT NULL THEN 'N' ELSE 'Y' END) AS CNT 

		FROM 	     TBL_NOTI_MTTR A 
		             <!--INNER JOIN TBL_USR AA ON AA.USR_ID = A.WRTR_ID	-->
		             <!--첨부파일여부-->
			  		 LEFT JOIN TBL_APND_FILE B ON  A.SEQ_NO = B.SEQ_NO
			  		 <!--해당공지사항확인여부-->
					 LEFT JOIN TBL_CMKG_MTS_CFMTRST H ON A.SEQ_NO = H.NOTI_SEQ_NO
					                                 AND H.CFMR_ID = #gbl_usr_id#  <!--로그인한본인ID-->				                                 
             		 INNER JOIN TBL_CMKG_NTF_RCVE_DE E ON A.SEQ_NO = E.NOTI_SEQ_NO
       	<!--부서랑 파트 조건 걸리면 아래 로직 활성화-->       			                                        
       <dynamic>
		   	<isNotEmpty prepend="AND" property="grp_cd">               <!--	그룹 구분 검색		-->
    	    	E.GRP_CD = #grp_cd#
    	   	</isNotEmpty>
    		<isNotEmpty prepend="AND" property="part_cd">           <!--  파트구분 검색	-->
    	    	E.PART_CD = #part_cd#
    	   	</isNotEmpty>
    	   	<isNotEmpty property="usr_id">           <!--  상담사 검색	-->
		          INNER JOIN TBL_USR J ON J.GRP_CD  = E.GRP_CD
                                      AND J.PART_CD = E.PART_CD
                                      AND J.USR_ID = #usr_id#
		   	</isNotEmpty>
    </dynamic>                                    
		 WHERE A.NOTI_VALD_STR_DT BETWEEN #noti_from_dt# AND #noti_to_dt#
		 AND   A.DEL_YN = 'N' 
<!--제목검색-->

    <dynamic>
        <isNotEmpty prepend="AND" property="noti_usr_nm">			<!-- 제목 검색		-->
           ( UPPER(A.TITE) LIKE '%'|| UPPER(#noti_usr_nm#) ||'%' 
           or UPPER(A.CTT) LIKE '%'|| UPPER(#noti_usr_nm#) ||'%'
           )			
        </isNotEmpty>
    </dynamic>  
		 GROUP BY A.SEQ_NO
		ORDER BY LST_CORC_DTM DESC
 	</select>
 	
<!-- 공지사항조회(업무)  -->
 	<select id="Get_NOTI_WORK_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">		
		SELECT       
                     A.SEQ_NO  AS SEQ_NO               
			       , MAX(A.NOTI_DT ) AS NOTI_DT
			       , MAX(A.WRTR_ID ) AS WRTR_ID           
			       , MAX(A.WRTR_NM ) AS WRTR_NM       
		           , MAX(FUN_GET_CDNM('OLD11',A.NOTI_MTTR_TYP_CD)) AS NOTI_MTTR_TYP_CD       
			       , MAX(FUN_GET_CDNM('NW033',A.NOTI_DV_CD)      ) AS NOTI_DV_CD  
			       , MAX(A.TMPL_REG_YN     ) AS TMPL_REG_YN
			       , MAX(A.NOTI_VALD_STR_DT) AS NOTI_VALD_STR_DT
			       , MAX(A.NOTI_VALD_END_DT) AS NOTI_VALD_END_DT
			       , MAX(A.UGC_YN ) AS UGC_YN
			       , MAX(A.DEL_YN ) AS DEL_YN
			       , MAX(A.TITE   ) AS TITE
			       , MAX(A.CTT    ) AS CTT      
			       , MAX(CASE WHEN B.SEQ_NO IS NULL THEN 'N' ELSE 'Y' END) AS FILE_CNT
			       , MAX(NVL(A.INQ_NCNT,0))   AS INQ_NCNT
			       , MAX(A.REG_ID         )  AS REG_ID
			       , MAX(A.REG_DTM        )  AS REG_DTM
			       , MAX(A.LST_CORC_ID    )  AS LST_CORC_ID
			       , MAX(A.LST_CORC_DTM   )  AS LST_CORC_DTM
		 	 	     , MAX(CASE WHEN H.NOTI_SEQ_NO IS NOT NULL THEN 'N' ELSE 'Y' END) AS CNT 

		FROM 	     TBL_NOTI_MTTR A 
		             <!--INNER JOIN TBL_USR AA ON AA.USR_ID = A.WRTR_ID	-->
		             <!--첨부파일여부-->
			  		 LEFT JOIN TBL_APND_FILE B ON  A.SEQ_NO = B.SEQ_NO
			  		 <!--해당공지사항확인여부-->
					 LEFT JOIN TBL_CMKG_MTS_CFMTRST H ON A.SEQ_NO = H.NOTI_SEQ_NO
					                                 AND H.CFMR_ID = #gbl_usr_id#  <!--로그인한본인ID-->				                                 
             		 INNER JOIN TBL_CMKG_NTF_RCVE_DE E ON A.SEQ_NO = E.NOTI_SEQ_NO
       	<!--부서랑 파트 조건 걸리면 아래 로직 활성화-->       			                                        
       <dynamic>
		   	<isNotEmpty prepend="AND" property="grp_cd">               <!--	그룹 구분 검색		-->
    	    	E.GRP_CD = #grp_cd#
    	   	</isNotEmpty>
    		<isNotEmpty prepend="AND" property="part_cd">           <!--  파트구분 검색	-->
    	    	E.PART_CD = #part_cd#
    	   	</isNotEmpty>
    	   	<isNotEmpty property="usr_id">           <!--  상담사 검색	-->
		          INNER JOIN TBL_USR J ON J.GRP_CD  = E.GRP_CD
                                      AND J.PART_CD = E.PART_CD
                                      AND J.USR_ID = #usr_id#
		   	</isNotEmpty>
    </dynamic>                                    
		 WHERE A.NOTI_VALD_STR_DT BETWEEN #noti_from_dt# AND #noti_to_dt#
		 AND   A.DEL_YN = 'N' 
		 AND   A.NOTI_DV_CD = 'A'   
		
		 GROUP BY A.SEQ_NO
		 ORDER BY LST_CORC_DTM DESC
</select>
<!-- 공지사항조회(일반)  -->
 	<select id="Get_NOTI_NOMAL_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">		
		SELECT       
                     A.SEQ_NO  AS SEQ_NO               
			       , MAX(A.NOTI_DT ) AS NOTI_DT
			       , MAX(A.WRTR_ID ) AS WRTR_ID           
			       , MAX(A.WRTR_NM ) AS WRTR_NM       
		           , MAX(FUN_GET_CDNM('OLD11',A.NOTI_MTTR_TYP_CD)) AS NOTI_MTTR_TYP_CD       
			       , MAX(FUN_GET_CDNM('NW033',A.NOTI_DV_CD)      ) AS NOTI_DV_CD  
			       , MAX(A.TMPL_REG_YN     ) AS TMPL_REG_YN
			       , MAX(A.NOTI_VALD_STR_DT) AS NOTI_VALD_STR_DT
			       , MAX(A.NOTI_VALD_END_DT) AS NOTI_VALD_END_DT
			       , MAX(A.UGC_YN ) AS UGC_YN
			       , MAX(A.DEL_YN ) AS DEL_YN
			       , MAX(A.TITE   ) AS TITE
			       , MAX(A.CTT    ) AS CTT      
			       , MAX(CASE WHEN B.SEQ_NO IS NULL THEN 'N' ELSE 'Y' END) AS FILE_CNT
			       , MAX(NVL(A.INQ_NCNT,0))   AS INQ_NCNT
			       , MAX(A.REG_ID         )  AS REG_ID
			       , MAX(A.REG_DTM        )  AS REG_DTM
			       , MAX(A.LST_CORC_ID    )  AS LST_CORC_ID
			       , MAX(A.LST_CORC_DTM   )  AS LST_CORC_DTM
		 	 	     , MAX(CASE WHEN H.NOTI_SEQ_NO IS NOT NULL THEN 'N' ELSE 'Y' END) AS CNT 

		FROM 	     TBL_NOTI_MTTR A 
		             <!--INNER JOIN TBL_USR AA ON AA.USR_ID = A.WRTR_ID	-->
		             <!--첨부파일여부-->
			  		 LEFT JOIN TBL_APND_FILE B ON  A.SEQ_NO = B.SEQ_NO
			  		 <!--해당공지사항확인여부-->
					 LEFT JOIN TBL_CMKG_MTS_CFMTRST H ON A.SEQ_NO = H.NOTI_SEQ_NO
					                                 AND H.CFMR_ID = #gbl_usr_id#  <!--로그인한본인ID-->				                                 
             		 INNER JOIN TBL_CMKG_NTF_RCVE_DE E ON A.SEQ_NO = E.NOTI_SEQ_NO
       	<!--부서랑 파트 조건 걸리면 아래 로직 활성화-->       			                                        
       <dynamic>
		   	<isNotEmpty prepend="AND" property="grp_cd">               <!--	그룹 구분 검색		-->
    	    	E.GRP_CD = #grp_cd#
    	   	</isNotEmpty>
    		<isNotEmpty prepend="AND" property="part_cd">           <!--  파트구분 검색	-->
    	    	E.PART_CD = #part_cd#
    	   	</isNotEmpty>
    	   	<isNotEmpty property="usr_id">           <!--  상담사 검색	-->
		          INNER JOIN TBL_USR J ON J.GRP_CD  = E.GRP_CD
                                      AND J.PART_CD = E.PART_CD
                                      AND J.USR_ID = #usr_id#
		   	</isNotEmpty>
    </dynamic>                                    
		 WHERE A.NOTI_VALD_STR_DT BETWEEN #noti_from_dt# AND #noti_to_dt#
		 AND   A.DEL_YN = 'N' 
		 AND   A.NOTI_DV_CD = 'B'   
		 
		 GROUP BY A.SEQ_NO
		 ORDER BY LST_CORC_DTM DESC
</select>
 	
 </sqlMap>

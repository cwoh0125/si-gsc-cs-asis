<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CMP300">
 	
 	
 	<!--  부문/본부 조회조건 콤보리스트(불만통계용: 리스트 정해줌. 조직변경으로 인해 변경되면 담당자에게 확인받아야함. 
 		  (수도권소매사업부문, 영남소매사업부문, 서부소매사업부문, 대리점 사업부문, LPG사업부문, 법인사업부문, 마케팅개발실, 운영부문)
 		  201712 아래와 같이 수정 		  
 	-->
  	<!-- <select id="Get_SrchDeptList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DEPT_CD 		AS CODE      부서코드 
		     , DEPT_CDNM 	AS CODE_NM	 부서코드명 
		  FROM TBL_HR_DEPT_CD
		 WHERE DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')
		ORDER BY DEPT_CD
 	</select>
 	 --> 	
 	<!-- 201712 통계 부문 정보 수정 --> 	  	
 	  	<select id="Get_SrchDeptList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT HGRK_DEPT_CD AS CODE  <!-- 부서코드 -->
			   		  ,HGRK_DEPT_CDNM AS CODE_NM   <!-- 부서코드명 -->
			    FROM TBL_HR_DEPT_CD_AFTER        
			    GROUP BY HGRK_DEPT_CD,HGRK_DEPT_CDNM
			    ORDER BY HGRK_DEPT_CD
 	</select> 	
 	
 	
  	<select id="Get_HndlTeamList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DEPT_CD 		AS CODE     <!-- 부서코드 -->
		     , DEPT_CDNM 	AS CODE_NM	<!-- 부서코드명 -->
		  FROM TBL_HR_DEPT_CD
		 WHERE HGRK_DEPT_CD = #hgrk_dept_cd#
		ORDER BY DEPT_CDNM
 	</select>
 	
  	<select id="Get_DsftCausList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DSFT_CAUS_CD AS CODE
			  ,DSFT_CAUS_CDNM AS CODE_NM
		FROM TBL_DSFT_CAUS_CD
		WHERE DEL_YN = 'Y'
		ORDER BY DSFT_CAUS_CD
 	</select> 	 	
 	
	<!-- 불만조회 - 조직별(불만유형)-->
 	<select id="Get_CMP_STT1_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	SELECT
	     Q1.HGRK_DEPT_CD        						AS HGRK_DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '전체' 
	    	ELSE MAX(Q1.HGRK_DEPT_CDNM) END 			AS HGRK_DEPT_CDNM
	    ,Q1.DEPT_CD             						AS DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '합계' 
	          WHEN Q1.DEPT_CD IS NULL THEN '소계' 
	        ELSE MAX(Q1.DEPT_CDNM) END  				AS DSPSR_CHRG_DEPT
	    
	    ,NVL(SUM(Q2.Data1),0) AS DATA1
	    ,NVL(SUM(Q2.Data2),0) AS DATA2
	    ,NVL(SUM(Q2.Data3),0) AS DATA3
	    ,NVL(SUM(Q2.Data4),0) AS DATA4
	    ,NVL(SUM(Q2.Data5),0) AS DATA5
	    ,NVL(SUM(Q2.Data6),0) AS DATA6
	    ,NVL(SUM(Q2.Data7),0) AS DATA7
	    ,NVL(SUM(Q2.Data8),0) AS DATA8
	    ,NVL(SUM(Q2.Data9),0) AS DATA9
	    ,NVL(SUM(Q2.Data10),0) AS DATA10
	    ,NVL(SUM(Q2.Data11),0) AS DATA11
	    ,NVL(SUM(Q2.Data12),0) AS DATA12
	    ,NVL(SUM(Q2.Data13),0) AS DATA13
	    ,NVL(SUM(Q2.Data14),0) AS DATA14
	    ,NVL(SUM(Q2.Data15),0) AS DATA15
	    ,NVL(SUM(Q2.Data16),0) AS DATA16
	    ,NVL(SUM(Q2.Data17),0) AS DATA17
	    ,NVL(SUM(Q2.Data18),0) AS DATA18
	    ,NVL(SUM(Q2.Data19),0) AS DATA19
	    ,NVL(SUM(Q2.Data20),0) AS DATA20
	    ,NVL(SUM(Q2.Data21),0) AS DATA21
	    ,NVL(SUM(Q2.Data22),0) AS DATA22
	    ,NVL(SUM(Q2.Data23),0) AS DATA23
	    ,NVL(SUM(Q2.Data24),0) AS DATA24
	    ,NVL(SUM(Q2.Data25),0) AS DATA25	    
	    ,(	
	    	NVL(SUM(Q2.Data1),0) + NVL(SUM(Q2.Data2),0) + NVL(SUM(Q2.Data3),0) + NVL(SUM(Q2.Data4),0) + NVL(SUM(Q2.Data5),0)+
	    	NVL(SUM(Q2.Data6),0) + NVL(SUM(Q2.Data7),0) + NVL(SUM(Q2.Data8),0) + NVL(SUM(Q2.Data9),0) + NVL(SUM(Q2.Data10),0)+
	    	NVL(SUM(Q2.Data11),0)+ NVL(SUM(Q2.Data12),0)+ NVL(SUM(Q2.Data13),0)+ NVL(SUM(Q2.Data14),0)+ NVL(SUM(Q2.Data15),0)+
	    	NVL(SUM(Q2.Data16),0)+ NVL(SUM(Q2.Data17),0)+ NVL(SUM(Q2.Data18),0)+ NVL(SUM(Q2.Data19),0)+ NVL(SUM(Q2.Data20),0)+
	    	NVL(SUM(Q2.Data21),0)+ NVL(SUM(Q2.Data22),0)+ NVL(SUM(Q2.Data23),0)+ NVL(SUM(Q2.Data24),0)+ NVL(SUM(Q2.Data25),0)
	      ) AS RSUM
	    
	FROM 	
	    (   
	        SELECT 	HGRK_DEPT_CD,HGRK_DEPT_CDNM,DEPT_CD,DEPT_CDNM
	        FROM 	TBL_HR_DEPT_CD       
	        WHERE 	1=1
	       		<dynamic>
	       			<isEmpty prepend="AND" property="hgrk_dept_cd">
						HGRK_DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')	       				
	       			</isEmpty>
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    DEPT_CD = #dept_cd#
				  	</isNotEmpty>	       		
				</dynamic>       		
	        
	       		<dynamic>
	       			<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				        SELECT 
				             'ZZZZZ'    	AS HGRK_DEPT_CD  
				            ,'기타부문' 		AS HGRK_DEPT_CDNM
				            ,'ZZZZZ'    	AS DEPT_CD
				            ,'기타'     		AS DEPT_CDNM
				        FROM DUAL
	       			</isEmpty>				        
				</dynamic>	        
					            
	    ) Q1
	    
	    LEFT JOIN
	    
	    ( 	
			SELECT 	 
	   			 G.HGRK_DEPT_CDNM as HGRK_DEPT_CDNM
	   			,G.DEPT_CDNM as DSPSR_CHRG_DEPT
	   			,G.DEPT_CD as DEPT_CD
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CA' THEN 1 ELSE 0 END) AS Data1
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CB' THEN 1 ELSE 0 END) AS Data2
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CC' THEN 1 ELSE 0 END) AS Data3
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CD' THEN 1 ELSE 0 END) AS Data4
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CE' THEN 1 ELSE 0 END) AS Data5
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CF' THEN 1 ELSE 0 END) AS Data6
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CG' THEN 1 ELSE 0 END) AS Data7
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CH' THEN 1 ELSE 0 END) AS Data8
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CI' THEN 1 ELSE 0 END) AS Data9
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CJ' THEN 1 ELSE 0 END) AS Data10
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CK' THEN 1 ELSE 0 END) AS Data11
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CL' THEN 1 ELSE 0 END) AS Data12
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CM' THEN 1 ELSE 0 END) AS Data13
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CN' THEN 1 ELSE 0 END) AS Data14
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CO' THEN 1 ELSE 0 END) AS Data15
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CP' THEN 1 ELSE 0 END) AS Data16
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CQ' THEN 1 ELSE 0 END) AS Data17
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CR' THEN 1 ELSE 0 END) AS Data18
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DA' THEN 1 ELSE 0 END) AS Data19
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DB' THEN 1 ELSE 0 END) AS Data20
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DC' THEN 1 ELSE 0 END) AS Data21
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DD' THEN 1 ELSE 0 END) AS Data22
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DE' THEN 1 ELSE 0 END) AS Data23
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DF' THEN 1 ELSE 0 END) AS Data24
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DG' THEN 1 ELSE 0 END) AS Data25
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE G.HGRK_DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')
		   			AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)			
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
					
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>			 	  	
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic>  
		
			GROUP BY G.HGRK_DEPT_CDNM,G.HGRK_DEPT_CD, G.DEPT_CD,G.DEPT_CDNM
			
			UNION ALL
			
	        SELECT 	 
				 '기타부문' 		AS HGRK_DEPT_CDNM
				,'기타' 			AS DSPSR_CHRG_DEPT
				,'ZZZZZ' 		AS DEPT_CD	
				,SUM(CASE WHEN I.DSFT_TYP_CD='CA' THEN 1 ELSE 0 END) AS Data1
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CB' THEN 1 ELSE 0 END) AS Data2
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CC' THEN 1 ELSE 0 END) AS Data3
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CD' THEN 1 ELSE 0 END) AS Data4
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CE' THEN 1 ELSE 0 END) AS Data5
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CF' THEN 1 ELSE 0 END) AS Data6
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CG' THEN 1 ELSE 0 END) AS Data7
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CH' THEN 1 ELSE 0 END) AS Data8
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CI' THEN 1 ELSE 0 END) AS Data9
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CJ' THEN 1 ELSE 0 END) AS Data10
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CK' THEN 1 ELSE 0 END) AS Data11
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CL' THEN 1 ELSE 0 END) AS Data12
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CM' THEN 1 ELSE 0 END) AS Data13
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CN' THEN 1 ELSE 0 END) AS Data14
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CO' THEN 1 ELSE 0 END) AS Data15
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CP' THEN 1 ELSE 0 END) AS Data16
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CQ' THEN 1 ELSE 0 END) AS Data17
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='CR' THEN 1 ELSE 0 END) AS Data18
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DA' THEN 1 ELSE 0 END) AS Data19
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DB' THEN 1 ELSE 0 END) AS Data20
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DC' THEN 1 ELSE 0 END) AS Data21
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DD' THEN 1 ELSE 0 END) AS Data22
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DE' THEN 1 ELSE 0 END) AS Data23
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DF' THEN 1 ELSE 0 END) AS Data24
		        ,SUM(CASE WHEN I.DSFT_TYP_CD='DG' THEN 1 ELSE 0 END) AS Data25
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE (G.HGRK_DEPT_CD IS NULL OR G.HGRK_DEPT_CD NOT IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048'))
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	
		) Q2
	
	ON Q1.DEPT_CD = Q2.DEPT_CD
	
	GROUP BY ROLLUP(Q1.HGRK_DEPT_CD,Q1.DEPT_CD)
	ORDER BY Q1.HGRK_DEPT_CD, MAX(Q1.DEPT_CDNM), Q1.HGRK_DEPT_CD,Q1.DEPT_CD	
 	</select>
 	
 	
 	<!-- 불만조회 - 조직별(불만유형)-->
 	<select id="Get_CMP_STT1_SELECT_1" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	SELECT
	     Q1.HGRK_DEPT_CD        						AS HGRK_DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '전체' 
	    	ELSE MAX(Q1.HGRK_DEPT_CDNM) END 			AS HGRK_DEPT_CDNM
	    ,Q1.DEPT_CD             						AS DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '합계' 
	          WHEN Q1.DEPT_CD IS NULL THEN '소계' 
	        ELSE MAX(Q1.DEPT_CDNM) END  				AS DSPSR_CHRG_DEPT
	    
	    ,NVL(SUM(Q2.Data1),0) AS DATA1
	    ,NVL(SUM(Q2.Data2),0) AS DATA2
	    ,NVL(SUM(Q2.Data3),0) AS DATA3
	    ,NVL(SUM(Q2.Data4),0) AS DATA4
	    ,NVL(SUM(Q2.Data5),0) AS DATA5	    
	    ,NVL(SUM(Q2.Data7),0) AS DATA7
	    ,NVL(SUM(Q2.Data8),0) AS DATA8
	    ,NVL(SUM(Q2.Data9),0) AS DATA9
	    ,NVL(SUM(Q2.Data10),0) AS DATA10
	    ,NVL(SUM(Q2.Data11),0) AS DATA11
	    ,NVL(SUM(Q2.Data12),0) AS DATA12
	    ,NVL(SUM(Q2.Data13),0) AS DATA13
	    ,NVL(SUM(Q2.Data14),0) AS DATA14
	    ,NVL(SUM(Q2.Data15),0) AS DATA15
	    ,NVL(SUM(Q2.Data16),0) AS DATA16
	    ,NVL(SUM(Q2.Data17),0) AS DATA17	  
	    ,(	
	    	NVL(SUM(Q2.Data1),0) + NVL(SUM(Q2.Data2),0) + NVL(SUM(Q2.Data3),0) + NVL(SUM(Q2.Data4),0) + NVL(SUM(Q2.Data5),0)+
	    	NVL(SUM(Q2.Data7),0) + NVL(SUM(Q2.Data8),0) + NVL(SUM(Q2.Data9),0) + NVL(SUM(Q2.Data10),0)+
	    	NVL(SUM(Q2.Data11),0)+ NVL(SUM(Q2.Data12),0)+ NVL(SUM(Q2.Data13),0)+ NVL(SUM(Q2.Data14),0)+ NVL(SUM(Q2.Data15),0)+
	    	NVL(SUM(Q2.Data16),0)+ NVL(SUM(Q2.Data17),0)
 		     ) AS RSUM
	    
	FROM 	
	    (   
	        SELECT 	HGRK_DEPT_CD,HGRK_DEPT_CDNM,DEPT_CD,DEPT_CDNM
	        FROM 	TBL_HR_DEPT_CD       
	        WHERE 	1=1
	       		<dynamic>
	       			<isEmpty prepend="AND" property="hgrk_dept_cd">
						HGRK_DEPT_CD IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y') <!-- 부문정보 추가 201712 -->	       				
	       			</isEmpty>
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    DEPT_CD = #dept_cd#
				  	</isNotEmpty>	       		
				</dynamic>     
				<dynamic>
	       			<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				     SELECT 
                         'ZZCSC'        AS HGRK_DEPT_CD  
                        ,'ICCS_CSC'         AS HGRK_DEPT_CDNM
                        ,'ZZCSC'        AS DEPT_CD
                        ,'불만상담원'             AS DEPT_CDNM
                    FROM DUAL   
	       			</isEmpty>				        
				</dynamic>	          		
	        
	       		<dynamic>
	       			<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				        SELECT 
				             'ZZZZZ'    	AS HGRK_DEPT_CD  
				            ,'기타부문' 		AS HGRK_DEPT_CDNM
				            ,'ZZZZZ'    	AS DEPT_CD
				            ,'기타'     		AS DEPT_CDNM
				        FROM DUAL
	       			</isEmpty>				        
				</dynamic>	        
					            
	    ) Q1
	    
	    LEFT JOIN
	    
	    ( 	
			SELECT 	 
	   			 G.HGRK_DEPT_CDNM as HGRK_DEPT_CDNM
	   			,G.DEPT_CDNM as DSPSR_CHRG_DEPT
	   			,G.DEPT_CD as DEPT_CD
		       ,SUM(CASE WHEN I.SMLCLAS_CD='CA' THEN 1 ELSE 0 END) AS Data1       <!--품질 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CB' THEN 1 ELSE 0 END) AS Data2		<!--서비스 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CC' THEN 1 ELSE 0 END) AS Data3		<!--시설 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CD' THEN 1 ELSE 0 END) AS Data4		<!--가격 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CE' THEN 1 ELSE 0 END) AS Data5		<!--탱크로리-->		        
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CG' THEN 1 ELSE 0 END) AS Data7		<!--기타-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CH' THEN 1 ELSE 0 END) AS Data8		<!--신용카드관련 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CI' THEN 1 ELSE 0 END) AS Data9			<!--세차관련-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CK' THEN 1 ELSE 0 END) AS Data10		<!--혼유-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CL' THEN 1 ELSE 0 END) AS Data11		<!--주유량-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CN' THEN 1 ELSE 0 END) AS Data12		<!--DBO보험-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CO' THEN 1 ELSE 0 END) AS Data13	   <!-- 보너스카드 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CP' THEN 1 ELSE 0 END) AS Data14		<!--칭찬 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CQ' THEN 1 ELSE 0 END) AS Data15		<!--DBO포인트 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CR' THEN 1 ELSE 0 END) AS Data16		<!--통합포인트 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CT' THEN 1 ELSE 0 END) AS Data17		<!--일시정지 -->	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO  
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			       LEFT JOIN TBL_UNFYCD_SUBCLAS I
                              ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                    LEFT JOIN TBL_UNFYCD_SMLCLAS J
                              ON J.SMLCLAS_CD = I.SMLCLAS_CD    
			       		   
			WHERE 1=1
			         <!--AND G.HGRK_DEPT_CD IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y')부문정보 추가 201712 -->	       		
		   			AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)		
		   			AND A.DSPSR_YN_OB_CNTR IS NULL
		   	    	AND A.DSPSR_CHRG_DEPT_CD = G.DEPT_CD 	 <!-- 불만 통계 개선 201711 -->     	
		   	    	<!--AND A.DSPSR_CHRG_DEPT = G.DEPT_CDNM     불만 통계 개선 201711 -->     	
		   	    	AND J.LRGCLAS_CD = 'NW146'                                 <!-- 불만 통계 개선 201711 -->     	
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">         <!-- 월별 년월까지 가지고 온다. -->     
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              <!-- 일별이다. -->
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
					
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>			 	  	
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic>  
		
			GROUP BY G.HGRK_DEPT_CDNM,G.HGRK_DEPT_CD, G.DEPT_CD,G.DEPT_CDNM
			
			UNION ALL      <!-- ICCS 불만상담원 집계는 기타에서 제외하고 따로 집계 한다. -->
			
	        SELECT 	 
				 'ICCS_CSC' 		AS HGRK_DEPT_CDNM
				,'상담원(불만)' 			AS DSPSR_CHRG_DEPT
				,'ZZCSC' 		AS DEPT_CD	
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CA' THEN 1 ELSE 0 END) AS Data1       <!--품질 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CB' THEN 1 ELSE 0 END) AS Data2		<!--서비스 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CC' THEN 1 ELSE 0 END) AS Data3		<!--시설 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CD' THEN 1 ELSE 0 END) AS Data4		<!--가격 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CE' THEN 1 ELSE 0 END) AS Data5		<!--탱크로리-->		        
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CG' THEN 1 ELSE 0 END) AS Data7		<!--기타-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CH' THEN 1 ELSE 0 END) AS Data8		<!--신용카드관련 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CI' THEN 1 ELSE 0 END) AS Data9			<!--세차관련-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CK' THEN 1 ELSE 0 END) AS Data10		<!--혼유-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CL' THEN 1 ELSE 0 END) AS Data11		<!--주유량-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CN' THEN 1 ELSE 0 END) AS Data12		<!--DBO보험-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CO' THEN 1 ELSE 0 END) AS Data13	   <!-- 보너스카드 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CP' THEN 1 ELSE 0 END) AS Data14		<!--칭찬 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CQ' THEN 1 ELSE 0 END) AS Data15		<!--DBO포인트 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CR' THEN 1 ELSE 0 END) AS Data16		<!--통합포인트 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CT' THEN 1 ELSE 0 END) AS Data17		<!--일시정지 -->		    
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_UNFYCD_SUBCLAS I
                              ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                    LEFT JOIN TBL_UNFYCD_SMLCLAS J
                              ON J.SMLCLAS_CD = I.SMLCLAS_CD    
			       		   
			WHERE 1=1
					    <!--  AND (G.HGRK_DEPT_CD IS NULL OR G.HGRK_DEPT_CD NOT IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y'))  E00059,E00048 추가 201712 -->	       		
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
					   AND A.DSPSR_YN_OB_CNTR IS NULL
					   AND  DSPSR_CHRG_DEPT_CD IN('ICCS') <!-- 불만 파트(상담원)에서 처리한 것만 -->
					   AND J.LRGCLAS_CD = 'NW146' 
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">           <!-- 월별 -->  
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	
			
			UNION ALL
			
	        SELECT 	 
				 '기타부문' 		AS HGRK_DEPT_CDNM
				,'기타' 			AS DSPSR_CHRG_DEPT
				,'ZZZZZ' 		AS DEPT_CD	
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CA' THEN 1 ELSE 0 END) AS Data1       <!--품질 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CB' THEN 1 ELSE 0 END) AS Data2		<!--서비스 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CC' THEN 1 ELSE 0 END) AS Data3		<!--시설 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CD' THEN 1 ELSE 0 END) AS Data4		<!--가격 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CE' THEN 1 ELSE 0 END) AS Data5		<!--탱크로리-->		        
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CG' THEN 1 ELSE 0 END) AS Data7		<!--기타-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CH' THEN 1 ELSE 0 END) AS Data8		<!--신용카드관련 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CI' THEN 1 ELSE 0 END) AS Data9			<!--세차관련-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CK' THEN 1 ELSE 0 END) AS Data10		<!--혼유-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CL' THEN 1 ELSE 0 END) AS Data11		<!--주유량-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CN' THEN 1 ELSE 0 END) AS Data12		<!--DBO보험-->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CO' THEN 1 ELSE 0 END) AS Data13	   <!-- 보너스카드 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CP' THEN 1 ELSE 0 END) AS Data14		<!--칭찬 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CQ' THEN 1 ELSE 0 END) AS Data15		<!--DBO포인트 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CR' THEN 1 ELSE 0 END) AS Data16		<!--통합포인트 -->
		        ,SUM(CASE WHEN I.SMLCLAS_CD='CT' THEN 1 ELSE 0 END) AS Data17		<!--일시정지 -->		    
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_UNFYCD_SUBCLAS I
                              ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                    LEFT JOIN TBL_UNFYCD_SMLCLAS J
                              ON J.SMLCLAS_CD = I.SMLCLAS_CD    
			       		   
			WHERE 1=1
					     <!-- AND (G.HGRK_DEPT_CD IS NULL OR G.HGRK_DEPT_CD NOT IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y')) E00059,E00048 추가 201712 -->	       		
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
					   AND A.DSPSR_YN_OB_CNTR IS NOT NULL
					   AND J.LRGCLAS_CD = 'NW146' 
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">           <!-- 월별 -->  
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	
		) Q2
	
	ON Q1.DEPT_CD = Q2.DEPT_CD
	
	GROUP BY ROLLUP(Q1.HGRK_DEPT_CD,Q1.DEPT_CD)
	ORDER BY Q1.HGRK_DEPT_CD, MAX(Q1.DEPT_CDNM), Q1.HGRK_DEPT_CD,Q1.DEPT_CD	
 	</select>
 	
	<!-- 불만조회 - 처리팀별(월)-->
 	<select id="Get_CMP_STT2_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT
		        NVL(A.DSPSR_CHRG_DEPT,'')	 AS DSPSR_CHRG_DEPT
		        ,A.Data1			AS DATA1
		        ,A.Data2			AS DATA2
		        ,A.Data3			AS DATA3
		        ,(A.Data1 + A.Data2 + A.Data3) AS QTR1
		        ,A.Data4			AS DATA4
		        ,A.Data5			AS DATA5
		        ,A.Data6			AS DATA6
		        ,(A.Data4 + A.Data5 + A.Data6) AS QTR2
		        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6) AS HALF1
		        ,A.Data7			AS DATA7
		        ,A.Data8			AS DATA8
		        ,A.Data9			AS DATA9
		        ,(A.Data7 + A.Data8 + A.Data9) AS QTR3
		        ,A.Data10			AS DATA10
		        ,A.Data11			AS DATA11
		        ,A.Data12			AS DATA12
		        ,(A.Data10 + A.Data11 + A.Data12) AS QTR4
		        ,(A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS HALF2
		        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6 + A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS TOT     
		FROM  	
				(select 	 
	    			 A.DSPSR_CHRG_DEPT as DSPSR_CHRG_DEPT	
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
			        ,'0' as RSUM
		
		        from TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
				        LEFT JOIN TBL_HC_HIST C
				               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
				        LEFT JOIN TBL_CRPN_CUST_BASE D
				       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
				        LEFT JOIN TBL_USR B
				       		   ON A.DSPSR_ID = B.USR_ID 
				        LEFT JOIN TBL_HR_EMP_CD F
				       		   ON A.DSPSR_ID = F.EMP_NO
				        LEFT JOIN TBL_HR_DEPT_CD G 
				       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
				        LEFT JOIN TBL_SAP_CD H	
				       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
				        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
				       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
				       		   
				where (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
		       		<dynamic>
		       			<!-- 년도별 -->   				    	
			    	    <isEqual property="cmb_gubun" compareValue="1">              
			                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
			            </isEqual>
			            <!--  -->
			            <isEqual property="cmb_gubun" compareValue="2">
			            	<isEmpty property="cmb_half">
			            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
			            	</isEmpty>              
			                <isEqual property="cmb_half" compareValue="1">
			                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
							</isEqual>	 
							<isEqual property="cmb_half" compareValue="2">
								and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
							</isEqual>	 
			            </isEqual>	 
			            <isEqual property="cmb_gubun" compareValue="3"> 
			            	<isEmpty>
								and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
			            	</isEmpty>    
			           		<isEqual property="cmb_qua" compareValue="1">
			           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
			           	  	</isEqual>
			           	  	<isEqual property="cmb_qua" compareValue="2">
			           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
			           	  	</isEqual>	 
			           	  	<isEqual property="cmb_qua" compareValue="3">
			           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
			           	  	</isEqual>	 
		           	  		<isEqual property="cmb_qua" compareValue="4">
			           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
			           	  	</isEqual>	 	 
		            	</isEqual>	 				            
			    	 	<isEqual property="cmb_gubun" compareValue="4">              
			            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
			         	</isEqual>	
			    	 	<isEqual property="cmb_gubun" compareValue="5">              
			                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
			         	</isEqual>
					
						<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
						<isEmpty property="dsft_typ_cd">
							<isEqual property="dsft_typ_tot_gbn" compareValue="2">
								AND A.DSFT_TYP_CD IN ('CA','CK')
							</isEqual>
						</isEmpty>						
					  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
					    	A.DSFT_TYP_CD = #dsft_typ_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
					    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
					  	</isNotEmpty>
				  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
						    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
					  	</isNotEmpty>
					    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
						    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
					    </isNotEmpty>			  	
					  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
						    G.HGRK_DEPT_CD = #hgrk_dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
						    G.DEPT_CD = #dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
						    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
					  	</isNotEmpty>
				 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
				 			AND A.HC_YN = 'Y'
				 		</isEqual>
					 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
					 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
					 	</isEqual>
					  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
					  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
					  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
					  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
						    A.PRDCT_CD = #prdct_cd#
					  	</isNotEmpty>			  				 	
					  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
						    A.PRBLM_PENOM_CD = #prblm_penom_cd#
					  	</isNotEmpty>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
				 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
				 	  	</isEqual>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
				 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
				 	  	</isEqual>
					  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
						    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
					  	</isNotEmpty>
					 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND A.VHCL_BIZTR_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
					 	</isEqual>		 	  	
					 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
					 		AND A.RWRD_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
					 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
					 	</isEqual>
					 	
					 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
					 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
					 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
					 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
					 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
					 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
					 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
					 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	
						<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
					 	<isEqual property="cmp_handler" compareValue="1">   
					 		AND	A.DSPSR_YN_CNSLR = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="2">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="3">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="4">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="5">   
					 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="6">   
					 		AND	A.DSPSR_YN_PART_HD = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="7">   
					 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
		       		</dynamic>  
			
				group by A.DSPSR_CHRG_DEPT
			   	order by A.DSPSR_CHRG_DEPT	
			   	) A   
 	</select> 	
 	
 		<!-- 불만조회 - 처리팀별(월)-->
 	<select id="Get_CMP_STT2_SELECT_1" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT
		        NVL(A.DSPSR_CHRG_DEPT,'')	 AS DSPSR_CHRG_DEPT
		        ,A.Data1			AS DATA1
		        ,A.Data2			AS DATA2
		        ,A.Data3			AS DATA3
		        ,(A.Data1 + A.Data2 + A.Data3) AS QTR1
		        ,A.Data4			AS DATA4
		        ,A.Data5			AS DATA5
		        ,A.Data6			AS DATA6
		        ,(A.Data4 + A.Data5 + A.Data6) AS QTR2
		        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6) AS HALF1
		        ,A.Data7			AS DATA7
		        ,A.Data8			AS DATA8
		        ,A.Data9			AS DATA9
		        ,(A.Data7 + A.Data8 + A.Data9) AS QTR3
		        ,A.Data10			AS DATA10
		        ,A.Data11			AS DATA11
		        ,A.Data12			AS DATA12
		        ,(A.Data10 + A.Data11 + A.Data12) AS QTR4
		        ,(A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS HALF2
		        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6 + A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS TOT     
		FROM  	
				(
				SELECT       
                     DSPSR_CHRG_DEPT    
                    ,Data1
                    ,Data2
                    ,Data3          
                    ,Data4
                    ,Data5
                    ,Data6            
                    ,Data7
                    ,Data8
                    ,Data9
                    ,Data10
                    ,Data11
                    ,Data12
                    , '0' 
				FROM (
				select 	 
	    			 A.DSPSR_CHRG_DEPT as DSPSR_CHRG_DEPT	
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
			        ,'0' as RSUM
		
		        from TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
				        LEFT JOIN TBL_HC_HIST C
				               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
				        LEFT JOIN TBL_CRPN_CUST_BASE D
				       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
				        LEFT JOIN TBL_USR B
				       		   ON A.DSPSR_ID = B.USR_ID 
				        LEFT JOIN TBL_HR_EMP_CD F
				       		   ON A.DSPSR_ID = F.EMP_NO
				        LEFT JOIN TBL_HR_DEPT_CD G 
				       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
				        LEFT JOIN TBL_SAP_CD H	
				       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
				        LEFT JOIN TBL_UNFYCD_SUBCLAS I
							   ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
						LEFT JOIN TBL_UNFYCD_SMLCLAS J
						      ON J.SMLCLAS_CD = I.SMLCLAS_CD    
				       		   
				where 1=1 
				AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
				AND J.LRGCLAS_CD = 'NW146'     <!-- 불만 통계 개선 201711 -->
				AND A.DSPSR_CHRG_DEPT_CD = G.DEPT_CD 	 <!-- 불만 통계 개선 201711 -->	
				AND A.DSPSR_YN_OB_CNTR IS NULL      <!-- TM센터불만건제외 -->	   	   	   	  
		       		<dynamic>
		       			<!-- 년도별 -->   				    	
			    	    <isEqual property="cmb_gubun" compareValue="1">              
			                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
			            </isEqual>
			            <!--  -->
			            <isEqual property="cmb_gubun" compareValue="2">
			            	<isEmpty property="cmb_half">
			            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
			            	</isEmpty>              
			                <isEqual property="cmb_half" compareValue="1">
			                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
							</isEqual>	 
							<isEqual property="cmb_half" compareValue="2">
								and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
							</isEqual>	 
			            </isEqual>	 
			            <isEqual property="cmb_gubun" compareValue="3"> 
			            	<isEmpty>
								and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
			            	</isEmpty>    
			           		<isEqual property="cmb_qua" compareValue="1">
			           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
			           	  	</isEqual>
			           	  	<isEqual property="cmb_qua" compareValue="2">
			           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
			           	  	</isEqual>	 
			           	  	<isEqual property="cmb_qua" compareValue="3">
			           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
			           	  	</isEqual>	 
		           	  		<isEqual property="cmb_qua" compareValue="4">
			           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
			           	  	</isEqual>	 	 
		            	</isEqual>	 				            
			    	 	<isEqual property="cmb_gubun" compareValue="4">              
			            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
			         	</isEqual>	
			    	 	<isEqual property="cmb_gubun" compareValue="5">              
			                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
			         	</isEqual>
					
						<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
						<isEmpty property="dsft_typ_cd">
							<isEqual property="dsft_typ_tot_gbn" compareValue="2">
								AND A.DSFT_TYP_CD IN ('CA','CK')
							</isEqual>
						</isEmpty>						
					  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
					    	A.DSFT_TYP_CD = #dsft_typ_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
					    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
					  	</isNotEmpty>
				  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
						    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
					  	</isNotEmpty>
					    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
						    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
					    </isNotEmpty>			  	
					  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
						    G.HGRK_DEPT_CD = #hgrk_dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
						    G.DEPT_CD = #dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
						    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
					  	</isNotEmpty>
				 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
				 			AND A.HC_YN = 'Y'
				 		</isEqual>
					 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
					 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
					 	</isEqual>
					  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
					  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
					  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
					  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
						    A.PRDCT_CD = #prdct_cd#
					  	</isNotEmpty>			  				 	
					  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
						    A.PRBLM_PENOM_CD = #prblm_penom_cd#
					  	</isNotEmpty>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
				 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
				 	  	</isEqual>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
				 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
				 	  	</isEqual>
					  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
						    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
					  	</isNotEmpty>
					 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND A.VHCL_BIZTR_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
					 	</isEqual>		 	  	
					 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
					 		AND A.RWRD_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
					 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
					 	</isEqual>
					 	
					 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
					 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
					 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
					 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
					 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
					 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
					 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
					 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	
						<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
					 	<isEqual property="cmp_handler" compareValue="1">   
					 		AND	A.DSPSR_YN_CNSLR = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="2">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="3">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="4">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="5">   
					 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="6">   
					 		AND	A.DSPSR_YN_PART_HD = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="7">   
					 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
		       		</dynamic>  
			
				group by A.DSPSR_CHRG_DEPT
				order by A.DSPSR_CHRG_DEPT 
				)
				<!-- 고객 센터 불만 상담원 처리 건수 -->
				UNION ALL
				
				select 	 
	    			 A.DSPSR_CHRG_DEPT as DSPSR_CHRG_DEPT	
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
			        ,'0' as RSUM
		
		        from TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
				        LEFT JOIN TBL_HC_HIST C
				               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
				        LEFT JOIN TBL_CRPN_CUST_BASE D
				       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
				        LEFT JOIN TBL_USR B
				       		   ON A.DSPSR_ID = B.USR_ID 
				        LEFT JOIN TBL_HR_EMP_CD F
				       		   ON A.DSPSR_ID = F.EMP_NO
				        LEFT JOIN TBL_HR_DEPT_CD G 
				       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
				        LEFT JOIN TBL_SAP_CD H	
				       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
				        LEFT JOIN TBL_UNFYCD_SUBCLAS I
							   ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
						LEFT JOIN TBL_UNFYCD_SMLCLAS J
						      ON J.SMLCLAS_CD = I.SMLCLAS_CD    
				       		   
				where 1=1
			    AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)				  
				AND J.LRGCLAS_CD = 'NW146'     <!-- 불만 통계 개선 201711 -->   
				AND A.DSPSR_CHRG_DEPT_CD = 'ICCS' 	 <!-- 불만 상담원 처리건만 불만 통계 개선 201711 -->	   	  
				AND A.DSPSR_YN_OB_CNTR IS NULL <!-- TM센터 불만건 제외 -->
		       		<dynamic>
		       			<!-- 년도별 -->   				    	
			    	    <isEqual property="cmb_gubun" compareValue="1">              
			                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
			            </isEqual>
			            <!--  -->
			            <isEqual property="cmb_gubun" compareValue="2">
			            	<isEmpty property="cmb_half">
			            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
			            	</isEmpty>              
			                <isEqual property="cmb_half" compareValue="1">
			                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
							</isEqual>	 
							<isEqual property="cmb_half" compareValue="2">
								and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
							</isEqual>	 
			            </isEqual>	 
			            <isEqual property="cmb_gubun" compareValue="3"> 
			            	<isEmpty>
								and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
			            	</isEmpty>    
			           		<isEqual property="cmb_qua" compareValue="1">
			           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
			           	  	</isEqual>
			           	  	<isEqual property="cmb_qua" compareValue="2">
			           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
			           	  	</isEqual>	 
			           	  	<isEqual property="cmb_qua" compareValue="3">
			           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
			           	  	</isEqual>	 
		           	  		<isEqual property="cmb_qua" compareValue="4">
			           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
			           	  	</isEqual>	 	 
		            	</isEqual>	 				            
			    	 	<isEqual property="cmb_gubun" compareValue="4">              
			            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
			         	</isEqual>	
			    	 	<isEqual property="cmb_gubun" compareValue="5">              
			                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
			         	</isEqual>
					
						<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
						<isEmpty property="dsft_typ_cd">
							<isEqual property="dsft_typ_tot_gbn" compareValue="2">
								AND A.DSFT_TYP_CD IN ('CA','CK')
							</isEqual>
						</isEmpty>						
					  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
					    	A.DSFT_TYP_CD = #dsft_typ_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
					    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
					  	</isNotEmpty>
				  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
						    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
					  	</isNotEmpty>
					    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
						    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
					    </isNotEmpty>			  	
					  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
						    G.HGRK_DEPT_CD = #hgrk_dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
						    G.DEPT_CD = #dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
						    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
					  	</isNotEmpty>
				 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
				 			AND A.HC_YN = 'Y'
				 		</isEqual>
					 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
					 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
					 	</isEqual>
					  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
					  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
					  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
					  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
						    A.PRDCT_CD = #prdct_cd#
					  	</isNotEmpty>			  				 	
					  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
						    A.PRBLM_PENOM_CD = #prblm_penom_cd#
					  	</isNotEmpty>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
				 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
				 	  	</isEqual>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
				 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
				 	  	</isEqual>
					  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
						    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
					  	</isNotEmpty>
					 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND A.VHCL_BIZTR_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
					 	</isEqual>		 	  	
					 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
					 		AND A.RWRD_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
					 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
					 	</isEqual>
					 	
					 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
					 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
					 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
					 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
					 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
					 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
					 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
					 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	
						<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
					 	<isEqual property="cmp_handler" compareValue="1">   
					 		AND	A.DSPSR_YN_CNSLR = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="2">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="3">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="4">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="5">   
					 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="6">   
					 		AND	A.DSPSR_YN_PART_HD = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="7">   
					 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
		       		</dynamic>  
			
				group by A.DSPSR_CHRG_DEPT
				
					<!-- 기타 건수 -->
				UNION ALL
				
				SELECT  
					 DSPSR_CHRG_DEPT
					 ,SUM(Data1)
					 ,SUM(Data2) 
					 ,SUM(Data3)
					 ,SUM(Data4)
					 ,SUM(Data5)
					 ,SUM(Data6)
					 ,SUM(Data7)
					 ,SUM(Data8)
					 ,SUM(Data9)
					 ,SUM(Data10)
					 ,SUM(Data11)
					 ,SUM(Data12) 
					  ,'0'
 FROM (
				select 	 
	    			 '기타' as DSPSR_CHRG_DEPT	
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
			        ,'0' as RSUM
		
		        from TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
				        LEFT JOIN TBL_HC_HIST C
				               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
				        LEFT JOIN TBL_CRPN_CUST_BASE D
				       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
				        LEFT JOIN TBL_USR B
				       		   ON A.DSPSR_ID = B.USR_ID 
				        LEFT JOIN TBL_HR_EMP_CD F
				       		   ON A.DSPSR_ID = F.EMP_NO
				        LEFT JOIN TBL_HR_DEPT_CD G 
				       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
				        LEFT JOIN TBL_SAP_CD H	
				       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
				        LEFT JOIN TBL_UNFYCD_SUBCLAS I
							   ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
						LEFT JOIN TBL_UNFYCD_SMLCLAS J
						      ON J.SMLCLAS_CD = I.SMLCLAS_CD    
				       		   
				where 1=1
				AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
				AND J.LRGCLAS_CD = 'NW146'     <!-- 불만 통계 개선 201711 -->   
				AND A.DSPSR_CHRG_DEPT_CD IS NULL 	 <!-- 불만 상담원 처리건만 불만 통계 개선 201711 -->	   	  
				AND A.DSPSR_YN_OB_CNTR IS NOT NULL
		       		<dynamic>
		       			<!-- 년도별 -->   				    	
			    	    <isEqual property="cmb_gubun" compareValue="1">              
			                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
			            </isEqual>
			            <!--  -->
			            <isEqual property="cmb_gubun" compareValue="2">
			            	<isEmpty property="cmb_half">
			            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
			            	</isEmpty>              
			                <isEqual property="cmb_half" compareValue="1">
			                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
							</isEqual>	 
							<isEqual property="cmb_half" compareValue="2">
								and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
							</isEqual>	 
			            </isEqual>	 
			            <isEqual property="cmb_gubun" compareValue="3"> 
			            	<isEmpty>
								and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
			            	</isEmpty>    
			           		<isEqual property="cmb_qua" compareValue="1">
			           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
			           	  	</isEqual>
			           	  	<isEqual property="cmb_qua" compareValue="2">
			           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
			           	  	</isEqual>	 
			           	  	<isEqual property="cmb_qua" compareValue="3">
			           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
			           	  	</isEqual>	 
		           	  		<isEqual property="cmb_qua" compareValue="4">
			           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
			           	  	</isEqual>	 	 
		            	</isEqual>	 				            
			    	 	<isEqual property="cmb_gubun" compareValue="4">              
			            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
			         	</isEqual>	
			    	 	<isEqual property="cmb_gubun" compareValue="5">              
			                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
			         	</isEqual>
					
						<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
						<isEmpty property="dsft_typ_cd">
							<isEqual property="dsft_typ_tot_gbn" compareValue="2">
								AND A.DSFT_TYP_CD IN ('CA','CK')
							</isEqual>
						</isEmpty>						
					  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
					    	A.DSFT_TYP_CD = #dsft_typ_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
					    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
					  	</isNotEmpty>
				  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
						    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
					  	</isNotEmpty>
					    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
						    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
					    </isNotEmpty>			  	
					  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
						    G.HGRK_DEPT_CD = #hgrk_dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
						    G.DEPT_CD = #dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
						    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
					  	</isNotEmpty>
				 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
				 			AND A.HC_YN = 'Y'
				 		</isEqual>
					 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
					 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
					 	</isEqual>
					  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
					  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
					  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
					  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
						    A.PRDCT_CD = #prdct_cd#
					  	</isNotEmpty>			  				 	
					  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
						    A.PRBLM_PENOM_CD = #prblm_penom_cd#
					  	</isNotEmpty>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
				 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
				 	  	</isEqual>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
				 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
				 	  	</isEqual>
					  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
						    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
					  	</isNotEmpty>
					 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND A.VHCL_BIZTR_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
					 	</isEqual>		 	  	
					 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
					 		AND A.RWRD_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
					 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
					 	</isEqual>
					 	
					 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
					 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
					 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
					 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
					 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
					 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
					 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
					 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	
						<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
					 	<isEqual property="cmp_handler" compareValue="1">   
					 		AND	A.DSPSR_YN_CNSLR = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="2">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="3">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="4">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="5">   
					 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="6">   
					 		AND	A.DSPSR_YN_PART_HD = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="7">   
					 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
		       		</dynamic>  
			
					group by A.DSPSR_CHRG_DEPT
				) group by DSPSR_CHRG_DEPT
			
			   	) A       	
 	</select> 	
 	
 	<!-- 불만조회 - 조직별(불만세부유형) -->
 	<select id="Get_CMP_STT3_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	SELECT
	     Q1.HGRK_DEPT_CD        						AS HGRK_DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '전체' 
	    	ELSE MAX(Q1.HGRK_DEPT_CDNM) END 			AS HGRK_DEPT_CDNM
	    ,Q1.DEPT_CD             						AS DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '합계' 
	          WHEN Q1.DEPT_CD IS NULL THEN '소계' 
	        ELSE MAX(Q1.DEPT_CDNM) END  				AS DSPSR_CHRG_DEPT
	    
		,NVL(SUM(Q2.CA01),0)	AS   CA01
		,NVL(SUM(Q2.CA02),0)	AS   CA02
		,NVL(SUM(Q2.CA03),0)	AS   CA03
		,NVL(SUM(Q2.CB01),0)	AS   CB01
		,NVL(SUM(Q2.CB02),0)	AS   CB02
		,NVL(SUM(Q2.CB03),0)	AS   CB03
		,NVL(SUM(Q2.CB04),0)	AS   CB04
		,NVL(SUM(Q2.CB05),0)	AS   CB05
		,NVL(SUM(Q2.CB06),0)	AS   CB06
		,NVL(SUM(Q2.CB07),0)	AS   CB07
		,NVL(SUM(Q2.CB08),0)	AS   CB08
		,NVL(SUM(Q2.CB09),0)	AS   CB09
		,NVL(SUM(Q2.CB10),0)	AS   CB10
		,NVL(SUM(Q2.CC01),0)	AS   CC01
		,NVL(SUM(Q2.CC02),0)	AS   CC02
		,NVL(SUM(Q2.CC03),0)	AS   CC03
		,NVL(SUM(Q2.CC04),0)	AS   CC04
		,NVL(SUM(Q2.CD01),0)	AS   CD01
		,NVL(SUM(Q2.CE01),0)	AS   CE01
		,NVL(SUM(Q2.CE02),0)	AS   CE02
		,NVL(SUM(Q2.CE03),0)	AS   CE03
		,NVL(SUM(Q2.CF01),0)	AS   CF01
		,NVL(SUM(Q2.CG01),0)	AS   CG01
		,NVL(SUM(Q2.CH01),0)	AS   CH01
		,NVL(SUM(Q2.CI01),0)	AS   CI01
		,NVL(SUM(Q2.CJ01),0)	AS   CJ01
		,NVL(SUM(Q2.CK01),0)	AS   CK01
		,NVL(SUM(Q2.CL01),0)	AS   CL01
		,NVL(SUM(Q2.CM01),0)	AS   CM01
		,NVL(SUM(Q2.CM02),0)	AS   CM02
		,NVL(SUM(Q2.CM03),0)	AS   CM03
		,NVL(SUM(Q2.CM04),0)	AS   CM04
		,NVL(SUM(Q2.CM05),0)	AS   CM05
		,NVL(SUM(Q2.CN01),0)	AS   CN01
		,NVL(SUM(Q2.CN02),0)	AS   CN02
		,NVL(SUM(Q2.CN03),0)	AS   CN03
		,NVL(SUM(Q2.CO01),0)	AS   CO01
		,NVL(SUM(Q2.CO02),0)	AS   CO02
		,NVL(SUM(Q2.CO03),0)	AS   CO03
		,NVL(SUM(Q2.CO04),0)	AS   CO04
		,NVL(SUM(Q2.CO05),0)	AS   CO05
		,NVL(SUM(Q2.CP01),0)	AS   CP01
		,NVL(SUM(Q2.CP02),0)	AS   CP02
		,NVL(SUM(Q2.CP03),0)	AS   CP03
		,NVL(SUM(Q2.CQ01),0)	AS   CQ01
		,NVL(SUM(Q2.CQ02),0)	AS   CQ02
		,NVL(SUM(Q2.CQ03),0)	AS   CQ03
		,NVL(SUM(Q2.CQ04),0)	AS   CQ04
		,NVL(SUM(Q2.CR01),0)	AS   CR01
		,NVL(SUM(Q2.DA01),0)	AS   DA01
		,NVL(SUM(Q2.DA02),0)	AS   DA02
		,NVL(SUM(Q2.DA03),0)	AS   DA03
		,NVL(SUM(Q2.DA04),0)	AS   DA04
		,NVL(SUM(Q2.DA05),0)	AS   DA05
		,NVL(SUM(Q2.DA06),0)	AS   DA06
		,NVL(SUM(Q2.DA07),0)	AS   DA07
		,NVL(SUM(Q2.DB01),0)	AS   DB01
		,NVL(SUM(Q2.DB02),0)	AS   DB02
		,NVL(SUM(Q2.DB03),0)	AS   DB03
		,NVL(SUM(Q2.DB04),0)	AS   DB04
		,NVL(SUM(Q2.DB05),0)	AS   DB05
		,NVL(SUM(Q2.DB06),0)	AS   DB06
		,NVL(SUM(Q2.DC01),0)	AS   DC01
		,NVL(SUM(Q2.DC02),0)	AS   DC02
		,NVL(SUM(Q2.DC03),0)	AS   DC03
		,NVL(SUM(Q2.DD01),0)	AS   DD01
		,NVL(SUM(Q2.DD02),0)	AS   DD02
		,NVL(SUM(Q2.DD03),0)	AS   DD03
		,NVL(SUM(Q2.DD04),0)	AS   DD04
		,NVL(SUM(Q2.DD05),0)	AS   DD05
		,NVL(SUM(Q2.DD06),0)	AS   DD06
		,NVL(SUM(Q2.DE01),0)	AS   DE01
		,NVL(SUM(Q2.DE02),0)	AS   DE02
		,NVL(SUM(Q2.DE03),0)	AS   DE03
		,NVL(SUM(Q2.DF01),0)	AS   DF01
		,NVL(SUM(Q2.DF02),0)	AS   DF02
		,NVL(SUM(Q2.DF03),0)	AS   DF03
		,NVL(SUM(Q2.DF04),0)	AS   DF04
		,NVL(SUM(Q2.DG01),0)	AS   DG01
		,NVL(SUM(Q2.DG02),0)	AS   DG02
		,NVL(SUM(Q2.DG03),0)	AS   DG03	    
	    ,(	
			NVL(SUM(Q2.CA01),0)+NVL(SUM(Q2.CA02),0)+NVL(SUM(Q2.CA03),0)+NVL(SUM(Q2.CB01),0)+NVL(SUM(Q2.CB02),0)+NVL(SUM(Q2.CB03),0)+NVL(SUM(Q2.CB04),0)+NVL(SUM(Q2.CB05),0)+
			NVL(SUM(Q2.CB06),0)+NVL(SUM(Q2.CB07),0)+NVL(SUM(Q2.CB08),0)+NVL(SUM(Q2.CB09),0)+NVL(SUM(Q2.CB10),0)+NVL(SUM(Q2.CC01),0)+NVL(SUM(Q2.CC02),0)+NVL(SUM(Q2.CC03),0)+NVL(SUM(Q2.CC04),0)+
			NVL(SUM(Q2.CD01),0)+NVL(SUM(Q2.CE01),0)+NVL(SUM(Q2.CE02),0)+NVL(SUM(Q2.CE03),0)+NVL(SUM(Q2.CF01),0)+NVL(SUM(Q2.CG01),0)+NVL(SUM(Q2.CH01),0)+NVL(SUM(Q2.CI01),0)+NVL(SUM(Q2.CJ01),0)+
			NVL(SUM(Q2.CK01),0)+NVL(SUM(Q2.CL01),0)+NVL(SUM(Q2.CM01),0)+NVL(SUM(Q2.CM02),0)+NVL(SUM(Q2.CM03),0)+NVL(SUM(Q2.CM04),0)+NVL(SUM(Q2.CM05),0)+NVL(SUM(Q2.CN01),0)+NVL(SUM(Q2.CN02),0)+
			NVL(SUM(Q2.CN03),0)+NVL(SUM(Q2.CO01),0)+NVL(SUM(Q2.CO02),0)+NVL(SUM(Q2.CO03),0)+NVL(SUM(Q2.CO04),0)+NVL(SUM(Q2.CO05),0)+NVL(SUM(Q2.CP01),0)+NVL(SUM(Q2.CP02),0)+NVL(SUM(Q2.CP03),0)+
			NVL(SUM(Q2.CQ01),0)+NVL(SUM(Q2.CQ02),0)+NVL(SUM(Q2.CQ03),0)+NVL(SUM(Q2.CQ04),0)+NVL(SUM(Q2.CR01),0)+NVL(SUM(Q2.DA01),0)+NVL(SUM(Q2.DA02),0)+NVL(SUM(Q2.DA03),0)+NVL(SUM(Q2.DA04),0)+
			NVL(SUM(Q2.DA05),0)+NVL(SUM(Q2.DA06),0)+NVL(SUM(Q2.DA07),0)+NVL(SUM(Q2.DB01),0)+NVL(SUM(Q2.DB02),0)+NVL(SUM(Q2.DB03),0)+NVL(SUM(Q2.DB04),0)+NVL(SUM(Q2.DB05),0)+NVL(SUM(Q2.DB06),0)+
			NVL(SUM(Q2.DC01),0)+NVL(SUM(Q2.DC02),0)+NVL(SUM(Q2.DC03),0)+NVL(SUM(Q2.DD01),0)+NVL(SUM(Q2.DD02),0)+NVL(SUM(Q2.DD03),0)+NVL(SUM(Q2.DD04),0)+NVL(SUM(Q2.DD05),0)+NVL(SUM(Q2.DD06),0)+
			NVL(SUM(Q2.DE01),0)+NVL(SUM(Q2.DE02),0)+NVL(SUM(Q2.DE03),0)+NVL(SUM(Q2.DF01),0)+NVL(SUM(Q2.DF02),0)+NVL(SUM(Q2.DF03),0)+NVL(SUM(Q2.DF04),0)+NVL(SUM(Q2.DG01),0)+NVL(SUM(Q2.DG02),0)+
			NVL(SUM(Q2.DG03),0)
	      ) AS RSUM
	    
	FROM 	
	    (   
	        SELECT 	HGRK_DEPT_CD,HGRK_DEPT_CDNM,DEPT_CD,DEPT_CDNM
	        FROM 	TBL_HR_DEPT_CD       
	        WHERE 	1=1
	       		<dynamic>
	       			<isEmpty prepend="AND" property="hgrk_dept_cd">
						HGRK_DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')	       				
	       			</isEmpty>
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    DEPT_CD = #dept_cd#
				  	</isNotEmpty>	       		
				</dynamic>       		
	        
	       		<dynamic>
	       			<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				        SELECT 
				             'ZZZZZ'    	AS HGRK_DEPT_CD  
				            ,'기타부문' 		AS HGRK_DEPT_CDNM
				            ,'ZZZZZ'    	AS DEPT_CD
				            ,'기타'     		AS DEPT_CDNM
				        FROM DUAL
	       			</isEmpty>				        
				</dynamic>	        
					            
	    ) Q1
	    
	    LEFT JOIN
	    
	    ( 	
			SELECT 	 
	   			 G.HGRK_DEPT_CDNM as HGRK_DEPT_CDNM
	   			,G.DEPT_CDNM as DSPSR_CHRG_DEPT
	   			,G.DEPT_CD as DEPT_CD
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CA01' THEN 1 ELSE 0 END) AS CA01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CA02' THEN 1 ELSE 0 END) AS CA02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CA03' THEN 1 ELSE 0 END) AS CA03		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB01' THEN 1 ELSE 0 END) AS CB01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB02' THEN 1 ELSE 0 END) AS CB02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB03' THEN 1 ELSE 0 END) AS CB03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB04' THEN 1 ELSE 0 END) AS CB04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB05' THEN 1 ELSE 0 END) AS CB05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB06' THEN 1 ELSE 0 END) AS CB06
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB07' THEN 1 ELSE 0 END) AS CB07
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB08' THEN 1 ELSE 0 END) AS CB08
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB09' THEN 1 ELSE 0 END) AS CB09
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB10' THEN 1 ELSE 0 END) AS CB10		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC01' THEN 1 ELSE 0 END) AS CC01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC02' THEN 1 ELSE 0 END) AS CC02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC03' THEN 1 ELSE 0 END) AS CC03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC04' THEN 1 ELSE 0 END) AS CC04		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CD01' THEN 1 ELSE 0 END) AS CD01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CE01' THEN 1 ELSE 0 END) AS CE01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CE02' THEN 1 ELSE 0 END) AS CE02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CE03' THEN 1 ELSE 0 END) AS CE03		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CF01' THEN 1 ELSE 0 END) AS CF01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CG01' THEN 1 ELSE 0 END) AS CG01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CH01' THEN 1 ELSE 0 END) AS CH01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CI01' THEN 1 ELSE 0 END) AS CI01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CJ01' THEN 1 ELSE 0 END) AS CJ01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CK01' THEN 1 ELSE 0 END) AS CK01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CL01' THEN 1 ELSE 0 END) AS CL01		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM01' THEN 1 ELSE 0 END) AS CM01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM02' THEN 1 ELSE 0 END) AS CM02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM03' THEN 1 ELSE 0 END) AS CM03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM04' THEN 1 ELSE 0 END) AS CM04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM05' THEN 1 ELSE 0 END) AS CM05	  
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CN01' THEN 1 ELSE 0 END) AS CN01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CN02' THEN 1 ELSE 0 END) AS CN02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CN03' THEN 1 ELSE 0 END) AS CN03		        		        		        		        		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO01' THEN 1 ELSE 0 END) AS CO01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO02' THEN 1 ELSE 0 END) AS CO02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO03' THEN 1 ELSE 0 END) AS CO03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO04' THEN 1 ELSE 0 END) AS CO04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO05' THEN 1 ELSE 0 END) AS CO05		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CP01' THEN 1 ELSE 0 END) AS CP01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CP02' THEN 1 ELSE 0 END) AS CP02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CP03' THEN 1 ELSE 0 END) AS CP03		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ01' THEN 1 ELSE 0 END) AS CQ01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ02' THEN 1 ELSE 0 END) AS CQ02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ03' THEN 1 ELSE 0 END) AS CQ03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ04' THEN 1 ELSE 0 END) AS CQ04 
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CR01' THEN 1 ELSE 0 END) AS CR01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA01' THEN 1 ELSE 0 END) AS DA01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA02' THEN 1 ELSE 0 END) AS DA02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA03' THEN 1 ELSE 0 END) AS DA03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA04' THEN 1 ELSE 0 END) AS DA04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA05' THEN 1 ELSE 0 END) AS DA05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA06' THEN 1 ELSE 0 END) AS DA06
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA07' THEN 1 ELSE 0 END) AS DA07
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB01' THEN 1 ELSE 0 END) AS DB01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB02' THEN 1 ELSE 0 END) AS DB02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB03' THEN 1 ELSE 0 END) AS DB03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB04' THEN 1 ELSE 0 END) AS DB04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB05' THEN 1 ELSE 0 END) AS DB05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB06' THEN 1 ELSE 0 END) AS DB06
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DC01' THEN 1 ELSE 0 END) AS DC01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DC02' THEN 1 ELSE 0 END) AS DC02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DC03' THEN 1 ELSE 0 END) AS DC03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD01' THEN 1 ELSE 0 END) AS DD01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD02' THEN 1 ELSE 0 END) AS DD02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD03' THEN 1 ELSE 0 END) AS DD03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD04' THEN 1 ELSE 0 END) AS DD04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD05' THEN 1 ELSE 0 END) AS DD05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD06' THEN 1 ELSE 0 END) AS DD06	
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DE01' THEN 1 ELSE 0 END) AS DE01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DE02' THEN 1 ELSE 0 END) AS DE02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DE03' THEN 1 ELSE 0 END) AS DE03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF01' THEN 1 ELSE 0 END) AS DF01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF02' THEN 1 ELSE 0 END) AS DF02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF03' THEN 1 ELSE 0 END) AS DF03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF04' THEN 1 ELSE 0 END) AS DF04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DG01' THEN 1 ELSE 0 END) AS DG01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DG02' THEN 1 ELSE 0 END) AS DG02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DG03' THEN 1 ELSE 0 END) AS DG03
		        
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE G.HGRK_DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')
		   			AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)			
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic>  
		
			GROUP BY G.HGRK_DEPT_CDNM,G.HGRK_DEPT_CD, G.DEPT_CD,G.DEPT_CDNM
			
			UNION ALL
			
	        SELECT 	 
				 '기타부문' 		AS HGRK_DEPT_CDNM
				,'기타' 			AS DSPSR_CHRG_DEPT
				,'ZZZZZ' 		AS DEPT_CD	
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CA01' THEN 1 ELSE 0 END) AS CA01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CA02' THEN 1 ELSE 0 END) AS CA02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CA03' THEN 1 ELSE 0 END) AS CA03
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB01' THEN 1 ELSE 0 END) AS CB01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB02' THEN 1 ELSE 0 END) AS CB02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB03' THEN 1 ELSE 0 END) AS CB03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB04' THEN 1 ELSE 0 END) AS CB04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB05' THEN 1 ELSE 0 END) AS CB05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB06' THEN 1 ELSE 0 END) AS CB06
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB07' THEN 1 ELSE 0 END) AS CB07
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB08' THEN 1 ELSE 0 END) AS CB08
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB09' THEN 1 ELSE 0 END) AS CB09
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CB10' THEN 1 ELSE 0 END) AS CB10
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC01' THEN 1 ELSE 0 END) AS CC01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC02' THEN 1 ELSE 0 END) AS CC02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC03' THEN 1 ELSE 0 END) AS CC03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CC04' THEN 1 ELSE 0 END) AS CC04
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CD01' THEN 1 ELSE 0 END) AS CD01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CE01' THEN 1 ELSE 0 END) AS CE01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CE02' THEN 1 ELSE 0 END) AS CE02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CE03' THEN 1 ELSE 0 END) AS CE03
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CF01' THEN 1 ELSE 0 END) AS CF01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CG01' THEN 1 ELSE 0 END) AS CG01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CH01' THEN 1 ELSE 0 END) AS CH01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CI01' THEN 1 ELSE 0 END) AS CI01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CJ01' THEN 1 ELSE 0 END) AS CJ01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CK01' THEN 1 ELSE 0 END) AS CK01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CL01' THEN 1 ELSE 0 END) AS CL01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM01' THEN 1 ELSE 0 END) AS CM01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM02' THEN 1 ELSE 0 END) AS CM02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM03' THEN 1 ELSE 0 END) AS CM03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM04' THEN 1 ELSE 0 END) AS CM04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CM05' THEN 1 ELSE 0 END) AS CM05		        		        		        		        
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CN01' THEN 1 ELSE 0 END) AS CN01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CN02' THEN 1 ELSE 0 END) AS CN02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CN03' THEN 1 ELSE 0 END) AS CN03
		        		        		        		        		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO01' THEN 1 ELSE 0 END) AS CO01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO02' THEN 1 ELSE 0 END) AS CO02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO03' THEN 1 ELSE 0 END) AS CO03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO04' THEN 1 ELSE 0 END) AS CO04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CO05' THEN 1 ELSE 0 END) AS CO05
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CP01' THEN 1 ELSE 0 END) AS CP01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CP02' THEN 1 ELSE 0 END) AS CP02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CP03' THEN 1 ELSE 0 END) AS CP03
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ01' THEN 1 ELSE 0 END) AS CQ01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ02' THEN 1 ELSE 0 END) AS CQ02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ03' THEN 1 ELSE 0 END) AS CQ03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CQ04' THEN 1 ELSE 0 END) AS CQ04		        		        		        
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='CR01' THEN 1 ELSE 0 END) AS CR01
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA01' THEN 1 ELSE 0 END) AS DA01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA02' THEN 1 ELSE 0 END) AS DA02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA03' THEN 1 ELSE 0 END) AS DA03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA04' THEN 1 ELSE 0 END) AS DA04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA05' THEN 1 ELSE 0 END) AS DA05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA06' THEN 1 ELSE 0 END) AS DA06
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DA07' THEN 1 ELSE 0 END) AS DA07
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB01' THEN 1 ELSE 0 END) AS DB01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB02' THEN 1 ELSE 0 END) AS DB02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB03' THEN 1 ELSE 0 END) AS DB03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB04' THEN 1 ELSE 0 END) AS DB04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB05' THEN 1 ELSE 0 END) AS DB05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DB06' THEN 1 ELSE 0 END) AS DB06		        
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DC01' THEN 1 ELSE 0 END) AS DC01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DC02' THEN 1 ELSE 0 END) AS DC02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DC03' THEN 1 ELSE 0 END) AS DC03
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD01' THEN 1 ELSE 0 END) AS DD01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD02' THEN 1 ELSE 0 END) AS DD02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD03' THEN 1 ELSE 0 END) AS DD03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD04' THEN 1 ELSE 0 END) AS DD04
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD05' THEN 1 ELSE 0 END) AS DD05
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DD06' THEN 1 ELSE 0 END) AS DD06		        		        		        		        		        
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DE01' THEN 1 ELSE 0 END) AS DE01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DE02' THEN 1 ELSE 0 END) AS DE02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DE03' THEN 1 ELSE 0 END) AS DE03
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF01' THEN 1 ELSE 0 END) AS DF01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF02' THEN 1 ELSE 0 END) AS DF02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF03' THEN 1 ELSE 0 END) AS DF03
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DF04' THEN 1 ELSE 0 END) AS DF04
		        
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DG01' THEN 1 ELSE 0 END) AS DG01
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DG02' THEN 1 ELSE 0 END) AS DG02
		        ,SUM(CASE WHEN I.DSFT_TAXN_TYP_CD='DG03' THEN 1 ELSE 0 END) AS DG03
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE (G.HGRK_DEPT_CD IS NULL OR G.HGRK_DEPT_CD NOT IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048'))
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	
		) Q2
	
	ON Q1.DEPT_CD = Q2.DEPT_CD
	
	GROUP BY ROLLUP(Q1.HGRK_DEPT_CD,Q1.DEPT_CD)
	ORDER BY Q1.HGRK_DEPT_CD, MAX(Q1.DEPT_CDNM), Q1.HGRK_DEPT_CD,Q1.DEPT_CD	
 	</select> 	
 	
 	<!-- 불만조회 - 조직별(불만세부유형) -->
 	<select id="Get_CMP_STT3_SELECT_1" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	SELECT
	     Q1.HGRK_DEPT_CD        						AS HGRK_DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '전체' 
	    	ELSE MAX(Q1.HGRK_DEPT_CDNM) END 			AS HGRK_DEPT_CDNM
	    ,Q1.DEPT_CD             						AS DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '합계' 
	          WHEN Q1.DEPT_CD IS NULL THEN '소계' 
	        ELSE MAX(Q1.DEPT_CDNM) END  				AS DSPSR_CHRG_DEPT
	    
		,NVL(SUM(Q2.CA01),0)	AS   CA01
		,NVL(SUM(Q2.CA02),0)	AS   CA02
		,NVL(SUM(Q2.CA03),0)	AS   CA03
		,NVL(SUM(Q2.CB01),0)	AS   CB01
		,NVL(SUM(Q2.CB02),0)	AS   CB02
		,NVL(SUM(Q2.CB03),0)	AS   CB03
		,NVL(SUM(Q2.CB04),0)	AS   CB04
		,NVL(SUM(Q2.CB05),0)	AS   CB05
		,NVL(SUM(Q2.CB06),0)	AS   CB06
		,NVL(SUM(Q2.CB07),0)	AS   CB07
		,NVL(SUM(Q2.CB08),0)	AS   CB08
		,NVL(SUM(Q2.CB09),0)	AS   CB09
		,NVL(SUM(Q2.CB10),0)	AS   CB10
		,NVL(SUM(Q2.CB11),0)	AS   CB11
		,NVL(SUM(Q2.CB11),0)	AS   CB12
		,NVL(SUM(Q2.CC01),0)	AS   CC01
		,NVL(SUM(Q2.CC02),0)	AS   CC02
		,NVL(SUM(Q2.CC03),0)	AS   CC03
		,NVL(SUM(Q2.CC04),0)	AS   CC04
		,NVL(SUM(Q2.CD01),0)	AS   CD01
		,NVL(SUM(Q2.CD02),0)	AS   CD02
		,NVL(SUM(Q2.CE01),0)	AS   CE01
		,NVL(SUM(Q2.CE02),0)	AS   CE02
		,NVL(SUM(Q2.CE03),0)	AS   CE03
		,NVL(SUM(Q2.CE04),0)	AS   CE04
		,NVL(SUM(Q2.CF01),0)	AS   CF01
		,NVL(SUM(Q2.CG01),0)	AS   CG01
		,NVL(SUM(Q2.CH01),0)	AS   CH01
		,NVL(SUM(Q2.CH02),0)	AS   CH02
		,NVL(SUM(Q2.CH03),0)	AS   CH03
		,NVL(SUM(Q2.CI01),0)	AS   CI01
		,NVL(SUM(Q2.CK01),0)	AS   CK01
		,NVL(SUM(Q2.CL01),0)	AS   CL01
		,NVL(SUM(Q2.CN01),0)	AS   CN01
		,NVL(SUM(Q2.CN02),0)	AS   CN02
		,NVL(SUM(Q2.CN03),0)	AS   CN03
		,NVL(SUM(Q2.CO01),0)	AS   CO01
		,NVL(SUM(Q2.CO02),0)	AS   CO02
		,NVL(SUM(Q2.CO03),0)	AS   CO03
		,NVL(SUM(Q2.CO04),0)	AS   CO04
		,NVL(SUM(Q2.CO05),0)	AS   CO05
		,NVL(SUM(Q2.CO06),0)	AS   CO06
		,NVL(SUM(Q2.CO07),0)	AS   CO07
		,NVL(SUM(Q2.CP01),0)	AS   CP01
		,NVL(SUM(Q2.CP02),0)	AS   CP02
		,NVL(SUM(Q2.CP03),0)	AS   CP03
		,NVL(SUM(Q2.CQ01),0)	AS   CQ01
		,NVL(SUM(Q2.CQ02),0)	AS   CQ02
		,NVL(SUM(Q2.CQ03),0)	AS   CQ03
		,NVL(SUM(Q2.CQ04),0)	AS   CQ04
		,NVL(SUM(Q2.CR01),0)	AS   CR01
		,NVL(SUM(Q2.CT01),0)	AS   CT01
		,NVL(SUM(Q2.CT02),0)	AS   CT02
    
	    ,(	
			NVL(SUM(Q2.CA01),0)+NVL(SUM(Q2.CA02),0)+NVL(SUM(Q2.CA03),0)+NVL(SUM(Q2.CB01),0)+NVL(SUM(Q2.CB02),0)+NVL(SUM(Q2.CB03),0)+NVL(SUM(Q2.CB04),0)+NVL(SUM(Q2.CB05),0)+
			NVL(SUM(Q2.CB06),0)+NVL(SUM(Q2.CB07),0)+NVL(SUM(Q2.CB08),0)+NVL(SUM(Q2.CB09),0)+NVL(SUM(Q2.CB10),0)+NVL(SUM(Q2.CB11),0)+NVL(SUM(Q2.CB12),0)+NVL(SUM(Q2.CC01),0)+NVL(SUM(Q2.CC02),0)+NVL(SUM(Q2.CC03),0)+
			NVL(SUM(Q2.CC04),0)+NVL(SUM(Q2.CD01),0)+NVL(SUM(Q2.CD02),0)+NVL(SUM(Q2.CE01),0)+NVL(SUM(Q2.CE02),0)+NVL(SUM(Q2.CE03),0)+NVL(SUM(Q2.CE04),0)+NVL(SUM(Q2.CF01),0)+NVL(SUM(Q2.CG01),0)+
			NVL(SUM(Q2.CH01),0)+NVL(SUM(Q2.CH02),0)+NVL(SUM(Q2.CH03),0)+NVL(SUM(Q2.CI01),0)+NVL(SUM(Q2.CK01),0)+NVL(SUM(Q2.CL01),0)+NVL(SUM(Q2.CN01),0)+NVL(SUM(Q2.CN02),0)+NVL(SUM(Q2.CN03),0)+NVL(SUM(Q2.CO01),0)+
			NVL(SUM(Q2.CO02),0)+NVL(SUM(Q2.CO03),0)+NVL(SUM(Q2.CO04),0)+NVL(SUM(Q2.CO05),0)+NVL(SUM(Q2.CO06),0)+NVL(SUM(Q2.CO07),0)+NVL(SUM(Q2.CP01),0)+NVL(SUM(Q2.CP02),0)+NVL(SUM(Q2.CP03),0)+
			NVL(SUM(Q2.CQ01),0)+NVL(SUM(Q2.CQ02),0)+NVL(SUM(Q2.CQ03),0)+NVL(SUM(Q2.CQ04),0)+NVL(SUM(Q2.CR01),0)+NVL(SUM(Q2.CT01),0)+NVL(SUM(Q2.CT02),0)
	      ) AS RSUM
	    
	FROM 	
	    (   
	        SELECT 	HGRK_DEPT_CD,HGRK_DEPT_CDNM,DEPT_CD,DEPT_CDNM
	        FROM 	TBL_HR_DEPT_CD       
	        WHERE 	1=1
	       		<dynamic>
	       			<isEmpty prepend="AND" property="hgrk_dept_cd">
						HGRK_DEPT_CD IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y') <!--부문정보 추가 201712 -->        
	       			</isEmpty>
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    DEPT_CD = #dept_cd#
				  	</isNotEmpty>	       		
				</dynamic>       		
	        
	       		<dynamic>
	       		<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				        SELECT 
				            'ZZCSC'        AS HGRK_DEPT_CD  
                        ,'ICCS_CSC'         AS HGRK_DEPT_CDNM
                        ,'ZZCSC'        AS DEPT_CD
                        ,'상담원'             AS DEPT_CDNM
				        FROM DUAL
	       			</isEmpty>				        
				</dynamic>	
				
				<dynamic>        
	       			<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				        SELECT 
				             'ZZZZZ'    	AS HGRK_DEPT_CD  
				            ,'기타부문' 		AS HGRK_DEPT_CDNM
				            ,'ZZZZZ'    	AS DEPT_CD
				            ,'기타'     		AS DEPT_CDNM
				        FROM DUAL
	       			</isEmpty>				        
				</dynamic>	        
					            
	    ) Q1
	    
	    LEFT JOIN
	    
	    ( 	
			SELECT 	 
	   			 G.HGRK_DEPT_CDNM as HGRK_DEPT_CDNM
	   			,G.DEPT_CDNM as DSPSR_CHRG_DEPT
	   			,G.DEPT_CD as DEPT_CD
		        ,SUM(CASE WHEN I.SUBCLAS_CD1='CA01' THEN 1 ELSE 0 END) AS CA01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CA02' THEN 1 ELSE 0 END) AS CA02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CA03' THEN 1 ELSE 0 END) AS CA03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB01' THEN 1 ELSE 0 END) AS CB01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB02' THEN 1 ELSE 0 END) AS CB02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB03' THEN 1 ELSE 0 END) AS CB03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB04' THEN 1 ELSE 0 END) AS CB04 <!-- 사용여부 N -->
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB05' THEN 1 ELSE 0 END) AS CB05 
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB06' THEN 1 ELSE 0 END) AS CB06
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB07' THEN 1 ELSE 0 END) AS CB07
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB08' THEN 1 ELSE 0 END) AS CB08
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB09' THEN 1 ELSE 0 END) AS CB09
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB10' THEN 1 ELSE 0 END) AS CB10
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB11' THEN 1 ELSE 0 END) AS CB11
				,SUM(CASE WHEN I.SUBCLAS_CD1='CB12' THEN 1 ELSE 0 END) AS CB12
				,SUM(CASE WHEN I.SUBCLAS_CD1='CC01' THEN 1 ELSE 0 END) AS CC01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CC02' THEN 1 ELSE 0 END) AS CC02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CC03' THEN 1 ELSE 0 END) AS CC03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CC04' THEN 1 ELSE 0 END) AS CC04
				,SUM(CASE WHEN I.SUBCLAS_CD1='CD01' THEN 1 ELSE 0 END) AS CD01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CD02' THEN 1 ELSE 0 END) AS CD02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CE01' THEN 1 ELSE 0 END) AS CE01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CE02' THEN 1 ELSE 0 END) AS CE02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CE03' THEN 1 ELSE 0 END) AS CE03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CE04' THEN 1 ELSE 0 END) AS CE04
				,SUM(CASE WHEN I.SUBCLAS_CD1='CF01' THEN 1 ELSE 0 END) AS CF01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CG01' THEN 1 ELSE 0 END) AS CG01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CH01' THEN 1 ELSE 0 END) AS CH01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CH02' THEN 1 ELSE 0 END) AS CH02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CH03' THEN 1 ELSE 0 END) AS CH03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CI01' THEN 1 ELSE 0 END) AS CI01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CK01' THEN 1 ELSE 0 END) AS CK01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CL01' THEN 1 ELSE 0 END) AS CL01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CN01' THEN 1 ELSE 0 END) AS CN01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CN02' THEN 1 ELSE 0 END) AS CN02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CN03' THEN 1 ELSE 0 END) AS CN03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO01' THEN 1 ELSE 0 END) AS CO01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO02' THEN 1 ELSE 0 END) AS CO02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO03' THEN 1 ELSE 0 END) AS CO03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO04' THEN 1 ELSE 0 END) AS CO04
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO05' THEN 1 ELSE 0 END) AS CO05
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO06' THEN 1 ELSE 0 END) AS CO06
				,SUM(CASE WHEN I.SUBCLAS_CD1='CO07' THEN 1 ELSE 0 END) AS CO07
				,SUM(CASE WHEN I.SUBCLAS_CD1='CP01' THEN 1 ELSE 0 END) AS CP01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CP02' THEN 1 ELSE 0 END) AS CP02                
				,SUM(CASE WHEN I.SUBCLAS_CD1='CP03' THEN 1 ELSE 0 END) AS CP03
				,SUM(CASE WHEN I.SUBCLAS_CD1='CQ01' THEN 1 ELSE 0 END) AS CQ01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CQ02' THEN 1 ELSE 0 END) AS CQ02
				,SUM(CASE WHEN I.SUBCLAS_CD1='CQ03' THEN 1 ELSE 0 END) AS CQ03 
				,SUM(CASE WHEN I.SUBCLAS_CD1='CQ04' THEN 1 ELSE 0 END) AS CQ04
				,SUM(CASE WHEN I.SUBCLAS_CD1='CR01' THEN 1 ELSE 0 END) AS CR01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CT01' THEN 1 ELSE 0 END) AS CT01
				,SUM(CASE WHEN I.SUBCLAS_CD1='CT02' THEN 1 ELSE 0 END) AS CT02
		        
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			         LEFT JOIN TBL_UNFYCD_SUBCLAS I
                              ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                    LEFT JOIN TBL_UNFYCD_SMLCLAS J
                              ON J.SMLCLAS_CD = I.SMLCLAS_CD    
			       		   
			WHERE 1=1 <!-- G.HGRK_DEPT_CD  IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y')  부분관리가 필요 없는듯....-->        
		   			AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)			
		   			AND A.DSPSR_CHRG_DEPT_CD = G.DEPT_CD 	 <!-- 불만 통계 개선 201711 -->
		   	    	AND J.LRGCLAS_CD = 'NW146'                                 <!-- 불만 통계 개선 201711 -->     
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic>  
		
			GROUP BY G.HGRK_DEPT_CDNM,G.HGRK_DEPT_CD, G.DEPT_CD,G.DEPT_CDNM
			
			UNION ALL
			
	        SELECT 	 
				 'ICCS_CSC' 		AS HGRK_DEPT_CDNM
				,'상담원' 			AS DSPSR_CHRG_DEPT
				,'ZZCSC' 		AS DEPT_CD	
		          ,SUM(CASE WHEN I.SUBCLAS_CD1='CA01' THEN 1 ELSE 0 END) AS CA01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CA02' THEN 1 ELSE 0 END) AS CA02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CA03' THEN 1 ELSE 0 END) AS CA03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB01' THEN 1 ELSE 0 END) AS CB01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB02' THEN 1 ELSE 0 END) AS CB02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB03' THEN 1 ELSE 0 END) AS CB03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB04' THEN 1 ELSE 0 END) AS CB04<!-- 사용여부N -->
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB05' THEN 1 ELSE 0 END) AS CB05
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB06' THEN 1 ELSE 0 END) AS CB06
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB07' THEN 1 ELSE 0 END) AS CB07
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB08' THEN 1 ELSE 0 END) AS CB08
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB09' THEN 1 ELSE 0 END) AS CB09
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB10' THEN 1 ELSE 0 END) AS CB10
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB11' THEN 1 ELSE 0 END) AS CB11
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB12' THEN 1 ELSE 0 END) AS CB12
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC01' THEN 1 ELSE 0 END) AS CC01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC02' THEN 1 ELSE 0 END) AS CC02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC03' THEN 1 ELSE 0 END) AS CC03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC04' THEN 1 ELSE 0 END) AS CC04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CD01' THEN 1 ELSE 0 END) AS CD01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CD02' THEN 1 ELSE 0 END) AS CD02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE01' THEN 1 ELSE 0 END) AS CE01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE02' THEN 1 ELSE 0 END) AS CE02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE03' THEN 1 ELSE 0 END) AS CE03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE04' THEN 1 ELSE 0 END) AS CE04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CF01' THEN 1 ELSE 0 END) AS CF01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CG01' THEN 1 ELSE 0 END) AS CG01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CH01' THEN 1 ELSE 0 END) AS CH01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CH02' THEN 1 ELSE 0 END) AS CH02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CH03' THEN 1 ELSE 0 END) AS CH03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CI01' THEN 1 ELSE 0 END) AS CI01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CK01' THEN 1 ELSE 0 END) AS CK01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CL01' THEN 1 ELSE 0 END) AS CL01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CN01' THEN 1 ELSE 0 END) AS CN01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CN02' THEN 1 ELSE 0 END) AS CN02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CN03' THEN 1 ELSE 0 END) AS CN03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO01' THEN 1 ELSE 0 END) AS CO01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO02' THEN 1 ELSE 0 END) AS CO02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO03' THEN 1 ELSE 0 END) AS CO03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO04' THEN 1 ELSE 0 END) AS CO04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO05' THEN 1 ELSE 0 END) AS CO05
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO06' THEN 1 ELSE 0 END) AS CO06
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO07' THEN 1 ELSE 0 END) AS CO07
					,SUM(CASE WHEN I.SUBCLAS_CD1='CP01' THEN 1 ELSE 0 END) AS CP01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CP02' THEN 1 ELSE 0 END) AS CP02                
					,SUM(CASE WHEN I.SUBCLAS_CD1='CP03' THEN 1 ELSE 0 END) AS CP03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ01' THEN 1 ELSE 0 END) AS CQ01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ02' THEN 1 ELSE 0 END) AS CQ02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ03' THEN 1 ELSE 0 END) AS CQ03 
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ04' THEN 1 ELSE 0 END) AS CQ04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CR01' THEN 1 ELSE 0 END) AS CR01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CT01' THEN 1 ELSE 0 END) AS CT01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CT02' THEN 1 ELSE 0 END) AS CT02
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			         LEFT JOIN TBL_UNFYCD_SUBCLAS I
                              ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                    LEFT JOIN TBL_UNFYCD_SMLCLAS J
                              ON J.SMLCLAS_CD = I.SMLCLAS_CD       
			       		   
			WHERE  1=1 <!-- G.HGRK_DEPT_CD  IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y')  부분관리가 필요 없는듯....-->        
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
					   AND A.DSPSR_YN_OB_CNTR IS NULL <!-- TM센터 불만제외 -->
					   AND A.DSPSR_CHRG_DEPT_CD = 'ICCS'   <!-- 불만통계 개선 201712 -->
                       AND J.LRGCLAS_CD = 'NW146'                                                                                                <!-- 불만통계 개선 201712 -->
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	       		
			
			UNION ALL
			
	        SELECT 	 
				 '기타부문' 		AS HGRK_DEPT_CDNM
				,'기타' 			AS DSPSR_CHRG_DEPT
				,'ZZZZZ' 		AS DEPT_CD	
		          ,SUM(CASE WHEN I.SUBCLAS_CD1='CA01' THEN 1 ELSE 0 END) AS CA01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CA02' THEN 1 ELSE 0 END) AS CA02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CA03' THEN 1 ELSE 0 END) AS CA03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB01' THEN 1 ELSE 0 END) AS CB01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB02' THEN 1 ELSE 0 END) AS CB02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB03' THEN 1 ELSE 0 END) AS CB03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB04' THEN 1 ELSE 0 END) AS CB04<!-- 사용여부 N -->
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB05' THEN 1 ELSE 0 END) AS CB05
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB06' THEN 1 ELSE 0 END) AS CB06
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB07' THEN 1 ELSE 0 END) AS CB07
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB08' THEN 1 ELSE 0 END) AS CB08
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB09' THEN 1 ELSE 0 END) AS CB09
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB10' THEN 1 ELSE 0 END) AS CB10
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB11' THEN 1 ELSE 0 END) AS CB11
					,SUM(CASE WHEN I.SUBCLAS_CD1='CB12' THEN 1 ELSE 0 END) AS CB12
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC01' THEN 1 ELSE 0 END) AS CC01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC02' THEN 1 ELSE 0 END) AS CC02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC03' THEN 1 ELSE 0 END) AS CC03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CC04' THEN 1 ELSE 0 END) AS CC04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CD01' THEN 1 ELSE 0 END) AS CD01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CD02' THEN 1 ELSE 0 END) AS CD02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE01' THEN 1 ELSE 0 END) AS CE01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE02' THEN 1 ELSE 0 END) AS CE02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE03' THEN 1 ELSE 0 END) AS CE03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CE04' THEN 1 ELSE 0 END) AS CE04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CF01' THEN 1 ELSE 0 END) AS CF01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CG01' THEN 1 ELSE 0 END) AS CG01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CH01' THEN 1 ELSE 0 END) AS CH01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CH02' THEN 1 ELSE 0 END) AS CH02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CH03' THEN 1 ELSE 0 END) AS CH03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CI01' THEN 1 ELSE 0 END) AS CI01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CK01' THEN 1 ELSE 0 END) AS CK01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CL01' THEN 1 ELSE 0 END) AS CL01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CN01' THEN 1 ELSE 0 END) AS CN01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CN02' THEN 1 ELSE 0 END) AS CN02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CN03' THEN 1 ELSE 0 END) AS CN03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO01' THEN 1 ELSE 0 END) AS CO01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO02' THEN 1 ELSE 0 END) AS CO02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO03' THEN 1 ELSE 0 END) AS CO03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO04' THEN 1 ELSE 0 END) AS CO04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO05' THEN 1 ELSE 0 END) AS CO05
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO06' THEN 1 ELSE 0 END) AS CO06
					,SUM(CASE WHEN I.SUBCLAS_CD1='CO07' THEN 1 ELSE 0 END) AS CO07
					,SUM(CASE WHEN I.SUBCLAS_CD1='CP01' THEN 1 ELSE 0 END) AS CP01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CP02' THEN 1 ELSE 0 END) AS CP02                
					,SUM(CASE WHEN I.SUBCLAS_CD1='CP03' THEN 1 ELSE 0 END) AS CP03
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ01' THEN 1 ELSE 0 END) AS CQ01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ02' THEN 1 ELSE 0 END) AS CQ02
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ03' THEN 1 ELSE 0 END) AS CQ03 
					,SUM(CASE WHEN I.SUBCLAS_CD1='CQ04' THEN 1 ELSE 0 END) AS CQ04
					,SUM(CASE WHEN I.SUBCLAS_CD1='CR01' THEN 1 ELSE 0 END) AS CR01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CT01' THEN 1 ELSE 0 END) AS CT01
					,SUM(CASE WHEN I.SUBCLAS_CD1='CT02' THEN 1 ELSE 0 END) AS CT02
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_UNFYCD_SUBCLAS I
                              ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                    LEFT JOIN TBL_UNFYCD_SMLCLAS J
                              ON J.SMLCLAS_CD = I.SMLCLAS_CD       
			       		   
			WHERE 1=1 <!-- G.HGRK_DEPT_CD  IN (SELECT HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y')  부분관리가 필요 없는듯....-->        
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
					   AND A.DSPSR_YN_OB_CNTR IS NOT NULL <!-- TM센터에서 처리한건만  -->					   
					   AND J.LRGCLAS_CD = 'NW146'  
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
				
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>					
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	
		) Q2
	
	ON Q1.DEPT_CD = Q2.DEPT_CD
	
	GROUP BY ROLLUP(Q1.HGRK_DEPT_CD,Q1.DEPT_CD)
	ORDER BY Q1.HGRK_DEPT_CD, MAX(Q1.DEPT_CDNM), Q1.HGRK_DEPT_CD,Q1.DEPT_CD	
 	</select> 	
 	
 	
 	<!-- 불만조회 - 불만세부유형별(월) -->
 	<select id="Get_CMP_STT4_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
    
	SELECT 
	    Q1.DSFT_TYP_CD									AS DSFT_TYP_CD
	    ,CASE WHEN Q1.DSFT_TYP_CD IS NULL THEN '전체'
	        ELSE MAX(Q1.DSFT_TYP_CDNM) END  			AS DSFT_TYP_CDNM
	    ,Q1.DSFT_TAXN_TYP_CD							AS DSFT_TAXN_TYP_CD
	    ,CASE WHEN Q1.DSFT_TYP_CD IS NULL THEN '합계'
	          WHEN Q1.DSFT_TAXN_TYP_CD IS NULL THEN '소계'
	        ELSE MAX(Q1.DSFT_TAXN_TYP_CDNM) END 		AS DSFT_TAXN_TYP_CDNM
	    ,NVL(SUM(Q2.DATA1),0)   AS DATA1
	    ,NVL(SUM(Q2.DATA2),0)   AS DATA2
	    ,NVL(SUM(Q2.DATA3),0)   AS DATA3
	    ,NVL(SUM(Q2.QTR1),0)    AS QTR1
	    ,NVL(SUM(Q2.DATA4),0)   AS DATA4
	    ,NVL(SUM(Q2.DATA5),0)   AS DATA5
	    ,NVL(SUM(Q2.DATA6),0)   AS DATA6
	    ,NVL(SUM(Q2.QTR3),0)    AS QTR2
	    ,NVL(SUM(Q2.HALF1),0)   AS HALF1
	    ,NVL(SUM(Q2.DATA7),0)   AS DATA7
	    ,NVL(SUM(Q2.DATA8),0)   AS DATA8
	    ,NVL(SUM(Q2.DATA9),0)   AS DATA9
	    ,NVL(SUM(Q2.QTR3),0)    AS QTR3
	    ,NVL(SUM(Q2.DATA10),0)  AS DATA10
	    ,NVL(SUM(Q2.DATA11),0)  AS DATA11
	    ,NVL(SUM(Q2.DATA12),0)  AS DATA12
	    ,NVL(SUM(Q2.QTR4),0)    AS QTR4
	    ,NVL(SUM(Q2.HALF2),0)   AS HALF2
	    ,NVL(SUM(Q2.TOT),0)     AS TOT
	
	FROM    
	    (
		    SELECT  DSFT_TYP_CD
		           ,DSFT_TAXN_TYP_CD
		           ,DSFT_TYP_CDNM
		           ,DSFT_TAXN_TYP_CDNM 
		    FROM TBL_DSFT_TAXN_TYP_CD
		    WHERE USE_YN = 'Y'
		   		<dynamic>
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>		   				   			
		   		</dynamic>		   		
		    	
		    ORDER BY DSFT_TYP_CD, DSFT_TAXN_TYP_CD
	    ) Q1
	    
	    LEFT JOIN
	    
	    (
			SELECT
		             A.DSFT_TYP_CD      AS DSFT_TYP_CD
		            ,A.DSFT_TAXN_TYP_CD AS DSFT_TAXN_TYP_CD
			        ,A.Data1			AS DATA1
			        ,A.Data2			AS DATA2
			        ,A.Data3			AS DATA3
			        ,(A.Data1 + A.Data2 + A.Data3) AS QTR1
			        ,A.Data4			AS DATA4
			        ,A.Data5			AS DATA5
			        ,A.Data6			AS DATA6
			        ,(A.Data4 + A.Data5 + A.Data6) AS QTR2
			        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6) AS HALF1
			        ,A.Data7			AS DATA7
			        ,A.Data8			AS DATA8
			        ,A.Data9			AS DATA9
			        ,(A.Data7 + A.Data8 + A.Data9) AS QTR3
			        ,A.Data10			AS DATA10
			        ,A.Data11			AS DATA11
			        ,A.Data12			AS DATA12
			        ,(A.Data10 + A.Data11 + A.Data12) AS QTR4
			        ,(A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS HALF2
			        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6 + A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS TOT     
			FROM  	
					(select 	 
	                     A.DSFT_TYP_CD
	                    ,A.DSFT_TAXN_TYP_CD
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
				        ,'0' as RSUM
			
			        from TBL_DSFT_ACPN_PROC A
					        LEFT JOIN TBL_HC_HIST C
					               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
					        LEFT JOIN TBL_CRPN_CUST_BASE D
					       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
					        LEFT JOIN TBL_USR B
					       		   ON A.DSPSR_ID = B.USR_ID 
					        LEFT JOIN TBL_HR_EMP_CD F
					       		   ON A.DSPSR_ID = F.EMP_NO
					        LEFT JOIN TBL_HR_DEPT_CD G 
					       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
					        LEFT JOIN TBL_SAP_CD H	
					       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
					        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
					       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
					       		   
					where (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
		       		<dynamic>
		       			<!-- 년도별 -->   				    	
			    	    <isEqual property="cmb_gubun" compareValue="1">              
			                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
			            </isEqual>
			            <!--  -->
			            <isEqual property="cmb_gubun" compareValue="2">
			            	<isEmpty property="cmb_half">
			            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
			            	</isEmpty>              
			                <isEqual property="cmb_half" compareValue="1">
			                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
							</isEqual>	 
							<isEqual property="cmb_half" compareValue="2">
								and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
							</isEqual>	 
			            </isEqual>	 
			            <isEqual property="cmb_gubun" compareValue="3"> 
			            	<isEmpty>
								and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
			            	</isEmpty>    
			           		<isEqual property="cmb_qua" compareValue="1">
			           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
			           	  	</isEqual>
			           	  	<isEqual property="cmb_qua" compareValue="2">
			           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
			           	  	</isEqual>	 
			           	  	<isEqual property="cmb_qua" compareValue="3">
			           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
			           	  	</isEqual>	 
		           	  		<isEqual property="cmb_qua" compareValue="4">
			           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
			           	  	</isEqual>	 	 
		            	</isEqual>	 				            
			    	 	<isEqual property="cmb_gubun" compareValue="4">              
			            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
			         	</isEqual>	
			    	 	<isEqual property="cmb_gubun" compareValue="5">              
			                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
			         	</isEqual>
					
						<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
						<isEmpty property="dsft_typ_cd">
							<isEqual property="dsft_typ_tot_gbn" compareValue="2">
								AND A.DSFT_TYP_CD IN ('CA','CK')
							</isEqual>
						</isEmpty>						
					  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
					    	A.DSFT_TYP_CD = #dsft_typ_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
					    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
					  	</isNotEmpty>
				  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
						    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
					  	</isNotEmpty>
					    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
						    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
					    </isNotEmpty>			  	
					  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
						    G.HGRK_DEPT_CD = #hgrk_dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
						    G.DEPT_CD = #dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
						    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
					  	</isNotEmpty>
				 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
				 			AND A.HC_YN = 'Y'
				 		</isEqual>
					 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
					 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
					 	</isEqual>
					  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
					  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
					  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
					  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
						    A.PRDCT_CD = #prdct_cd#
					  	</isNotEmpty>			  				 	
					  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
						    A.PRBLM_PENOM_CD = #prblm_penom_cd#
					  	</isNotEmpty>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
				 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
				 	  	</isEqual>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
				 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
				 	  	</isEqual>
					  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
						    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
					  	</isNotEmpty>
					 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND A.VHCL_BIZTR_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
					 	</isEqual>		 	  	
					 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
					 		AND A.RWRD_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
					 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
					 	</isEqual>
					 	
					 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
					 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
					 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
					 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
					 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
					 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
					 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
					 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	
						<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
					 	<isEqual property="cmp_handler" compareValue="1">   
					 		AND	A.DSPSR_YN_CNSLR = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="2">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="3">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="4">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="5">   
					 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="6">   
					 		AND	A.DSPSR_YN_PART_HD = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="7">   
					 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
		       		</dynamic> 					
					
					group by A.DSFT_TYP_CD, A.DSFT_TAXN_TYP_CD
				   	order by A.DSFT_TYP_CD, A.DSFT_TAXN_TYP_CD
				   	) A
	    ) Q2
	    
	    ON Q1.DSFT_TYP_CD = Q2.DSFT_TYP_CD AND Q1.DSFT_TAXN_TYP_CD = Q2.DSFT_TAXN_TYP_CD
	    GROUP BY ROLLUP(Q1.DSFT_TYP_CD,Q1.DSFT_TAXN_TYP_CD)
	    ORDER BY Q1.DSFT_TYP_CD,Q1.DSFT_TAXN_TYP_CD
 	
 	</select>
 	
 	<!-- 불만조회 - 불만세부유형별(월) -->
 	<select id="Get_CMP_STT4_SELECT_1" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
    
	SELECT 
	    Q1.DSFT_TYP_CD									AS DSFT_TYP_CD
	    ,CASE WHEN Q1.DSFT_TYP_CD IS NULL THEN '전체'
	        ELSE MAX(Q1.DSFT_TYP_CDNM) END  			AS DSFT_TYP_CDNM
	    ,Q1.DSFT_TAXN_TYP_CD							AS DSFT_TAXN_TYP_CD
	    ,CASE WHEN Q1.DSFT_TYP_CD IS NULL THEN '합계'
	          WHEN Q1.DSFT_TAXN_TYP_CD IS NULL THEN '소계'
	        ELSE MAX(Q1.DSFT_TAXN_TYP_CDNM) END 		AS DSFT_TAXN_TYP_CDNM
	    ,NVL(SUM(Q2.DATA1),0)   AS DATA1
	    ,NVL(SUM(Q2.DATA2),0)   AS DATA2
	    ,NVL(SUM(Q2.DATA3),0)   AS DATA3
	    ,NVL(SUM(Q2.QTR1),0)    AS QTR1
	    ,NVL(SUM(Q2.DATA4),0)   AS DATA4
	    ,NVL(SUM(Q2.DATA5),0)   AS DATA5
	    ,NVL(SUM(Q2.DATA6),0)   AS DATA6
	    ,NVL(SUM(Q2.QTR3),0)    AS QTR2
	    ,NVL(SUM(Q2.HALF1),0)   AS HALF1
	    ,NVL(SUM(Q2.DATA7),0)   AS DATA7
	    ,NVL(SUM(Q2.DATA8),0)   AS DATA8
	    ,NVL(SUM(Q2.DATA9),0)   AS DATA9
	    ,NVL(SUM(Q2.QTR3),0)    AS QTR3
	    ,NVL(SUM(Q2.DATA10),0)  AS DATA10
	    ,NVL(SUM(Q2.DATA11),0)  AS DATA11
	    ,NVL(SUM(Q2.DATA12),0)  AS DATA12
	    ,NVL(SUM(Q2.QTR4),0)    AS QTR4
	    ,NVL(SUM(Q2.HALF2),0)   AS HALF2
	    ,NVL(SUM(Q2.TOT),0)     AS TOT
	
	FROM    
	    (
			       SELECT   B.SMLCLAS_CD AS DSFT_TYP_CD
							        , A.SUBCLAS_CD1 AS DSFT_TAXN_TYP_CD
							        , B.SMLCLAS_CDNM AS DSFT_TYP_CDNM
							        , A.SUBCLAS_CDNM1 AS DSFT_TAXN_TYP_CDNM    
      		FROM  TBL_UNFYCD_SUBCLAS A
          				, TBL_UNFYCD_SMLCLAS B
          				, TBL_UNFYCD_LRGCLAS C
     		WHERE 1=1
          	AND A.SMLCLAS_CD = B.SMLCLAS_CD
          	AND B.LRGCLAS_CD = C.LRGCLAS_CD   
          	and C.LRGCLAS_CD = 'NW146'
		   		<dynamic>
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>		   				   			
		   		</dynamic>		   		
		    	
		    ORDER BY DSFT_TYP_CD, DSFT_TAXN_TYP_CD
	    ) Q1
	    
	    LEFT JOIN
	    
	    (
			SELECT
		             A.DSFT_TYP_CD      AS DSFT_TYP_CD
		            ,A.DSFT_TAXN_TYP_CD AS DSFT_TAXN_TYP_CD
			        ,A.Data1			AS DATA1
			        ,A.Data2			AS DATA2
			        ,A.Data3			AS DATA3
			        ,(A.Data1 + A.Data2 + A.Data3) AS QTR1
			        ,A.Data4			AS DATA4
			        ,A.Data5			AS DATA5
			        ,A.Data6			AS DATA6
			        ,(A.Data4 + A.Data5 + A.Data6) AS QTR2
			        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6) AS HALF1
			        ,A.Data7			AS DATA7
			        ,A.Data8			AS DATA8
			        ,A.Data9			AS DATA9
			        ,(A.Data7 + A.Data8 + A.Data9) AS QTR3
			        ,A.Data10			AS DATA10
			        ,A.Data11			AS DATA11
			        ,A.Data12			AS DATA12
			        ,(A.Data10 + A.Data11 + A.Data12) AS QTR4
			        ,(A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS HALF2
			        ,(A.Data1 + A.Data2 + A.Data3 + A.Data4 + A.Data5 + A.Data6 + A.Data7 + A.Data8 + A.Data9 + A.Data10 + A.Data11 + A.Data12) AS TOT     
			FROM  	
					(select 	 
	                     A.DSFT_TYP_CD
	                    ,A.DSFT_TAXN_TYP_CD
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
		    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
				        ,'0' as RSUM
			
			        from TBL_DSFT_ACPN_PROC A
					        LEFT JOIN TBL_HC_HIST C
					               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
					        LEFT JOIN TBL_CRPN_CUST_BASE D
					       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
					        LEFT JOIN TBL_USR B
					       		   ON A.DSPSR_ID = B.USR_ID 
					        LEFT JOIN TBL_HR_EMP_CD F
					       		   ON A.DSPSR_ID = F.EMP_NO
					        LEFT JOIN TBL_HR_DEPT_CD G 
					       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
					        LEFT JOIN TBL_SAP_CD H	
					       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
					        LEFT JOIN TBL_UNFYCD_SUBCLAS I
                                      ON A.DSFT_TAXN_TYP_CD = I.SUBCLAS_CD1
                            LEFT JOIN TBL_UNFYCD_SMLCLAS J
                                      ON J.SMLCLAS_CD = I.SMLCLAS_CD    
					       		   
					where (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)					
					 AND J.LRGCLAS_CD = 'NW146'  
                     AND (A.DSPSR_CHRG_DEPT_CD = G.DEPT_CD OR  A. DSPSR_CHRG_DEPT_CD = 'ICCS')    <!-- 불만 통계 개선 201711 -->         
                    <!-- AND A.DSPSR_CHRG_DEPT = G.DEPT_CDNM     불만 통계 개선 201711 -->   
		       		<dynamic>
		       			<!-- 년도별 -->   				    	
			    	    <isEqual property="cmb_gubun" compareValue="1">              
			                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
			            </isEqual>
			            <!--  -->
			            <isEqual property="cmb_gubun" compareValue="2">
			            	<isEmpty property="cmb_half">
			            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
			            	</isEmpty>              
			                <isEqual property="cmb_half" compareValue="1">
			                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
							</isEqual>	 
							<isEqual property="cmb_half" compareValue="2">
								and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
							</isEqual>	 
			            </isEqual>	 
			            <isEqual property="cmb_gubun" compareValue="3"> 
			            	<isEmpty>
								and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
			            	</isEmpty>    
			           		<isEqual property="cmb_qua" compareValue="1">
			           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
			           	  	</isEqual>
			           	  	<isEqual property="cmb_qua" compareValue="2">
			           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
			           	  	</isEqual>	 
			           	  	<isEqual property="cmb_qua" compareValue="3">
			           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
			           	  	</isEqual>	 
		           	  		<isEqual property="cmb_qua" compareValue="4">
			           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
			           	  	</isEqual>	 	 
		            	</isEqual>	 				            
			    	 	<isEqual property="cmb_gubun" compareValue="4">              
			            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
			         	</isEqual>	
			    	 	<isEqual property="cmb_gubun" compareValue="5">              
			                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
			         	</isEqual>
					
						<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
						<isEmpty property="dsft_typ_cd">
							<isEqual property="dsft_typ_tot_gbn" compareValue="2">
								AND A.DSFT_TYP_CD IN ('CA','CK')
							</isEqual>
						</isEmpty>						
					  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
					    	A.DSFT_TYP_CD = #dsft_typ_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
					    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
					  	</isNotEmpty>
				  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
						    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
					  	</isNotEmpty>
					    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
						    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
					    </isNotEmpty>			  	
					  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
						    G.HGRK_DEPT_CD = #hgrk_dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
						    G.DEPT_CD = #dept_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
						    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
					  	</isNotEmpty>
				 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
				 			AND A.HC_YN = 'Y'
				 		</isEqual>
					 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
					 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
					 	</isEqual>
					  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
					  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
					  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
					  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
					  	</isNotEmpty>
					  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
						    A.PRDCT_CD = #prdct_cd#
					  	</isNotEmpty>			  				 	
					  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
						    A.PRBLM_PENOM_CD = #prblm_penom_cd#
					  	</isNotEmpty>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
				 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
				 	  	</isEqual>
				 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
				 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
				 	  	</isEqual>
					  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
						    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
					  	</isNotEmpty>
					 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND A.VHCL_BIZTR_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
					 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
					 	</isEqual>		 	  	
					 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
					 		AND A.RWRD_YN = 'Y'
					 	</isEqual>
					 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
					 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
					 	</isEqual>
					 	
					 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
					 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
					 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
					 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
					 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
					 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
					 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
					 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
					 		</isEqual>
					 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
					 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
					 		</isEqual>
							<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
					 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
					 		</isEqual>
					 	</isEqual>
					 	
						<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
					 	<isEqual property="cmp_handler" compareValue="1">   
					 		AND	A.DSPSR_YN_CNSLR = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="2">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="3">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="4">   
					 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="5">   
					 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="6">   
					 		AND	A.DSPSR_YN_PART_HD = 'Y'
					 	</isEqual>
					 	<isEqual property="cmp_handler" compareValue="7">   
					 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
					 	</isEqual>
		       		</dynamic> 					
					
					group by A.DSFT_TYP_CD, A.DSFT_TAXN_TYP_CD
				   	order by A.DSFT_TYP_CD, A.DSFT_TAXN_TYP_CD
				   	) A
	    ) Q2
	    
	    ON Q1.DSFT_TYP_CD = Q2.DSFT_TYP_CD AND Q1.DSFT_TAXN_TYP_CD = Q2.DSFT_TAXN_TYP_CD
	    GROUP BY ROLLUP(Q1.DSFT_TYP_CD,Q1.DSFT_TAXN_TYP_CD)
	    ORDER BY Q1.DSFT_TYP_CD,Q1.DSFT_TAXN_TYP_CD
 	
 	</select>
 	
 	
	<!-- 불만조회 - 조직별(문제현상)-->
 	<select id="Get_CMP_STT5_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	SELECT
	     Q1.HGRK_DEPT_CD        						AS HGRK_DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '전체' 
	    	ELSE MAX(Q1.HGRK_DEPT_CDNM) END 			AS HGRK_DEPT_CDNM
	    ,Q1.DEPT_CD             						AS DEPT_CD
	    ,CASE WHEN Q1.HGRK_DEPT_CD IS NULL THEN '합계' 
	          WHEN Q1.DEPT_CD IS NULL THEN '소계' 
	        ELSE MAX(Q1.DEPT_CDNM) END  				AS DSPSR_CHRG_DEPT
	    
	    ,NVL(SUM(Q2.CA_NO),0) AS CA_NO
	    ,NVL(SUM(Q2.CA_CA),0) AS CA_CA
	    ,NVL(SUM(Q2.CA_CB),0) AS CA_CB
	    ,NVL(SUM(Q2.CA_CC),0) AS CA_CC
	    ,NVL(SUM(Q2.CA_CD),0) AS CA_CD
	    ,NVL(SUM(Q2.CA_CE),0) AS CA_CE
	    ,NVL(SUM(Q2.CA_CF),0) AS CA_CF
	    ,NVL(SUM(Q2.CA_CG),0) AS CA_CG
	    ,NVL(SUM(Q2.CA_CH),0) AS CA_CH
	    ,NVL(SUM(Q2.CA_CI),0) AS CA_CI
	    ,NVL(SUM(Q2.CA_CJ),0) AS CA_CJ
	    ,NVL(SUM(Q2.CA_CK),0) AS CA_CK
	    ,NVL(SUM(Q2.CA_CL),0) AS CA_CL
	    ,NVL(SUM(Q2.CA_CM),0) AS CA_CM
	    ,NVL(SUM(Q2.CA_CN),0) AS CA_CN
	    ,NVL(SUM(Q2.CA_CO),0) AS CA_CO
	    ,NVL(SUM(Q2.CA_CR),0) AS CA_CR
	    ,NVL(SUM(Q2.CA_CT),0) AS CA_CT
	    ,NVL(SUM(Q2.CA_CU),0) AS CA_CU
	    ,NVL(SUM(Q2.CA_CV),0) AS CA_CV
	    ,NVL(SUM(Q2.CA_CW),0) AS CA_CW
	    ,NVL(SUM(Q2.CA_CX),0) AS CA_CX
	    ,NVL(SUM(Q2.CA_CY),0) AS CA_CY	    	    
	    ,NVL(SUM(Q2.CA_NO),0)+NVL(SUM(Q2.CA_CA),0)+NVL(SUM(Q2.CA_CB),0)+NVL(SUM(Q2.CA_CC),0)+NVL(SUM(Q2.CA_CD),0)+NVL(SUM(Q2.CA_CE),0)+
	     NVL(SUM(Q2.CA_CF),0)+NVL(SUM(Q2.CA_CG),0)+NVL(SUM(Q2.CA_CH),0)+NVL(SUM(Q2.CA_CI),0)+NVL(SUM(Q2.CA_CJ),0)+NVL(SUM(Q2.CA_CK),0)+
	     NVL(SUM(Q2.CA_CL),0)+NVL(SUM(Q2.CA_CM),0)+NVL(SUM(Q2.CA_CN),0)+NVL(SUM(Q2.CA_CO),0)+NVL(SUM(Q2.CA_CR),0)+NVL(SUM(Q2.CA_CT),0)+
	     NVL(SUM(Q2.CA_CU),0)+NVL(SUM(Q2.CA_CV),0)+NVL(SUM(Q2.CA_CW),0)+NVL(SUM(Q2.CA_CX),0)+NVL(SUM(Q2.CA_CY),0) AS CA_SUM
	    
	    ,NVL(SUM(Q2.CK_NO),0) AS CK_NO
	    ,NVL(SUM(Q2.CK_CA),0) AS CK_CA
	    ,NVL(SUM(Q2.CK_CB),0) AS CK_CB
	    ,NVL(SUM(Q2.CK_CC),0) AS CK_CC
	    ,NVL(SUM(Q2.CK_CD),0) AS CK_CD
	    ,NVL(SUM(Q2.CK_CE),0) AS CK_CE
	    ,NVL(SUM(Q2.CK_CF),0) AS CK_CF
	    ,NVL(SUM(Q2.CK_CG),0) AS CK_CG
	    ,NVL(SUM(Q2.CK_CH),0) AS CK_CH
	    ,NVL(SUM(Q2.CK_CI),0) AS CK_CI
	    ,NVL(SUM(Q2.CK_CJ),0) AS CK_CJ
	    ,NVL(SUM(Q2.CK_CK),0) AS CK_CK
	    ,NVL(SUM(Q2.CK_CL),0) AS CK_CL
	    ,NVL(SUM(Q2.CK_CM),0) AS CK_CM
	    ,NVL(SUM(Q2.CK_CN),0) AS CK_CN
	    ,NVL(SUM(Q2.CK_CO),0) AS CK_CO
	    ,NVL(SUM(Q2.CK_CR),0) AS CK_CR
	    ,NVL(SUM(Q2.CK_CT),0) AS CK_CT
	    ,NVL(SUM(Q2.CK_CU),0) AS CK_CU
	    ,NVL(SUM(Q2.CK_CV),0) AS CK_CV
	    ,NVL(SUM(Q2.CK_CW),0) AS CK_CW
	    ,NVL(SUM(Q2.CK_CX),0) AS CK_CX
	    ,NVL(SUM(Q2.CK_CY),0) AS CK_CY
	    ,NVL(SUM(Q2.CK_NO),0)+NVL(SUM(Q2.CK_CA),0)+NVL(SUM(Q2.CK_CB),0)+NVL(SUM(Q2.CK_CC),0)+NVL(SUM(Q2.CK_CD),0)+NVL(SUM(Q2.CK_CE),0)+
	     NVL(SUM(Q2.CK_CF),0)+NVL(SUM(Q2.CK_CG),0)+NVL(SUM(Q2.CK_CH),0)+NVL(SUM(Q2.CK_CI),0)+NVL(SUM(Q2.CK_CJ),0)+NVL(SUM(Q2.CK_CK),0)+
	     NVL(SUM(Q2.CK_CL),0)+NVL(SUM(Q2.CK_CM),0)+NVL(SUM(Q2.CK_CN),0)+NVL(SUM(Q2.CK_CO),0)+NVL(SUM(Q2.CK_CR),0)+NVL(SUM(Q2.CK_CT),0)+
	     NVL(SUM(Q2.CK_CU),0)+NVL(SUM(Q2.CK_CV),0)+NVL(SUM(Q2.CK_CW),0)+NVL(SUM(Q2.CK_CX),0)+NVL(SUM(Q2.CK_CY),0) AS CK_SUM
	     
	    ,NVL(SUM(Q2.CA_NO),0)+NVL(SUM(Q2.CA_CA),0)+NVL(SUM(Q2.CA_CB),0)+NVL(SUM(Q2.CA_CC),0)+NVL(SUM(Q2.CA_CD),0)+NVL(SUM(Q2.CA_CE),0)+
	     NVL(SUM(Q2.CA_CF),0)+NVL(SUM(Q2.CA_CG),0)+NVL(SUM(Q2.CA_CH),0)+NVL(SUM(Q2.CA_CI),0)+NVL(SUM(Q2.CA_CJ),0)+NVL(SUM(Q2.CA_CK),0)+
	     NVL(SUM(Q2.CA_CL),0)+NVL(SUM(Q2.CA_CM),0)+NVL(SUM(Q2.CA_CN),0)+NVL(SUM(Q2.CA_CO),0)+NVL(SUM(Q2.CA_CR),0)+NVL(SUM(Q2.CA_CT),0)+
	     NVL(SUM(Q2.CA_CU),0)+NVL(SUM(Q2.CA_CV),0)+NVL(SUM(Q2.CA_CW),0)+NVL(SUM(Q2.CA_CX),0)+NVL(SUM(Q2.CA_CY),0)+
		 NVL(SUM(Q2.CK_NO),0)+NVL(SUM(Q2.CK_CA),0)+NVL(SUM(Q2.CK_CB),0)+NVL(SUM(Q2.CK_CC),0)+NVL(SUM(Q2.CK_CD),0)+NVL(SUM(Q2.CK_CE),0)+
	     NVL(SUM(Q2.CK_CF),0)+NVL(SUM(Q2.CK_CG),0)+NVL(SUM(Q2.CK_CH),0)+NVL(SUM(Q2.CK_CI),0)+NVL(SUM(Q2.CK_CJ),0)+NVL(SUM(Q2.CK_CK),0)+
	     NVL(SUM(Q2.CK_CL),0)+NVL(SUM(Q2.CK_CM),0)+NVL(SUM(Q2.CK_CN),0)+NVL(SUM(Q2.CK_CO),0)+NVL(SUM(Q2.CK_CR),0)+NVL(SUM(Q2.CK_CT),0)+
	     NVL(SUM(Q2.CK_CU),0)+NVL(SUM(Q2.CK_CV),0)+NVL(SUM(Q2.CK_CW),0)+NVL(SUM(Q2.CK_CX),0)+NVL(SUM(Q2.CK_CY),0) AS TOT	     	     	    	    	    
	    
	    
	FROM 	
	    (   
	        SELECT 	HGRK_DEPT_CD,HGRK_DEPT_CDNM,DEPT_CD,DEPT_CDNM
	        FROM 	TBL_HR_DEPT_CD       
	        WHERE 	1=1
	       		<dynamic>
	       			<isEmpty prepend="AND" property="hgrk_dept_cd">
						HGRK_DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')	       				
	       			</isEmpty>
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    DEPT_CD = #dept_cd#
				  	</isNotEmpty>	       		
				</dynamic>       		
	        
	       		<dynamic>
	       			<isEmpty property="hgrk_dept_cd">	        
				        UNION ALL
				        
				        SELECT 
				             'ZZZZZ'    	AS HGRK_DEPT_CD  
				            ,'기타부문' 		AS HGRK_DEPT_CDNM
				            ,'ZZZZZ'    	AS DEPT_CD
				            ,'기타'     		AS DEPT_CDNM
				        FROM DUAL
	       			</isEmpty>				        
				</dynamic>	        
					            
	    ) Q1
	    
	    LEFT JOIN
	    
	    ( 	
			SELECT 	 
	   			 G.HGRK_DEPT_CDNM as HGRK_DEPT_CDNM
	   			,G.DEPT_CDNM as DSPSR_CHRG_DEPT
	   			,G.DEPT_CD as DEPT_CD
	   			,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD IS NULL THEN 1 ELSE 0 END) AS CA_NO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CA' THEN 1 ELSE 0 END)    AS CA_CA
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CB' THEN 1 ELSE 0 END)    AS CA_CB
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CC' THEN 1 ELSE 0 END)    AS CA_CC
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CD' THEN 1 ELSE 0 END)    AS CA_CD
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CE' THEN 1 ELSE 0 END)    AS CA_CE
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CF' THEN 1 ELSE 0 END)    AS CA_CF
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CG' THEN 1 ELSE 0 END)    AS CA_CG
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CH' THEN 1 ELSE 0 END)    AS CA_CH
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CI' THEN 1 ELSE 0 END)    AS CA_CI
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CJ' THEN 1 ELSE 0 END)    AS CA_CJ
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CK' THEN 1 ELSE 0 END)    AS CA_CK
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CL' THEN 1 ELSE 0 END)    AS CA_CL
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CM' THEN 1 ELSE 0 END)    AS CA_CM
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CN' THEN 1 ELSE 0 END)    AS CA_CN
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CO' THEN 1 ELSE 0 END)    AS CA_CO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CR' THEN 1 ELSE 0 END)    AS CA_CR
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CT' THEN 1 ELSE 0 END)    AS CA_CT
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CU' THEN 1 ELSE 0 END)    AS CA_CU
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CV' THEN 1 ELSE 0 END)    AS CA_CV
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CW' THEN 1 ELSE 0 END)    AS CA_CW
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CX' THEN 1 ELSE 0 END)    AS CA_CX
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CY' THEN 1 ELSE 0 END)    AS CA_CY
		        
	   			,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD IS NULL THEN 1 ELSE 0 END) AS CK_NO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CA' THEN 1 ELSE 0 END)    AS CK_CA
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CB' THEN 1 ELSE 0 END)    AS CK_CB
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CC' THEN 1 ELSE 0 END)    AS CK_CC
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CD' THEN 1 ELSE 0 END)    AS CK_CD
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CE' THEN 1 ELSE 0 END)    AS CK_CE
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CF' THEN 1 ELSE 0 END)    AS CK_CF
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CG' THEN 1 ELSE 0 END)    AS CK_CG
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CH' THEN 1 ELSE 0 END)    AS CK_CH
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CI' THEN 1 ELSE 0 END)    AS CK_CI
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CJ' THEN 1 ELSE 0 END)    AS CK_CJ
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CK' THEN 1 ELSE 0 END)    AS CK_CK
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CL' THEN 1 ELSE 0 END)    AS CK_CL
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CM' THEN 1 ELSE 0 END)    AS CK_CM
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CN' THEN 1 ELSE 0 END)    AS CK_CN
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CO' THEN 1 ELSE 0 END)    AS CK_CO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CR' THEN 1 ELSE 0 END)    AS CK_CR
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CT' THEN 1 ELSE 0 END)    AS CK_CT
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CU' THEN 1 ELSE 0 END)    AS CK_CU
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CV' THEN 1 ELSE 0 END)    AS CK_CV
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CW' THEN 1 ELSE 0 END)    AS CK_CW
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CX' THEN 1 ELSE 0 END)    AS CK_CX
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CY' THEN 1 ELSE 0 END)    AS CK_CY
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE G.HGRK_DEPT_CD IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048')
		   			AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
					AND A.DSFT_TYP_CD IN ('CA','CK')		   						
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
									
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic>  
		
			GROUP BY G.HGRK_DEPT_CDNM,G.HGRK_DEPT_CD, G.DEPT_CD,G.DEPT_CDNM
			
			UNION ALL
			
	        SELECT 	 
				 '기타부문' 		AS HGRK_DEPT_CDNM
				,'기타' 			AS DSPSR_CHRG_DEPT
				,'ZZZZZ' 		AS DEPT_CD	
	   			,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD IS NULL THEN 1 ELSE 0 END) AS CA_NO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CA' THEN 1 ELSE 0 END)    AS CA_CA
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CB' THEN 1 ELSE 0 END)    AS CA_CB
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CC' THEN 1 ELSE 0 END)    AS CA_CC
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CD' THEN 1 ELSE 0 END)    AS CA_CD
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CE' THEN 1 ELSE 0 END)    AS CA_CE
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CF' THEN 1 ELSE 0 END)    AS CA_CF
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CG' THEN 1 ELSE 0 END)    AS CA_CG
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CH' THEN 1 ELSE 0 END)    AS CA_CH
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CI' THEN 1 ELSE 0 END)    AS CA_CI
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CJ' THEN 1 ELSE 0 END)    AS CA_CJ
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CK' THEN 1 ELSE 0 END)    AS CA_CK
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CL' THEN 1 ELSE 0 END)    AS CA_CL
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CM' THEN 1 ELSE 0 END)    AS CA_CM
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CN' THEN 1 ELSE 0 END)    AS CA_CN
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CO' THEN 1 ELSE 0 END)    AS CA_CO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CR' THEN 1 ELSE 0 END)    AS CA_CR
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CT' THEN 1 ELSE 0 END)    AS CA_CT
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CU' THEN 1 ELSE 0 END)    AS CA_CU
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CV' THEN 1 ELSE 0 END)    AS CA_CV
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CW' THEN 1 ELSE 0 END)    AS CA_CW
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CX' THEN 1 ELSE 0 END)    AS CA_CX
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CA' AND A.PRBLM_PENOM_CD='CY' THEN 1 ELSE 0 END)    AS CA_CY
		        
	   			,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD IS NULL THEN 1 ELSE 0 END) AS CK_NO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CA' THEN 1 ELSE 0 END)    AS CK_CA
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CB' THEN 1 ELSE 0 END)    AS CK_CB
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CC' THEN 1 ELSE 0 END)    AS CK_CC
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CD' THEN 1 ELSE 0 END)    AS CK_CD
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CE' THEN 1 ELSE 0 END)    AS CK_CE
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CF' THEN 1 ELSE 0 END)    AS CK_CF
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CG' THEN 1 ELSE 0 END)    AS CK_CG
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CH' THEN 1 ELSE 0 END)    AS CK_CH
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CI' THEN 1 ELSE 0 END)    AS CK_CI
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CJ' THEN 1 ELSE 0 END)    AS CK_CJ
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CK' THEN 1 ELSE 0 END)    AS CK_CK
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CL' THEN 1 ELSE 0 END)    AS CK_CL
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CM' THEN 1 ELSE 0 END)    AS CK_CM
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CN' THEN 1 ELSE 0 END)    AS CK_CN
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CO' THEN 1 ELSE 0 END)    AS CK_CO
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CR' THEN 1 ELSE 0 END)    AS CK_CR
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CT' THEN 1 ELSE 0 END)    AS CK_CT
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CU' THEN 1 ELSE 0 END)    AS CK_CU
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CV' THEN 1 ELSE 0 END)    AS CK_CV
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CW' THEN 1 ELSE 0 END)    AS CK_CW
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CX' THEN 1 ELSE 0 END)    AS CK_CX
		        ,SUM(CASE WHEN A.DSFT_TYP_CD = 'CK' AND A.PRBLM_PENOM_CD='CY' THEN 1 ELSE 0 END)    AS CK_CY
	
	        FROM TBL_DSFT_ACPN_PROC A						<!-- 불만 접수 처리 -->	       		   
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE (G.HGRK_DEPT_CD IS NULL OR G.HGRK_DEPT_CD NOT IN ('E00054','E00056','T21000','E00053','E00042','E00044','JD1000','E00048'))
					   AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
					   AND A.DSFT_TYP_CD IN ('CA','CK')					   
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
									
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
	
		) Q2
	
	ON Q1.DEPT_CD = Q2.DEPT_CD
	
	GROUP BY ROLLUP(Q1.HGRK_DEPT_CD,Q1.DEPT_CD)
	ORDER BY Q1.HGRK_DEPT_CD, MAX(Q1.DEPT_CDNM), Q1.HGRK_DEPT_CD,Q1.DEPT_CD	 	
 	
 	</select>
 	
	<!-- 불만조회 - 문제현상별(월)-->
 	<select id="Get_CMP_STT6_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	
	SELECT
	     Q1.DSFT_TYP_CD								AS DSFT_TYP_CD     
	    ,CASE WHEN Q1.DSFT_TYP_CD IS NULL THEN '전체' 
	    	ELSE MAX(Q1.DSFT_TYP_CDNM) END 			AS DSFT_TYP_CDNM     
	    ,Q1.PRBLM_PENOM_CD   						AS PRBLM_PENOM_CD 
	    ,CASE WHEN Q1.DSFT_TYP_CD IS NULL THEN '합계' 
	          WHEN Q1.PRBLM_PENOM_CD IS NULL THEN '소계' 
	        ELSE MAX(Q1.PRBLM_PENOM_CDNM) END  		AS PRBLM_PENOM_CDNM    
	    
	    , NVL(SUM(Q2.Data1),0)			AS DATA1
	    , NVL(SUM(Q2.Data2),0)			AS DATA2
	    , NVL(SUM(Q2.Data3),0)			AS DATA3
	    ,(NVL(SUM(Q2.Data1),0) + NVL(SUM(Q2.Data2),0) + NVL(SUM(Q2.Data3),0)) AS QTR1
	    , NVL(SUM(Q2.Data4),0)			AS DATA4
	    , NVL(SUM(Q2.Data5),0)			AS DATA5
	    , NVL(SUM(Q2.Data6),0)			AS DATA6
	    ,(NVL(SUM(Q2.Data4),0) + NVL(SUM(Q2.Data5),0) + NVL(SUM(Q2.Data6),0)) AS QTR2
	    ,(NVL(SUM(Q2.Data1),0) + NVL(SUM(Q2.Data2),0) + NVL(SUM(Q2.Data3),0) + 
	      NVL(SUM(Q2.Data4),0) + NVL(SUM(Q2.Data5),0) + NVL(SUM(Q2.Data6),0)) AS HALF1
	    , NVL(SUM(Q2.Data7),0)			AS DATA7
	    , NVL(SUM(Q2.Data8),0)			AS DATA8
	    , NVL(SUM(Q2.Data9),0)			AS DATA9
	    ,(NVL(SUM(Q2.Data7),0) + NVL(SUM(Q2.Data8),0) + NVL(SUM(Q2.Data9),0)) AS QTR3
	    , NVL(SUM(Q2.Data10),0)			AS DATA10
	    , NVL(SUM(Q2.Data11),0)			AS DATA11
	    , NVL(SUM(Q2.Data12),0)			AS DATA12
	    ,(NVL(SUM(Q2.Data10),0) + NVL(SUM(Q2.Data11),0) + NVL(SUM(Q2.Data12),0)) AS QTR4
	    ,(NVL(SUM(Q2.Data7),0) + NVL(SUM(Q2.Data8),0) + NVL(SUM(Q2.Data9),0) + 
	      NVL(SUM(Q2.Data10),0) + NVL(SUM(Q2.Data11),0) + NVL(SUM(Q2.Data12),0)) AS HALF2
	    ,(NVL(SUM(Q2.Data1),0) + NVL(SUM(Q2.Data2),0) + NVL(SUM(Q2.Data3),0) + 
	      NVL(SUM(Q2.Data4),0)+ NVL(SUM(Q2.Data5),0) + NVL(SUM(Q2.Data6),0) + 
	      NVL(SUM(Q2.Data7),0) + NVL(SUM(Q2.Data8),0) + NVL(SUM(Q2.Data9),0) + 
	      NVL(SUM(Q2.Data10),0) + NVL(SUM(Q2.Data11),0) + NVL(SUM(Q2.Data12),0)) AS TOT
	FROM
	    (
	        <dynamic>
		        <isEmpty property="dsft_typ_cd">
		        SELECT  
		                'CA'            AS DSFT_TYP_CD
		                ,'품질'         AS DSFT_TYP_CDNM
		                ,DSFT_TYP_CD    AS PRBLM_PENOM_CD
		                ,DSFT_TYP_CDNM  AS PRBLM_PENOM_CDNM
		        FROM TBL_DSFT_TYP_CD
		        WHERE DEL_YN = 'Y'
			  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
				    DSFT_TYP_CD = #prblm_penom_cd#
			  	</isNotEmpty>		        
		        
		        UNION ALL
		        
		        SELECT  
		                'CK'            AS DSFT_TYP_CD
		                ,'혼유'         AS DSFT_TYP_CDNM                
		                ,DSFT_TYP_CD    AS PRBLM_PENOM_CD
		                ,DSFT_TYP_CDNM  AS PRBLM_PENOM_CDNM
		        FROM TBL_DSFT_TYP_CD
		        WHERE DEL_YN = 'Y'
			  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
				    DSFT_TYP_CD = #prblm_penom_cd#
			  	</isNotEmpty>		        
		        </isEmpty>
		        
		        <isNotEmpty property="dsft_typ_cd">	
		        	<isEqual property="dsft_typ_cd" compareValue="CA">
			        SELECT  
			                'CA'            AS DSFT_TYP_CD
			                ,'품질'         AS DSFT_TYP_CDNM
			                ,DSFT_TYP_CD    AS PRBLM_PENOM_CD
			                ,DSFT_TYP_CDNM  AS PRBLM_PENOM_CDNM
			        FROM TBL_DSFT_TYP_CD
			        WHERE DEL_YN = 'Y'
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    DSFT_TYP_CD = #prblm_penom_cd#
				  	</isNotEmpty>			        		        	
		        	</isEqual>
		        	
		        	<isEqual property="dsft_typ_cd" compareValue="CK">
			        SELECT  
			                'CK'            AS DSFT_TYP_CD
			                ,'혼유'         AS DSFT_TYP_CDNM                
			                ,DSFT_TYP_CD    AS PRBLM_PENOM_CD
			                ,DSFT_TYP_CDNM  AS PRBLM_PENOM_CDNM
			        FROM TBL_DSFT_TYP_CD
			        WHERE DEL_YN = 'Y'
					<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    DSFT_TYP_CD = #prblm_penom_cd#
				  	</isNotEmpty>			        
		        	</isEqual>		        	
		        </isNotEmpty>
	        </dynamic>
	    ) Q1
	    
	LEFT JOIN
	    (
	        SELECT 	 
		   			 A.DSFT_TYP_CD as DSFT_TYP_CD
		   			,A.PRBLM_PENOM_CD as PRBLM_PENOM_CD
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '01' THEN 1 ELSE 0 END) AS Data1
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '02' THEN 1 ELSE 0 END) AS Data2
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '03' THEN 1 ELSE 0 END) AS Data3          
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '04' THEN 1 ELSE 0 END) AS Data4
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '05' THEN 1 ELSE 0 END) AS Data5
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '06' THEN 1 ELSE 0 END) AS Data6			
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '07' THEN 1 ELSE 0 END) AS Data7
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '08' THEN 1 ELSE 0 END) AS Data8
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '09' THEN 1 ELSE 0 END) AS Data9
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '10' THEN 1 ELSE 0 END) AS Data10
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '11' THEN 1 ELSE 0 END) AS Data11
	    			,SUM(CASE WHEN SUBSTR(A.ACPN_DTM,5,2) = '12' THEN 1 ELSE 0 END) AS Data12
			        
		
	        FROM TBL_DSFT_ACPN_PROC A						
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 
			        LEFT JOIN TBL_HR_EMP_CD F
			       		   ON A.DSPSR_ID = F.EMP_NO
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON F.BLNG_DEPT_CD = G.DEPT_CD
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD
			       		   
			WHERE (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
			       AND A.DSFT_TYP_CD IN ('CA','CK')			
	       		<dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'                                                                  
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
									
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic> 
			       
			GROUP BY A.DSFT_TYP_CD, A.PRBLM_PENOM_CD
		) Q2
		
	ON Q1.DSFT_TYP_CD = Q2.DSFT_TYP_CD AND Q1.PRBLM_PENOM_CD = Q2.PRBLM_PENOM_CD
	
	GROUP BY ROLLUP(Q1.DSFT_TYP_CD,Q1.PRBLM_PENOM_CD)
	ORDER BY Q1.DSFT_TYP_CD,Q1.PRBLM_PENOM_CD 		
 	</select> 	
 	
 		<!-- 불만조회 - 문제원인별-->
 	<select id="Get_CMP_STT7_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
 	
 	
 	
select prdct_data,prdct_data_nm,
        SUM(case when (
            lastdata='01' and (custdata is not null or crpndata is not null or DSFT_CAUS_CD1 is not null or DSFT_CAUS_CD2 is not null) 
         )         
        then 1 else 0 end) as data01,
        
        SUM(case when 
  
            DSFT_CAUS_CD1 is null and DSFT_CAUS_CD2 is null and custdata is null and crpndata is null and trueddata='GSC' and TYPE_CD='CA' then 1 else 0 end )
         
        as data36,
        
        SUM(case when lastdata='03' then 1 else 0 end) as data02,
        SUM(case when lastdata='04' then 1 else 0 end) as data03,
        SUM(case when lastdata='05' then 1 else 0 end) as data04,
        SUM(case when lastdata='06' then 1 else 0 end) as data05,
        SUM(case when lastdata='07' then 1 else 0 end) as data06,
        SUM(case when lastdata='08' then 1 else 0 end) as data07,
        SUM(case when lastdata='09' then 1 else 0 end) as data08,
        SUM(case when lastdata='10' then 1 else 0 end) as data09,
        SUM(case when lastdata='11' then 1 else 0 end) as data10,
        SUM(case when lastdata='13' then 1 else 0 end) as data11,
        SUM(case when lastdata='14' then 1 else 0 end) as data12,
        SUM(case when lastdata='15' then 1 else 0 end) as data13,
        SUM(case when lastdata='16' then 1 else 0 end) as data14,
        SUM(case when lastdata='17' then 1 else 0 end) as data15,
        SUM(case when lastdata='18' then 1 else 0 end) as data16,
        SUM(case when lastdata='19' then 1 else 0 end) as data17,
        SUM(case when lastdata='21' then 1 else 0 end) as data18,
        SUM(case when lastdata='22' then 1 else 0 end) as data19,
        SUM(case when lastdata='23' then 1 else 0 end) as data20,
        SUM(case when lastdata='25' then 1 else 0 end) as data21,
        SUM(case when lastdata='26' then 1 else 0 end) as data22,
        SUM(case when lastdata='29' then 1 else 0 end) as data23,
        SUM(case when lastdata='30' then 1 else 0 end) as data24,
        SUM(case when lastdata='38' or (
        TYPE_CD='CK' and custdata is null and crpndata is null
        )                
        then 1 else 0 end) as data25,
        SUM(case when lastdata='42' then 1 else 0 end) as data26,
        SUM(case when lastdata='43' then 1 else 0 end) as data27,
        SUM(case when lastdata='44' then 1 else 0 end) as data28,
        SUM(case when lastdata='45' then 1 else 0 end) as data29,
        SUM(case when lastdata='46' then 1 else 0 end) as data30,
        SUM(case when lastdata='47' then 1 else 0 end) as data31,
        SUM(case when lastdata='48' then 1 else 0 end) as data32,
        SUM(case when lastdata='49' then 1 else 0 end) as data33,
        SUM(case when lastdata='50' then 1 else 0 end) as data34,
        SUM(case when lastdata='51' then 1 else 0 end) as data35
      ,count(lastdata) as countdata
        
from (
 SELECT A.cust_NM, A.PRDCT_CD as prdct_data,
 J.PRDCT_CDNM as prdct_data_nm,
 A.VHCL_QLIT_DSFT_CAUS_CD_CUST as custdata,
   A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST as crpndata,K.DSFT_CAUS_CD1 as   DSFT_CAUS_CD1,K.DSFT_CAUS_CD2 as  DSFT_CAUS_CD2,
   case 
          when K.DSFT_CAUS_CD1 is null and K.DSFT_CAUS_CD2 is null and NVL(A.VHCL_QLIT_DSFT_CAUS_CD_CUST,'01')=NVL(A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST,'01') then NVL(A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST,'01') 
        when K.DSFT_CAUS_CD1 is null and K.DSFT_CAUS_CD2 is null and NVL(A.VHCL_QLIT_DSFT_CAUS_CD_CUST,'01')!=NVL(A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST,'01') and A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST is not null
         then A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST  
        when K.DSFT_CAUS_CD1 is null and K.DSFT_CAUS_CD2 is null and NVL(A.VHCL_QLIT_DSFT_CAUS_CD_CUST,'01')!=NVL(A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST,'01') and A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST is null and A.VHCL_QLIT_DSFT_CAUS_CD_CUST is not null
         then A.VHCL_QLIT_DSFT_CAUS_CD_CUST 
       
         when NVL(K.DSFT_CAUS_CD1,'01')=NVL(K.DSFT_CAUS_CD2,'01') then NVL(K.DSFT_CAUS_CD2,'01')
         
         when NVL(K.DSFT_CAUS_CD1,'01')!=NVL(K.DSFT_CAUS_CD2,'01') and K.DSFT_CAUS_CD2 is not null
         then K.DSFT_CAUS_CD2 
        when NVL(K.DSFT_CAUS_CD1,'01')!=NVL(K.DSFT_CAUS_CD2,'01') and K.DSFT_CAUS_CD2 is null and K.DSFT_CAUS_CD1 is not null
         then K.DSFT_CAUS_CD1 
         
         end           
         as lastdata,
         B.GRP_CD as trueddata,
         A.DSFT_TYP_CD as TYPE_CD
         
	        FROM TBL_DSFT_ACPN_PROC A						
			     
			        LEFT JOIN TBL_HC_HIST C
			               ON A.DSFT_ACPN_SEQ_NO = C.DSFT_ACPN_SEQ_NO		  
			        LEFT JOIN TBL_CRPN_CUST_BASE D
			       		   ON A.ORGN_PTR_ST_CD = D.CUST_ID        	    	  
			        LEFT JOIN TBL_USR B
			       		   ON A.DSPSR_ID = B.USR_ID 			        
			        LEFT JOIN TBL_HR_DEPT_CD G 
			       		   ON A.DSPSR_CHRG_DEPT = G.DEPT_CDNM
			        LEFT JOIN TBL_SAP_CD H	
			       		   ON (A.ORGN_ENTR_DV_CD = H.CD_ID AND H.CD_CLAS_CD = '1')	
			        LEFT JOIN TBL_DSFT_TAXN_TYP_CD I
			       		   ON A.DSFT_TAXN_TYP_CD = I.DSFT_TAXN_TYP_CD	
			       	LEFT JOIN TBL_PRDCT_CD J
			       		   ON A.PRDCT_CD = J.PRDCT_CD
			    LEFT JOIN (
                            SELECT
                                A.DSFT_ACPN_SEQ_NO, B.*
                                FROM TBL_TST_REQ A
                                INNER JOIN 
                                (SELECT A.TST_ACPN_SEQ_NO 
                                     , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN B.PRDT_CD END) AS PRDCT_CD1
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.PRDT_CD END) AS PRDCT_CD2
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN B.PRDT_DTLS_CD END) AS PRDCT_DTLS_CD1
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.PRDT_DTLS_CD END) AS PRDCT_DTLS_CD2      
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN B.DSFT_CAUSE_CD END) AS DSFT_CAUS_CD1
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.DSFT_CAUSE_CD END) AS DSFT_CAUS_CD2 
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN FUN_GET_DSFT_CAUS_CDNM(B.DSFT_CAUSE_CD)
                                                   ELSE NULL END) AS DSFT_CAUS_CDNM1
                                      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN FUN_GET_DSFT_CAUS_CDNM(B.DSFT_CAUSE_CD)
                                                   ELSE NULL END) AS DSFT_CAUS_CDNM2
                                   FROM TBL_SAMP_CLCT A
                                        INNER JOIN
                                             (SELECT A.TST_ACPN_SEQ_NO
                                                   , A.CLCT_PLCE_DV_CD
                                                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN A.PRDCT_CD 
                                                          WHEN B.RPS_SAMP_YN IS NULL 
                                                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN A.PRDCT_CD
                                                     END PRDT_CD
                                                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN A.PRDCT_DTLS_CD 
                                                          WHEN B.RPS_SAMP_YN IS NULL 
                                                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN A.PRDCT_DTLS_CD
                                                     END PRDT_DTLS_CD
                                                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN B.DSFT_CAUS_CD
                                                          WHEN B.RPS_SAMP_YN IS NULL 
                                                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN B.DSFT_CAUS_CD
                                                     END DSFT_CAUSE_CD
                                                   , ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY B.RPS_SAMP_YN) AS RNK
                                                FROM TBL_SAMP_CLCT A
                                                     LEFT JOIN TBL_SAMP_BY_OFCR_OPNN B
                                                            ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
                                                           AND A.SAMP_NO = B.SAMP_NO   
                                       ) B
                                               ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
                                           AND B.RNK = 1
                                  GROUP BY A.TST_ACPN_SEQ_NO
                                ) B
                                ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
                                WHERE
								(A.DEL_YN IS NULL OR A.DEL_YN = 'N')
                          ) K
                          ON A.DSFT_ACPN_SEQ_NO = K.DSFT_ACPN_SEQ_NO
			       		   
			WHERE (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
			
			   and A.DSFT_TYP_CD IN ('CA','CK')			      
			     <dynamic>
	       			<!-- 년도별 -->   				    	
		    	    <isEqual property="cmb_gubun" compareValue="1">              
		                and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            </isEqual>
		            <!--  -->
		            <isEqual property="cmb_gubun" compareValue="2">
		            	<isEmpty property="cmb_half">
		            		and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'
		            	</isEmpty>              
		                <isEqual property="cmb_half" compareValue="1">
		                	and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0632000000'                                                                  
						</isEqual>	 
						<isEqual property="cmb_half" compareValue="2">
							and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '1232000000'
						</isEqual>	 
		            </isEqual>	 
		            <isEqual property="cmb_gubun" compareValue="3"> 
		            	<isEmpty>
							and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '1232000000'	            	
		            	</isEmpty>    
		           		<isEqual property="cmb_qua" compareValue="1">
		           			and A.ACPN_DTM between #time_key# || '0000000000' and #time_key# || '0332000000'   
		           	  	</isEqual>
		           	  	<isEqual property="cmb_qua" compareValue="2">
		           	   		and A.ACPN_DTM between #time_key# || '0400000000' and #time_key# || '0632000000'   
		           	  	</isEqual>	 
		           	  	<isEqual property="cmb_qua" compareValue="3">
		           	   		and A.ACPN_DTM between #time_key# || '0700000000' and #time_key# || '0932000000'   
		           	  	</isEqual>	 
	           	  		<isEqual property="cmb_qua" compareValue="4">
		           	   		and A.ACPN_DTM between #time_key# || '1000000000' and #time_key# || '1232000000'   
		           	  	</isEqual>	 	 
	            	</isEqual>	 				            
		    	 	<isEqual property="cmb_gubun" compareValue="4">              
		            	and A.ACPN_DTM between #time_key# || '00000000' and #time_key# || '32000000'                                                                  
		         	</isEqual>	
		    	 	<isEqual property="cmb_gubun" compareValue="5">              
		                and A.ACPN_DTM between #time_key# || '000000' and #time_key# || '240000'                                                                  
		         	</isEqual>
					
					<!-- 불만유형이 전체일 때는 두가지 경우 존재(전체, 품질&혼유)		-->				
					<isEmpty property="dsft_typ_cd">
						<isEqual property="dsft_typ_tot_gbn" compareValue="2">
							AND A.DSFT_TYP_CD IN ('CA','CK')
						</isEqual>
					</isEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_typ_cd">				<!-- 불만유형		-->
				    	A.DSFT_TYP_CD = #dsft_typ_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dsft_taxn_typ_cd">			<!-- 불만세부유형		-->
				    	A.DSFT_TAXN_TYP_CD = #dsft_taxn_typ_cd#
				  	</isNotEmpty>
			  		<isNotEmpty prepend="AND" property="orgn_ptr_st_cd">			<!-- 불만발생업체코드(가맹점SAP코드) -->
					    A.ORGN_PTR_ST_CD = #orgn_ptr_st_cd#
				  	</isNotEmpty>
				    <isNotEmpty prepend="AND" property="conn_chnl_kind_cd">			<!-- 접촉채널	-->
					    A.CONN_CHNL_KIND_CD = #conn_chnl_kind_cd#
				    </isNotEmpty>			  	
				  	<isNotEmpty prepend="AND" property="hgrk_dept_cd">				<!-- 부문/본부 -->
					    G.HGRK_DEPT_CD = #hgrk_dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dept_cd">					<!-- 처리팀 -->
					    G.DEPT_CD = #dept_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="dspsr_id_nm">				<!-- 처리자명 		-->
					    (B.USR_NM LIKE '%'|| #dspsr_id_nm# ||'%' OR F.EMP_NM LIKE '%'|| #dspsr_id_nm# ||'%')
				  	</isNotEmpty>
			 		<isEqual property="hc_yn" compareValue="Y"> 					<!-- 해피콜여부  -->
			 			AND A.HC_YN = 'Y'
			 		</isEqual>
				 	<isEqual property="hc_yn" compareValue="N"> 					<!-- 해피콜여부  -->
				 		AND (A.HC_YN = 'N' OR A.HC_YN IS NULL)
				 	</isEqual>
				  	<isNotEmpty prepend="AND" property="attd_sft_cd">				<!-- 태도만족도 		-->
				  		(A.HC_YN = 'Y' AND C.ATTD_SFT_CD = #attd_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="rslt_sft_cd">				<!-- 결과만족도 		-->
				  		(A.HC_YN = 'Y' AND C.RSLT_SFT_CD = #rslt_sft_cd#)
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="hc_uabl_rsn_cd">			<!-- 해피콜불가사유		-->
				  		A.HC_UABL_RSN_CD = #hc_uabl_rsn_cd#
				  	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="prdct_cd">					<!-- 불만제품 		-->
					    A.PRDCT_CD = #prdct_cd#
				  	</isNotEmpty>			  				 	
				  	<isNotEmpty prepend="AND" property="prblm_penom_cd">			<!-- 현상 		-->
					    A.PRBLM_PENOM_CD = #prblm_penom_cd#
				  	</isNotEmpty>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="1">  	<!-- 시료품질 점검결과		-->
			 			AND	A.VHCL_QLIT_DSFT_CAUS_CD_CUST IS NOT NULL
			 	  	</isEqual>
			 	  	<isEqual property="vhcl_qlit_dsft_caus_cd" compareValue="2">   	<!-- 시료품질 점검결과		-->
			 	  		AND	A.VHCL_QLIT_DSFT_CAUS_CD_PTR_ST IS NOT NULL
			 	  	</isEqual>
				  	<isNotEmpty prepend="AND" property="vhcl_biztr_qlit_dsft_typ_cd">			<!-- 품질불만유형 		-->
					    A.VHCL_BIZTR_QLIT_DSFT_TYP_CD = #vhcl_biztr_qlit_dsft_typ_cd#
				  	</isNotEmpty>			 	  	
				 	<isEqual property="vhcl_biztr_yn" compareValue="Y"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND A.VHCL_BIZTR_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="vhcl_biztr_yn" compareValue="N"> 			<!-- Kixx 품질서비스차량 출동 -->
				 		AND (A.VHCL_BIZTR_YN = 'N' OR A.VHCL_BIZTR_YN IS NULL)
				 	</isEqual>		 	  	
				 	<isEqual property="rwrd_yn" compareValue="Y"> 					<!-- 보상여부 -->
				 		AND A.RWRD_YN = 'Y'
				 	</isEqual>
				 	<isEqual property="rwrd_yn" compareValue="N"> 					<!-- 보상여부 -->
				 		AND (A.RWRD_YN = 'N' OR A.RWRD_YN IS NULL)
				 	</isEqual>
				 	
				 	<isEqual property="cps_amt_gbn" compareValue="1"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 주유소 보상금 1만원 미만-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 주유소 보상금 1만원 ~ 10만원-->
				 			AND (A.PTR_ST_CPS_AMT <![CDATA[>=]]> 10000 AND A.PTR_ST_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 주유소 보상금 10만원 초과-->
				 			AND A.PTR_ST_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="2"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 회사 보상금 1만원 미만-->
				 			AND A.CO_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 회사 보상금 1만원 ~ 10만원-->
				 			AND (A.CO_CPS_AMT <![CDATA[>=]]> 10000 AND A.CO_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 회사 보상금 10만원 초과-->
				 			AND A.CO_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	<isEqual property="cps_amt_gbn" compareValue="3"> 				
				 		<isEqual property="cps_amt" compareValue="1">				<!-- 총 보상금 1만원 미만-->
				 			AND A.TOT_CPS_AMT <![CDATA[<]]> 10000
				 		</isEqual>
				 		<isEqual property="cps_amt" compareValue="2">				<!-- 총 보상금 1만원 ~ 10만원-->
				 			AND (A.TOT_CPS_AMT <![CDATA[>=]]> 10000 AND A.TOT_CPS_AMT <![CDATA[<]]> 100000)
				 		</isEqual>
						<isEqual property="cps_amt" compareValue="3">				<!-- 총 보상금 10만원 초과-->
				 			AND A.TOT_CPS_AMT <![CDATA[>]]> 100000
				 		</isEqual>
				 	</isEqual>
				 	
					<!--처리자구분에 체크항목이 하나도 없는 경우, 전체데이터가 조회된다.-->
				 	<isEqual property="cmp_handler" compareValue="1">   
				 		AND	A.DSPSR_YN_CNSLR = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="2">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="3">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="4">   
				 		AND	(A.DSPSR_YN_CNSLR = 'Y' OR A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="5">   
				 		AND	A.DSPSR_YN_DSFT_CHRG = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="6">   
				 		AND	A.DSPSR_YN_PART_HD = 'Y'
				 	</isEqual>
				 	<isEqual property="cmp_handler" compareValue="7">   
				 		AND	(A.DSPSR_YN_DSFT_CHRG = 'Y' OR A.DSPSR_YN_PART_HD = 'Y')
				 	</isEqual>
	       		</dynamic>  
			      
			      ) group by prdct_data,prdct_data_nm
 	</select>
 	
 	<select id="Get_DeptList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
 	        /*CAM120.Get_DeptList_SELECT -- 불만 부문 SELECT쿼리*/
			SELECT 
			   '0'	 AS CHK  ,
			    HGRK_DEPT_CDNM,
			    HGRK_DEPT_CD,
			    DEPT_CDNM,
			    DEPT_CD
			    FROM TBL_HR_DEPT_CD
			    WHERE HGRK_DEPT_CD NOT IN (SELECT  HGRK_DEPT_CD FROM TBL_HR_DEPT_CD_AFTER WHERE USE_YN = 'Y')
			    GROUP BY HGRK_DEPT_CDNM,    HGRK_DEPT_CD,    DEPT_CDNM,    DEPT_CD
			        ORDER BY   HGRK_DEPT_CD
 	</select>
 	 	<select id="Get_DeptList_after_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
 	        /*CAM120.Get_DeptList_after_SELECT -- 불만 부문 SELECT쿼리*/
			SELECT
				 '0'	 AS CHK  , 
				HGRK_DEPT_CDNM,
			    HGRK_DEPT_CD			    
			    FROM TBL_HR_DEPT_CD_AFTER  
			    WHERE USE_YN = 'Y'
			    ORDER BY HGRK_DEPT_CD
 	</select>
 		
<!-- 불만 통계 부문 조회 
	 <parameterMap id="DEPT_INS_PARAM" class="java.util.HashMap">
		<parameter property="I_HGRK_DEPT_CD"	jdbcType="VARCHAR"		javaType="java.lang.String" mode="IN"/>
		<parameter property="I_HGRK_DEPT_CDNM"	jdbcType="VARCHAR"		javaType="java.lang.String" mode="IN"/>
		<parameter property="I_REG_ID"	jdbcType="VARCHAR"		javaType="java.lang.String" mode="IN"/>
		<parameter property="O_RESULT1"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="O_RESULT2"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	-->
	<!--불만 통계 집계 부문 저장 -->
		 <parameterMap id="DEPT_INS_PARAM" class="java.util.HashMap">
		<parameter property="i_hgrk_dept_cd"	jdbcType="VARCHAR"		javaType="java.lang.String" mode="IN"/>
		<parameter property="i_hgrk_dept_cdnm"	jdbcType="VARCHAR"		javaType="java.lang.String" mode="IN"/>
		<parameter property="i_reg_id"	jdbcType="VARCHAR"		javaType="java.lang.String" mode="IN"/>
		<parameter property="o_result1"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="o_result2"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>

	<procedure id="Set_DeptList_INSERT" parameterMap="DEPT_INS_PARAM" resultClass="java.util.HashMap" >
		{ CALL SP_BT_DEPT_INS(?,?,?,?,?) }
	</procedure>

 <!-- 불만통계 부문 삭제  -->
	<update id="Set_DeptList_UPDATE" parameterClass="java.util.HashMap">
	 /*CAM120."Set_DeptList_DELETE" -- 불만 부문 Delete쿼리*/
	UPDATE TBL_HR_DEPT_CD_AFTER 
		SET USE_YN = 'N' 
		, REG_ID = #reg_id#
		, REG_DTM = TO_CHAR(SYSDATE,'YYYYMMDD')
	WHERE HGRK_DEPT_CD = #hgrk_dept_cd# 
	</update> 	
 	
 </sqlMap>

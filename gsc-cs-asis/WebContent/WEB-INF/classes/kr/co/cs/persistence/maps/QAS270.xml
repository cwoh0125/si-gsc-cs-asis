<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="QAS270">
		

	<!-- 년도별 QA 상담사별 통계 -->
	<select id="Get_qa_sta_year" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	  	SELECT 
				    FUN_GET_USRNM(A.CNSLR_ID) as CNSLR_NM		
				    ,TRUNC(ROUND((MAX(A.ASES_YM_1)+MAX(A.ASES_YM_2)+MAX(A.ASES_YM_3)+MAX(A.ASES_YM_4)+MAX(A.ASES_YM_5)+MAX(A.ASES_YM_6)
				    +MAX(A.ASES_YM_7)+MAX(A.ASES_YM_8)+MAX(A.ASES_YM_9)+MAX(A.ASES_YM_10)+MAX(A.ASES_YM_11)+MAX(A.ASES_YM_12))/COUNT(A.ASES_YY),1),1) AS ASES_YM_0
				    ,TRUNC(ROUND(MAX(A.ASES_YM_1),1),1) AS ASES_YM_1
				    ,TRUNC(ROUND(MAX(A.ASES_YM_2),1),1) AS ASES_YM_2
				    ,TRUNC(ROUND(MAX(A.ASES_YM_3),1),1) AS ASES_YM_3
				    ,TRUNC(ROUND(MAX(A.ASES_YM_4),1),1) AS ASES_YM_4
				    ,TRUNC(ROUND(MAX(A.ASES_YM_5),1),1) AS ASES_YM_5
				    ,TRUNC(ROUND(MAX(A.ASES_YM_6),1),1) AS ASES_YM_6
				    ,TRUNC(ROUND(MAX(A.ASES_YM_7),1),1) AS ASES_YM_7
				    ,TRUNC(ROUND(MAX(A.ASES_YM_8),1),1) AS ASES_YM_8
				    ,TRUNC(ROUND(MAX(A.ASES_YM_9),1),1) AS ASES_YM_9
				    ,TRUNC(ROUND(MAX(A.ASES_YM_10),1),1) AS ASES_YM_10
				    ,TRUNC(ROUND(MAX(A.ASES_YM_11),1),1) AS ASES_YM_11
				    ,TRUNC(ROUND(MAX(A.ASES_YM_12),1),1) AS ASES_YM_12
				    
				FROM(
  
  
  SELECT 
				            MAX(ASES_YY) AS ASES_YY
				            ,A.ASES_YM
				            ,A.ASES_MM
				            ,A.CNSLR_ID
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '01' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_1
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '02' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_2
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '03' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_3
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '04' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_4
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '05' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_5
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '06' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_6
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '07' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_7
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '08' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_8
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '09' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_9
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '10' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_10
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '11' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_11
				            ,CASE WHEN COUNT(A.ASES_MM) = 0 THEN 0                    
				            ELSE NVL(CASE WHEN A.ASES_MM = '12' THEN SUM(A.CNSL_AVG_SUM)/COUNT(A.ASES_MM) END,0) END AS ASES_YM_12
				            
				            FROM
				            (
  SELECT
				                E.ASES_YM
				                ,SUBSTR(E.ASES_YM,1,4) AS ASES_YY
				                ,SUBSTR(E.ASES_YM,5,2) AS ASES_MM
				                ,FUN_GET_USRNM(E.CNSLR_ID)
				                ,E.CNSLR_ID
				                ,E.GRP_CD
				                ,SUM(E.CNSL_AVG) AS CNSL_AVG_SUM
				                
				                FROM
				                (
				                    SELECT
				                    DISTINCT bb.CNSLR_ID
				                    , cc.ASES_YM
				                    , aa.GRP_CD
				                    , aa.FIXD_COL                                    
				                    , SUM(bb.ASCR) OVER(PARTITION BY aa.FIXD_COL,dd.GRP_CD,cc.ASES_YM,bb.CNSLR_ID)
				                    / COUNT(bb.SQN) OVER(PARTITION BY aa.FIXD_COL,dd.GRP_CD,cc.ASES_YM,bb.CNSLR_ID) AS CNSL_AVG
				                    
				                    FROM TBL_QA_ASES_INFO_SMLCLAS aa 
				                        INNER JOIN TBL_QA_ASES_DTLS bb
				                        ON (aa.GRP_CD = bb.GRP_CD
				                            AND aa.BIZ_BASC_CD = bb.BIZ_BASC_CD
				                            AND aa.SEQ_NO = bb.SEQ_NO
				                            AND aa.LRGCLAS_CD = bb.LRGCLAS_CD                       
				                            AND aa.MEDCLAS_CD = bb.MEDCLAS_CD
				                            AND aa.SMLCLAS_CD = bb.SMLCLAS_CD)
				                            INNER JOIN TBL_QA_ASES cc 
				                        ON (bb.GRP_CD = bb.GRP_CD 
				                            AND bb.BIZ_BASC_CD = cc.BIZ_BASC_CD 
				                            AND bb.SEQ_NO = cc.SEQ_NO 
				                            AND bb.ASES_DTM = cc.ASES_DTM 
				                            AND bb.SQN = cc.SQN 
				                            AND bb.CNSLR_ID = cc.CNSLR_ID) 
				                            INNER JOIN TBL_CNSLR_PART_HIST dd
				                        ON (cc.ASES_YM = dd.REG_YM AND cc.CNSLR_ID = dd.CNSLR_ID AND aa.GRP_CD = dd.GRP_CD)
				                        left join TBL_USR zz ON bb.CNSLR_ID=zz.usr_id
				                        
				                    WHERE 
				                    		
				                            NVL(cc.DEL_YN,'N') = 'N'
				                        AND NVL(bb.DEL_YN,'N') = 'N' 
				                        AND bb.ASCR IS NOT NULL
				                        AND bb.CNSLR_ID != cc.ASES_ID
				                        AND zz.USE_yn='Y'
				                                 
                                      
				            ) E
				         
				            WHERE SUBSTR(E.ASES_YM,1,4)=#ases_ym#
				            
				            GROUP BY E.ASES_YM,E.GRP_CD,E.CNSLR_ID				            
				            
				            ) A 
				              GROUP BY A.ASES_YM,A.ASES_MM,A.CNSLR_ID 
				                
				                ) A
				                group by FUN_GET_USRNM(A.CNSLR_ID) order by FUN_GET_USRNM(A.CNSLR_ID)
				                
	</select>
</sqlMap>

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="QAS020">
	
	<!-- 
		화면 : QA 평가(QAS020)
	 -->
  	<select id="Get_UsrList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT 		 USR_ID      AS 	CODE		<!-- 상담원ID -->
		     		,USR_NM      AS 	CODE_NM		<!-- 상담원명 -->
		     				     
		  FROM 		 TBL_USR
		      
		 WHERE 		 GRP_CD = #grp_cd#
		 		AND (LVCO_DD IS NULL OR LVCO_DD <![CDATA[>=]]> #last_mm_frst#)
		 		AND  USR_GRD_CD IN ('E','F') AND USE_YN='Y'
				<dynamic>	
					<isNotEmpty prepend="AND" property="part_cd">
						PART_CD = #part_cd#
					</isNotEmpty>				
				</dynamic>			 		
		ORDER BY USR_NM     
 	</select>	 

	<!-- 
		상담원콜내역조회
	 -->
	<select id="GetCnslHist_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">	
		SELECT A.CNSL_SEQ_NO                <!-- 상담 일련번호       -->
		     , A.CNSL_DTM                   <!-- 상담 일시           -->
		     , A.CUST_ID                    <!-- 고객 ID             -->
		     , A.CUST_NM                    <!-- 고객 명             -->
		     , A.WEB_ID                     <!-- 웹 ID               -->
		     , A.CNTC_CHNL_CD               <!-- 접촉 채널 코드      -->
		     , A.CUST_DV_CD                 <!-- 고객 구분 코드      -->
		     , A.CUR_TEL_NO					<!-- 고객전화번호   -->
		     , FUN_GET_HHMMSS(A.CUST_CUR_STR_DTM,A.CUST_CUR_END_DTM)   	AS CUST_CUR_DRTM				<!-- 통화시간 -->
		     , A.BIZ_DV_CD                  <!-- 업무 구분 코드      -->
		     , A.CUR_TYP_CD                 <!-- 통화 유형 코드      -->
		     , A.CNSLR_ID                   <!-- 상담원 ID           -->
		     , B.GRP_CD                     <!-- 그룹코드            -->
		     , FUN_GET_USRNM(A.CNSLR_ID) AS CNSLR_NM                   <!-- 상담원 명           -->
		     , FUN_GET_PARTNM(B.GRP_CD, B.PART_CD) AS PART_CD_NM  <!-- 파트 명           -->
		     , A.EXT_NO                     <!-- 내선 번호           --> 
		     , A.CNSL_CTT                   <!-- 상담 내용           -->
		     , A.ORD_NO                     <!-- 주문 번호           --> 
		     , A.PH_REC_SEQ_NO              <!-- 녹취 일련번호       --> 
		     , A.CMP_ID                     <!-- 캠페인 ID           --> 
		     , A.REG_ID                     <!-- 등록 ID             --> 
		     , A.REG_DTM                    <!-- 등록 일시           --> 
		     , A.LST_CORC_ID                <!-- 최종 수정 ID        --> 
		     , A.LST_CORC_DTM               <!-- 최종 수정 일시      -->		      
		  FROM TBL_CNSL_HIST A
		       LEFT JOIN TBL_USR B
		              ON A.CNSLR_ID = B.USR_ID
		       LEFT JOIN TBL_CNSL_HIST_BIZ_DTLS C
		              ON A.CNSL_SEQ_NO = C.CNSL_SEQ_NO		              
		 WHERE B.GRP_CD = #grp_cd#
		 AND   A.CNSL_DTM BETWEEN #cnsl_dtm_from# || #cnsl_dtm_from_hh# || '00' AND #cnsl_dtm_to# || #cnsl_dtm_to_hh# || '59'
		    <dynamic>		    
				<isNotEmpty prepend="AND" property="usr_id">
			    	A.CNSLR_ID = #usr_id#
			   	</isNotEmpty>
				<isNotEmpty prepend="AND" property="cnsl_seq_no">
			    	A.CNSL_SEQ_NO = #cnsl_seq_no#
			   	</isNotEmpty>			   	
				<isNotEmpty prepend="AND" property="cust_cur_drtm_to">
			    	A.CUST_CUR_DRTM BETWEEN TO_NUMBER(#cust_cur_drtm_from#)  AND TO_NUMBER(#cust_cur_drtm_to#) 
			   	</isNotEmpty>	
				<isNotEmpty prepend="AND" property="biz_dtls1">
			    	C.BIZ_DV_DTLS_CD2 = #biz_dtls1#
			   	</isNotEmpty>	
	   		   	<isEqual  prepend="AND" property="tp_check" compareValue="Y">
			   		A.CUST_ID LIKE 'TP%'
			   	</isEqual>			   				   	
 		 	</dynamic>
		 ORDER BY A.CNSL_DTM DESC
	</select>

	<!-- 
		상담원 업무상세 내역
	 -->
	<select id="GetCnslHistDtls_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">	
		SELECT A.BIZ_DV_DTLS_CD1
		     , A.BIZ_DV_DTLS_CD2
		     , B.BIZ_PROC_DTLS_CDNM1
		     , B.BIZ_PROC_DTLS_CDNM2
		  FROM TBL_CNSL_HIST_BIZ_DTLS A
		       LEFT JOIN TBL_BIZ_DV_CD B
		              ON (    A.BIZ_DV_DTLS_CD1 = B.BIZ_PROC_DTLS_CD1
		                  AND A.BIZ_DV_DTLS_CD2 = B.BIZ_PROC_DTLS_CD2 )
		 WHERE A.CNSL_SEQ_NO = #cnsl_dtl_seq_no#
		ORDER BY A.BIZ_DTLS_SEQ DESC
	</select>

	<!-- 
		상담원평가내역조회
	 -->
	<select id="GetUsrQaInf_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">	
		SELECT GRP_CDNM
		     , USR_NM
		     , ASES_ID
		     , ASES_NM
		     , CASE WHEN ETCO_DD = '' OR ETCO_DD IS NULL 
		            THEN '' 
		            ELSE CASE WHEN LVCO_DD ='' OR LVCO_DD IS NULL
		                      THEN '' 
		                      ELSE ETCO_DD || '~' || LVCO_DD 
		                  END
		         END AS USR_DD 
		     , CASE WHEN (SELECT COUNT(ASCR)
               			  FROM TBL_QA_ASES
              			  WHERE 	GRP_CD = #grp_cd#
                				AND BIZ_BASC_CD = #biz_basc_cd#
                				AND SEQ_NO = (SELECT SEQ_NO FROM TBL_QA_ASES_INFO_GRP WHERE GRP_CD = #grp_cd# AND BIZ_BASC_CD = #biz_basc_cd# AND QA_USAG_DV_CD = '1' AND NVL(USE_YN,'Y') ='Y' AND NVL(DEL_YN,'N') ='N')
		                		AND CNSLR_ID != ASES_ID                				
				                AND CNSLR_ID = #cnslr_id#
				                AND ASES_YM = #last_ases_ym#
				                AND NVL(DEL_YN,'N') = 'N'  
            			 ) = 0 THEN 0 
    			ELSE 		 
		     		TRUNC(ROUND(MONTH_ASCR/(SELECT COUNT(ASCR)
			               			  FROM TBL_QA_ASES
			              			  WHERE 	GRP_CD = #grp_cd#
		                				AND BIZ_BASC_CD = #biz_basc_cd#
		                				AND SEQ_NO = (SELECT SEQ_NO FROM TBL_QA_ASES_INFO_GRP WHERE GRP_CD = #grp_cd# AND BIZ_BASC_CD = #biz_basc_cd# AND QA_USAG_DV_CD = '1' AND NVL(USE_YN,'Y') ='Y' AND NVL(DEL_YN,'N') ='N')
		                				AND CNSLR_ID != ASES_ID
						                AND CNSLR_ID = #cnslr_id#
						                AND ASES_YM = #last_ases_ym#
						                AND NVL(DEL_YN,'N') = 'N'  
            			 			)
		     		,1),1) 
		     	END	AS MONTH_AVG_ASCR
		     , MONTH_ASCR
		     , ASCR_32
		     , ASCR_21
		     , '' AS ASES_DTM
		     , '' AS CNSLR_NM
			 , '' AS GOOD_CALL_YN
			 , '' AS TST_ASES_YN
			 , '' AS MIST_CNSL_YN
			 , '' AS GA_SCOR		     		     		      
		     , '' AS ASES_OPNN
		     , '' AS ASES_OPNN1
		     , '' AS ASES_OPNN2
		     , '' AS IMG_CTT
		     ,'' AS IMG_MIL
		     , GOAL_SCOR
		     
		  FROM (
		        SELECT FUN_GET_GRPNM(A.GRP_CD) GRP_CDNM                                              <!--그룹명-->
		             , A.USR_NM                                                                      <!--상담사-->
		             , #gbl_usr_id# AS ASES_ID
		             , FUN_GET_USRNM(#gbl_usr_id#) AS ASES_NM                                        <!--평가자-->
		             , CASE WHEN A.ETCO_DD IS NULL OR A.LVCO_DD = ''
		                    THEN '' ELSE SUBSTR(A.ETCO_DD,0,4) || '-' || SUBSTR(A.ETCO_DD,5,2) || '-' || SUBSTR(A.ETCO_DD,7,2) END ETCO_DD  <!--입사일-->
		             , CASE WHEN A.LVCO_DD IS NULL OR A.LVCO_DD = ''
		                    THEN TO_CHAR(SYSDATE,'YYYY-MM-DD') ELSE SUBSTR(A.LVCO_DD,0,4) || '-' || SUBSTR(A.LVCO_DD,5,2) || '-' || SUBSTR(A.LVCO_DD,7,2)  END AS LVCO_DD           <!--퇴사일--> 
		             , (
		                 SELECT NVL(SUM(ASCR),0)
		                   FROM TBL_QA_ASES
		                  WHERE GRP_CD = #grp_cd#
                            AND BIZ_BASC_CD = #biz_basc_cd#
                            AND SEQ_NO = (SELECT SEQ_NO FROM TBL_QA_ASES_INFO_GRP WHERE GRP_CD = #grp_cd# AND BIZ_BASC_CD = #biz_basc_cd# AND QA_USAG_DV_CD = '1' AND NVL(USE_YN,'Y') ='Y' AND NVL(DEL_YN,'N') ='N')
							AND CNSLR_ID != ASES_ID                            
                            AND CNSLR_ID = A.USR_ID
                            <!-- 
		                    AND ASES_YM = TO_CHAR(ADD_MONTHS(SYSDATE, -1),'YYYYMM')
 							-->
 							AND ASES_YM = #last_ases_ym#		                    
		                    AND NVL(DEL_YN,'N') = 'N'       
		               ) AS MONTH_ASCR
		             , B.ASCR_32
		             , B.ASCR_21
		             
	                 , (SELECT SUM(BB.GOAL_SCOR)
						  FROM TBL_QA_CNSLR_EXEC_PLAN AA
						       INNER JOIN TBL_QA_CNSLR_EXEC_PLAN_DTLS BB
						               ON (   AA.ASES_YM = BB.ASES_YM
						                  AND AA.CNSLR_ID = BB.CNSLR_ID )
						<!-- 						                  
						 WHERE BB.ASES_YM  = TO_CHAR(SYSDATE,'YYYYMM')
						-->
						 WHERE BB.ASES_YM  = #ases_ym#						
						   AND BB.CNSLR_ID = B.CNSLR_ID	) AS GOAL_SCOR
		          FROM TBL_USR A
		               LEFT JOIN (
		                           SELECT CNSLR_ID
		                           <!-- 
		                                , CASE WHEN (ASCR_2 != 0 AND ASCR_3 != 0) THEN ROUND(((ASCR_3 - ASCR_2)/ASCR_2) * 100,2) || '%' ELSE '' END AS ASCR_32
		                                , CASE WHEN (ASCR_1 != 0 AND ASCR_2 != 0) THEN ROUND(((ASCR_2 - ASCR_1)/ASCR_1) * 100,2) || '%' ELSE '' END AS ASCR_21
		                           -->
										, CASE WHEN (ASCR_2 != 0 AND ASCR_3 != 0) THEN TO_CHAR(ASCR_3 - ASCR_2) ELSE '' END AS ASCR_32
		                                , CASE WHEN (ASCR_1 != 0 AND ASCR_2 != 0) THEN TO_CHAR(ASCR_2 - ASCR_1) ELSE '' END AS ASCR_21		                           		
		                             FROM (
		                                           SELECT CNSLR_ID
		                                                , NVL(MAX(CASE WHEN SQN = '1' THEN TO_NUMBER(ASCR) ELSE 0 END),0) AS ASCR_1
		                                                , NVL(MAX(CASE WHEN SQN = '2' THEN TO_NUMBER(ASCR) ELSE 0 END),0) AS ASCR_2
		                                                , NVL(MAX(CASE WHEN SQN = '3' THEN TO_NUMBER(ASCR) ELSE 0 END),0) AS ASCR_3
		                                             FROM TBL_QA_ASES
		                                            WHERE GRP_CD = #grp_cd#
		                                              AND BIZ_BASC_CD = #biz_basc_cd#
		                                              AND SEQ_NO = (SELECT SEQ_NO FROM TBL_QA_ASES_INFO_GRP WHERE GRP_CD = #grp_cd# AND BIZ_BASC_CD = #biz_basc_cd# AND QA_USAG_DV_CD = '1' AND NVL(USE_YN,'Y') ='Y' AND NVL(DEL_YN,'N') ='N')
		                                              AND CNSLR_ID = #cnslr_id#
		                                        	  AND ASES_YM =	#ases_ym#
		                                              AND NVL(DEL_YN,'N') = 'N'
													  AND CNSLR_ID != ASES_ID		                                                   
		                                            GROUP BY CNSLR_ID
		                                  )
		                          ) B
		                       ON A.USR_ID = B.CNSLR_ID         
		         WHERE A.USR_ID = #cnslr_id#
		      )
	</select>
	
	<!-- 
		상담원 평가리스트
	 -->
	<select id="GetUsrQaMtrgEvlList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">	
		SELECT A.BIZ_BASC_CD              <!-- 업무 기준 코드 -->
		     , A.SEQ_NO					  <!-- 일련번호 -->
		     , A.ASES_DTM                 <!-- 평가 년월일시     -->
		     , A.ASES_YM				  <!-- 평가년월 -->
		     , A.CNSLR_ID                 <!-- 상담원 ID      -->
		     , FUN_GET_USRNM(A.CNSLR_ID) AS CNSLR_NM  <!-- 상담원 명      -->
		     , A.SQN                      <!-- 회차           -->            
		     , A.GRP_CD                   <!-- 그룹 코드      -->
		     , FUN_GET_GRPNM(A.GRP_CD) AS GRP_CD_NM  <!-- 그룹 명     -->
		     , A.ASES_ID                  <!-- 평가 ID        -->
		     , FUN_GET_USRNM(A.ASES_ID) AS ASES_NM
		     , A.CNSL_SEQ_NO              <!-- 상담 일련번호  -->
		     , A.WKG_TRM                  <!-- 근무 기간      -->
		     , A.MIST_CNSL_YN             <!-- 착오 상담 여부 -->
		     , A.ASCR                     <!-- 평점           -->
		     , A.GOAL_SCOR                <!-- 목표 점수      -->
		     , A.SELF_CHCK_YN             <!-- 자기 체크 여부 -->
		     , A.GOOD_CALL_YN             <!-- 양호 콜 여부   -->
		     , A.TST_ASES_YN			  <!-- 평가여부 -->
		     , A.GA_SCOR				  <!-- 가산점      		-->
			 , NVL(A.IMG_APND_YN,'N') AS IMG_APND_YN			  <!-- 이미지여부      	-->
			 , A.IMG_CTT				  <!-- 이미지문구      	-->
			 , A.IMG_MIL				  <!--마일리지점수     	-->
			 , A.QA_IMG 
			 , (SELECT ASES_OPNN
			      FROM TBL_QA_ASES
			     WHERE GRP_CD = A.GRP_CD
				   AND BIZ_BASC_CD = A.BIZ_BASC_CD
				   AND SEQ_NO = A.SEQ_NO
				   AND SQN = A.SQN
				   AND ASES_YM = A.ASES_YM 
				   AND CNSLR_ID = A.CNSLR_ID
				   AND ASES_ID = CNSLR_ID
				   AND CNSL_SEQ_NO = A.CNSL_SEQ_NO
				   AND (DEL_YN IS NULL OR DEL_YN = 'N')
				) AS ASES_OPNN1  <!-- 평가내용 -->			 
			 , (SELECT ASES_OPNN
			      FROM TBL_QA_ASES
			     WHERE GRP_CD = A.GRP_CD
				   AND BIZ_BASC_CD = A.BIZ_BASC_CD
				   AND SEQ_NO = A.SEQ_NO
				   AND SQN = A.SQN
				   AND ASES_YM = A.ASES_YM 
				   AND CNSLR_ID = A.CNSLR_ID
				   AND CNSLR_ID != ASES_ID
				   AND CNSL_SEQ_NO = A.CNSL_SEQ_NO
				   AND (DEL_YN IS NULL OR DEL_YN = 'N')
				) AS ASES_OPNN2 		     
		     , A.REG_ID                   <!-- 등록 ID        -->
		     , A.REG_DTM                  <!-- 등록 일시      -->
		     , A.LST_CORC_ID              <!-- 최종 수정 ID   -->
		     , A.LST_CORC_DTM             <!-- 최종 수정 일시 -->
		  FROM TBL_QA_ASES A
		 WHERE 1 = (CASE WHEN #good_self_yn# = 'GOOD' THEN CASE WHEN A.CNSLR_ID = A.ASES_ID THEN 0 ELSE 1 END
		 				 ELSE CASE #gbl_usr_grd_cd# WHEN 'E' THEN CASE WHEN A.CNSLR_ID = A.ASES_ID THEN 1 ELSE 0 END
		                 						    WHEN 'F' THEN CASE WHEN A.CNSLR_ID = A.ASES_ID THEN 1 ELSE 0 END
		                 	                        ELSE 1
		                 	   END
		             END
		           )
		   AND (A.DEL_YN IS NULL OR A.DEL_YN = 'N')
		   AND A.ASES_ID != A.CNSLR_ID
		   <!-- AND A.ASES_ID = #gbl_usr_id# -->
		    <dynamic>
				<isNotEmpty prepend="AND" property="ases_ym">
			    	A.ASES_YM = #ases_ym#  <!-- 평가년월에 해당하는것만 조회한다. -->
			   	</isNotEmpty>
				<isNotEmpty prepend="AND" property="key_ases_dtm">
			    	A.ASES_DTM = #key_ases_dtm# <!-- 굿콜리스트, 셀프체크조회시 -->
			   	</isNotEmpty>		   			    		    
				<isNotEmpty prepend="AND" property="grp_cd">
			    	A.GRP_CD = #grp_cd#
			   	</isNotEmpty>
				<isNotEmpty prepend="AND" property="biz_basc_cd">
			    	A.BIZ_BASC_CD = #biz_basc_cd#
			   	</isNotEmpty>
				<isNotEmpty prepend="AND" property="sqn">
			    	A.SQN = #sqn#
			   	</isNotEmpty>	
				<isNotEmpty prepend="AND" property="usr_id">
			    	A.CNSLR_ID = #usr_id#
			   	</isNotEmpty>
				<isNotEmpty prepend="AND" property="cnsl_seq_no">
			    	A.CNSL_SEQ_NO = #cnsl_seq_no#
			   	</isNotEmpty>					   	
 		 	</dynamic>  
		 ORDER BY CNSLR_NM, A.SQN
	</select>
		
	<!-- 
		평가리스트조회
	 -->	
	<select id="GetQaMtrgDt_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">	
		SELECT B.LRGCLAS_CDNM
		     , C.MEDCLAS_CDNM
		     , D.SMLCLAS_CDNM
		     , D.ASES_BASC
		     , D.ASGN_SCOR1 
		     , D.ASGN_SCOR2
		     , D.ASGN_SCOR3
		     , D.ASGN_SCOR4
		     , D.GRP_CD
		     , D.BIZ_BASC_CD
		     , D.SEQ_NO
		     , D.LRGCLAS_CD
		     , D.MEDCLAS_CD
		     , D.SMLCLAS_CD
		     , '' AS AGNT_SCO1
		     , '' AS AGNT_SCO2
		     , '' AS AGNT_SCO3
		     , '' AS ASES_OPNN1
		     , '' AS ASES_OPNN2
		     , '' AS GOOD_CALL_YN
		     , '' AS TST_ASES_YN
		     , '' AS ASCR
		     , '' AS CNSLR_ID
		     , '' AS SQN
		     , D.FIXD_COL 
		  FROM TBL_QA_ASES_INFO_GRP A
		       INNER JOIN TBL_QA_ASES_INFO_LRGCLAS B
		               ON (    A.GRP_CD = B.GRP_CD
		                   AND A.BIZ_BASC_CD = B.BIZ_BASC_CD
		                   AND A.SEQ_NO = B.SEQ_NO)
		       INNER JOIN TBL_QA_ASES_INFO_MEDCLAS C
		               ON (    B.GRP_CD = C.GRP_CD
		                   AND B.BIZ_BASC_CD = C.BIZ_BASC_CD
		                   AND B.SEQ_NO = C.SEQ_NO
		                   AND B.LRGCLAS_CD = C.LRGCLAS_CD) 
		       INNER JOIN TBL_QA_ASES_INFO_SMLCLAS D
		               ON (    C.GRP_CD = D.GRP_CD
		                   AND C.BIZ_BASC_CD = D.BIZ_BASC_CD
		                   AND C.SEQ_NO = D.SEQ_NO
		                   AND C.LRGCLAS_CD = D.LRGCLAS_CD
		                   AND C.MEDCLAS_CD = D.MEDCLAS_CD) 
		 WHERE A.GRP_CD = #grp_cd#
		   AND A.BIZ_BASC_CD = #biz_basc_cd#
		   AND A.QA_USAG_DV_CD = '1'
		   AND (A.DEL_YN IS NULL OR A.DEL_YN = 'N')
		   AND (A.USE_YN IS NULL OR A.USE_YN = 'Y')
		   AND (B.DEL_YN IS NULL OR B.DEL_YN = 'N')
		   AND (C.DEL_YN IS NULL OR C.DEL_YN = 'N')      
		   AND (D.DEL_YN IS NULL OR D.DEL_YN = 'N')
		   AND D.FIXD_COL IS NOT NULL
		ORDER BY B.SEQ, C.SEQ, D.SEQ		   	
	</select>
	

	<!-- 
		QA평가테이블 등록한다.
	 -->	
	<insert id="GetQaMtrgEvl_INSERT" parameterClass="java.util.HashMap">
		INSERT INTO TBL_QA_ASES (
		      BIZ_BASC_CD       <!-- 업무 기준 코드 -->
		    , SEQ_NO			<!-- 일련번호 -->  
		    , ASES_DTM          <!-- 평가 년월      -->
		    , CNSLR_ID          <!-- 상담원 ID      -->
		    , SQN               <!-- 회차           -->
		    , GRP_CD            <!-- 그룹 코드      -->
		    , ASES_ID           <!-- 평가 ID        -->
		    , CNSL_SEQ_NO       <!-- 상담 일련번호  -->
		    , MIST_CNSL_YN      <!-- 착오 상담 여부 -->
		    , ASCR              <!-- 평점           -->
		    , GOAL_SCOR         <!-- 목표 점수      -->
		    , SELF_CHCK_YN      <!-- 자기 체크 여부 -->
		    , GOOD_CALL_YN      <!-- 양호 콜 여부   -->
		    , TST_ASES_YN		<!-- 평가여부 -->
		    , ASES_OPNN         <!-- 평가 의견      -->
		    , IMG_APND_YN		<!-- 이미지여부 -->
		    , IMG_CTT			<!-- 이미지문구 -->
		    , IMG_MIL			<!-- 마일리지 점수 -->
		    , GA_SCOR			<!-- 가산점 -->
		    , REG_ID            <!-- 등록 ID        -->
		    , REG_DTM           <!-- 등록 일시      -->
		    , LST_CORC_ID       <!-- 최종 수정 ID   -->
		    , LST_CORC_DTM      <!-- 최종 수정 일시 -->
		    , DEL_YN			<!-- 삭제여부 -->
		    , ASES_YM
		    , QA_IMG
		) VALUES (
		      #biz_basc_cd#
		    , #seq_no#  
		    , #ases_dtm#
		    , #cnslr_id#
		    , #sqn#
		    , #grp_cd#
		    , #gbl_usr_id#
		    , #cnsl_seq_no#
		    , #mist_cnsl_yn#
		    , #ascr#
		    , #goal_scor#
		    , #self_chck_yn#
		    , #good_call_yn#
		    , #tst_ases_yn#
		    , #ases_opnn#
		    , #img_apnd_yn#
		    , #img_ctt#
		    , #img_mil#
		    , #ga_scor#
		    , #gbl_usr_id#
		    , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		    , #gbl_usr_id#
		    , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		    , 'N'
		    , #ases_ym#
		    , #qa_img#
		)		
	</insert>
	
	<!-- 
		QA평가테이블 상세 등록한다.
	 -->	
	<insert id="GetQaMtrgEvlDt_INSERT" parameterClass="java.util.HashMap">			
		INSERT INTO TBL_QA_ASES_DTLS (
			  GRP_CD				<!-- 그룹 코드 -->
		    , BIZ_BASC_CD           <!-- 업무 기준 코드 -->
		    , SEQ_NO				<!-- 일련번호 -->
		    , CNSLR_ID              <!-- 상담원 ID      -->
		    , SQN                   <!-- 회차           -->
			, LRGCLAS_CD			<!-- 대분류 코드    -->
			, MEDCLAS_CD		    <!-- 중분류 코드    -->
		    , SMLCLAS_CD            <!-- 소분류 코드    -->
		    , ASCR                  <!-- 평가점수     -->
			, DEL_YN		    	
			, ASES_DTM          	<!-- 평가 년월      -->
		) VALUES (
			  #grp_cd#			  
		    , #biz_basc_cd#
		    , #seq_no#
		    , #cnslr_id#
		    , #sqn#
			, #lrgclas_cd#
			, #medclas_cd#		    
		    , #smlclas_cd#
		    , #ascr#
		    , 'N'
		    , #ases_dtm#
		)			
	</insert>	


	<update id="GetQaMtrgEvl_UPDATE" parameterClass="java.util.HashMap">
		UPDATE TBL_QA_ASES
		   SET ASES_ID                 = #gbl_usr_id#      <!-- 평가 ID       -->
		     , MIST_CNSL_YN            = #mist_cnsl_yn#    <!-- 착오 상담 여부-->
		     , ASCR                    = #ascr#            <!-- 평점          -->
		     , GOOD_CALL_YN            = #good_call_yn#    <!-- 양호 콜 여부  -->
		     , TST_ASES_YN             = #tst_ases_yn#    
		     , ASES_OPNN               = #ases_opnn#       <!-- 평가 의견     -->
		     , GA_SCOR 				   = #ga_scor#		   <!-- 가산점 -->
		     , IMG_APND_YN			   = #img_apnd_yn#     <!-- 이미지여부     -->
		     , IMG_CTT			   	   = #img_ctt#     	   <!-- 이미지문구     -->
		     , IMG_mil			   	   = #img_mil#     	   <!-- 마일리지 점수     -->
		     , LST_CORC_ID             = #gbl_usr_id#      <!-- 최종 수정 ID  -->
		     , LST_CORC_DTM            = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')    <!-- 최종 수정 일시-->
		     , ASES_YM				   = #ases_ym#		   <!-- 평가년월 -->
		     , QA_IMG                   = #qa_img#
		 WHERE GRP_CD		= #grp_cd#			<!--  	그룹코드 			-->
		   AND BIZ_BASC_CD 	= #biz_basc_cd#		<!--    업무 기준 코드	-->
		   AND SEQ_NO 		= #seq_no#			<!--    일련번호			-->
	       AND CNSLR_ID 	= #cnslr_id#		<!-- 	상담원ID 		-->		   
	       AND SQN			= #sqn#				<!-- 	회차				-->
	       AND ASES_DTM     = #ases_dtm#		<!-- 	평가일시 			-->
	</update>

	<update id="GetQaMtrgEvlDt_UPDATE" parameterClass="java.util.HashMap">
		UPDATE TBL_QA_ASES_DTLS
		   SET ASCR	 		= #ascr#    		<!--	상담원점수	  	-->			 
		 WHERE GRP_CD  		= #grp_cd#			<!-- 	그룹코드			 -->
		   AND BIZ_BASC_CD 	= #biz_basc_cd#		<!--    업무 기준 코드	-->		     
		   AND SEQ_NO 		= #seq_no#			<!--    일련번호			-->
	       AND LRGCLAS_CD 	= #lrgclas_cd#		<!-- 	대분류코드 		-->
	       AND MEDCLAS_CD 	= #medclas_cd#		<!-- 	중분류코드 		-->
	       AND SMLCLAS_CD 	= #smlclas_cd#		<!-- 	소분류코드 		-->		   
	       AND CNSLR_ID 	= #cnslr_id#		<!-- 	상담원ID 		-->
	       AND SQN			= #sqn#				<!-- 	회차				-->
	       AND ASES_DTM     = #ases_dtm#		<!-- 	평가일시 			-->
	</update>	
	

	<update id="GetTmpQaMtrgEvl_DELETE2" parameterClass="java.util.HashMap">
		UPDATE TBL_QA_ASES
		   SET DEL_YN 					= 'Y'
		     , LST_CORC_ID             	= #gbl_usr_id#      <!-- 최종 수정 ID  -->
		     , LST_CORC_DTM           	= TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')    <!-- 최종 수정 일시-->		   
		 WHERE GRP_CD		= #grp_cd#			<!--    그룹코드 			-->
		   AND BIZ_BASC_CD 	= #biz_basc_cd#		<!--    업무 기준 코드	-->		     
		   AND SEQ_NO 		= #seq_no#			<!--    일련번호			-->
	       AND CNSLR_ID 	= #cnslr_id#		<!-- 	상담원ID 		-->
	       AND SQN			= #sqn#				<!-- 	회차				-->
	       AND ASES_DTM     = #ases_dtm#		<!-- 	평가일시 			-->
	</update>	
	<!-- 
	실제 삭제로 변경 허선화대리 요청 2011.08.10
	 -->
	<update id="GetTmpQaMtrgEvl_DELETE" parameterClass="java.util.HashMap">
		DELETE TBL_QA_ASES		   		   
		 WHERE GRP_CD		= #grp_cd#			<!--    그룹코드 			-->
		   AND BIZ_BASC_CD 	= #biz_basc_cd#		<!--    업무 기준 코드	-->		     
		   AND SEQ_NO 		= #seq_no#			<!--    일련번호			-->
	       AND CNSLR_ID 	= #cnslr_id#		<!-- 	상담원ID 		-->
	       AND SQN			= #sqn#				<!-- 	회차				-->
	       AND ASES_YM     = #ases_ym#		<!-- 	평가월 			-->
	</update>		

	<!-- 
		평가타이틀가져오기
	 -->
	<select id="GetQaDataTitle_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT A.SMLCLAS_CD   AS CODE
		     , B.MEDCLAS_CDNM AS SMLCLAS_CDNM
		     , B.GRP_CD
		     , B.BIZ_BASC_CD
		     , B.SEQ_NO		     
		     , B.LRGCLAS_CD
		     , B.MEDCLAS_CD
		     , B.SMLCLAS_CD
		     , '' AS CNSLR_ID
		     , '' AS SQN
		     , '' AS ASCR
		     , '' AS ASES_DTM
		     , B.ASGN_SCOR1 AS MAX_SCOR
		  FROM TBL_UNFYCD_SMLCLAS A
		       LEFT JOIN (
                        SELECT C.FIXD_COL
                             , B.MEDCLAS_CDNM
                             , B.GRP_CD
                             , B.BIZ_BASC_CD
                             , B.SEQ_NO
                             , B.LRGCLAS_CD
                             , B.MEDCLAS_CD
                             , C.SMLCLAS_CD 
                             , C.ASGN_SCOR1    
                          FROM TBL_QA_ASES_INFO_GRP A
                          	   INNER JOIN TBL_QA_ASES_INFO_LRGCLAS A1
                          	           ON (    A.GRP_CD      = A1.GRP_CD
                                           AND A.BIZ_BASC_CD = A1.BIZ_BASC_CD
                                           AND A.SEQ_NO      = A1.SEQ_NO	   )
                               INNER JOIN TBL_QA_ASES_INFO_MEDCLAS B           
                                       ON (    A.GRP_CD      = B.GRP_CD
                                           AND A.BIZ_BASC_CD = B.BIZ_BASC_CD
                                           AND A.SEQ_NO      = B.SEQ_NO
                                           AND A1.LRGCLAS_CD = B.LRGCLAS_CD )
                               INNER JOIN TBL_QA_ASES_INFO_SMLCLAS C
                                       ON (    B.GRP_CD      = C.GRP_CD
                                           AND B.BIZ_BASC_CD = C.BIZ_BASC_CD
                                           AND B.SEQ_NO      = C.SEQ_NO 
                                           AND B.LRGCLAS_CD  = C.LRGCLAS_CD
                                           AND B.MEDCLAS_CD  = C.MEDCLAS_CD)                                                   
                         WHERE A.GRP_CD  =  #grp_cd#
                           AND A.BIZ_BASC_CD = #biz_basc_cd#
                           AND A.QA_USAG_DV_CD = '1'
                           AND (A.USE_YN IS NULL OR A.USE_YN = 'Y')                                                 
                           AND (A1.DEL_YN IS NULL OR A1.DEL_YN = 'N')
                           AND (B.DEL_YN IS NULL OR B.DEL_YN = 'N')	                  
                           AND (C.DEL_YN IS NULL OR C.DEL_YN = 'N')
		                ) B
		              ON  A.SMLCLAS_CD = B.FIXD_COL    
		 WHERE A.LRGCLAS_CD = 'NW042'
		ORDER BY A.SRT_SEQ
	</select>
	
	<!-- 
		평가가져오기-데이터
	 -->	
 	<select id="GetQaDataList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		 SELECT A.QA1  
		      , A.QA2  
		      , A.QA3  
		      , A.QA4  
		      , A.QA5  
		      , A.QA6  
		      , A.QA7  
		      , A.QA8  
		      , A.QA9  
		      , A.QA10
		      , A.QB1
		      , A.QB2  
		      , A.QB3  
		      , A.QB4  
		      , A.QB5  
		      , A.QB6  
		      , A.QB7  
		      , A.QB8  
		      , A.QB9  
		      , A.QB10
		      , A.QC1
		      , A.QC2  
		      , A.QC3  
		      , A.QC4  
		      , A.QC5  
		      , A.QC6  
		      , A.QC7  
		      , A.QC8  
		      , A.QC9  
		      , A.QC10
		     , '' AS TITLE 		     
		     , '' AS SUM_SCO
		  FROM TBL_USR Z
		       LEFT JOIN (
		                 SELECT A.CNSLR_ID 
		                     , MAX(CASE WHEN C.FIXD_COL = 'A1'  THEN B.ASCR END)  AS QA1
		                     , MAX(CASE WHEN C.FIXD_COL = 'A2'  THEN B.ASCR END)  AS QA2
		                     , MAX(CASE WHEN C.FIXD_COL = 'A3'  THEN B.ASCR END)  AS QA3
		                     , MAX(CASE WHEN C.FIXD_COL = 'A4'  THEN B.ASCR END)  AS QA4
		                     , MAX(CASE WHEN C.FIXD_COL = 'A5'  THEN B.ASCR END)  AS QA5
		                     , MAX(CASE WHEN C.FIXD_COL = 'A6'  THEN B.ASCR END)  AS QA6
		                     , MAX(CASE WHEN C.FIXD_COL = 'A7'  THEN B.ASCR END)  AS QA7
		                     , MAX(CASE WHEN C.FIXD_COL = 'A8'  THEN B.ASCR END)  AS QA8
		                     , MAX(CASE WHEN C.FIXD_COL = 'A9'  THEN B.ASCR END)  AS QA9
		                     , MAX(CASE WHEN C.FIXD_COL = 'A10' THEN B.ASCR END)  AS QA10
		                     , MAX(CASE WHEN C.FIXD_COL = 'B1'  THEN B.ASCR END)  AS QB1
		                     , MAX(CASE WHEN C.FIXD_COL = 'B2'  THEN B.ASCR END)  AS QB2
		                     , MAX(CASE WHEN C.FIXD_COL = 'B3'  THEN B.ASCR END)  AS QB3
		                     , MAX(CASE WHEN C.FIXD_COL = 'B4'  THEN B.ASCR END)  AS QB4
		                     , MAX(CASE WHEN C.FIXD_COL = 'B5'  THEN B.ASCR END)  AS QB5
		                     , MAX(CASE WHEN C.FIXD_COL = 'B6'  THEN B.ASCR END)  AS QB6
		                     , MAX(CASE WHEN C.FIXD_COL = 'B7'  THEN B.ASCR END)  AS QB7
		                     , MAX(CASE WHEN C.FIXD_COL = 'B8'  THEN B.ASCR END)  AS QB8
		                     , MAX(CASE WHEN C.FIXD_COL = 'B9'  THEN B.ASCR END)  AS QB9
		                     , MAX(CASE WHEN C.FIXD_COL = 'B10' THEN B.ASCR END)  AS QB10
		                     , MAX(CASE WHEN C.FIXD_COL = 'C1'  THEN B.ASCR END)  AS QC1
		                     , MAX(CASE WHEN C.FIXD_COL = 'C2'  THEN B.ASCR END)  AS QC2
		                     , MAX(CASE WHEN C.FIXD_COL = 'C3'  THEN B.ASCR END)  AS QC3
		                     , MAX(CASE WHEN C.FIXD_COL = 'C4'  THEN B.ASCR END)  AS QC4
		                     , MAX(CASE WHEN C.FIXD_COL = 'C5'  THEN B.ASCR END)  AS QC5
		                     , MAX(CASE WHEN C.FIXD_COL = 'C6'  THEN B.ASCR END)  AS QC6
		                     , MAX(CASE WHEN C.FIXD_COL = 'C7'  THEN B.ASCR END)  AS QC7
		                     , MAX(CASE WHEN C.FIXD_COL = 'C8'  THEN B.ASCR END)  AS QC8
		                     , MAX(CASE WHEN C.FIXD_COL = 'C9'  THEN B.ASCR END)  AS QC9
		                     , MAX(CASE WHEN C.FIXD_COL = 'C10' THEN B.ASCR END)  AS QC10
		                FROM TBL_QA_ASES A
		                     INNER JOIN TBL_QA_ASES_DTLS B ON A.GRP_CD = B.GRP_CD
		                                                  AND A.BIZ_BASC_CD = B.BIZ_BASC_CD
		                                                  AND A.SEQ_NO = B.SEQ_NO
		                                                  AND A.ASES_DTM = B.ASES_DTM
		                                                  AND A.SQN = B.SQN
		                                                  AND A.CNSLR_ID = B.CNSLR_ID
		                    INNER JOIN TBL_QA_ASES_INFO_SMLCLAS C ON B.GRP_CD      = C.GRP_CD     
		                                                         AND B.BIZ_BASC_CD = C.BIZ_BASC_CD
		                                                         AND B.SEQ_NO      = C.SEQ_NO     
		                                                         AND B.LRGCLAS_CD  = C.LRGCLAS_CD 
		                                                         AND B.MEDCLAS_CD  = C.MEDCLAS_CD 
		                                                         AND B.SMLCLAS_CD  = C.SMLCLAS_CD 
		                WHERE A.ASES_ID != A.CNSLR_ID
	                      AND A.GRP_CD = #grp_cd#
	                      AND A.BIZ_BASC_CD = #biz_basc_cd#
	                      AND A.SEQ_NO = (SELECT SEQ_NO FROM TBL_QA_ASES_INFO_GRP WHERE GRP_CD = #grp_cd# AND BIZ_BASC_CD = #biz_basc_cd# AND QA_USAG_DV_CD = '1' AND NVL(USE_YN,'Y') ='Y' AND NVL(DEL_YN,'N') ='N')
	                      AND A.ASES_YM = #ases_ym# 
	                      AND A.SQN = #sqn#
	                      AND A.CNSLR_ID = #cnslr_id#
	                      AND (A.DEL_YN IS NULL OR A.DEL_YN = 'N')
		                GROUP BY A.CNSLR_ID
		                ) A
		             ON Z.USR_ID = A.CNSLR_ID
		 WHERE Z.USR_ID = #cnslr_id#
	UNION ALL
		SELECT  A.QA1
		      , A.QA2  
		      , A.QA3  
		      , A.QA4  
		      , A.QA5  
		      , A.QA6  
		      , A.QA7  
		      , A.QA8  
		      , A.QA9  
		      , A.QA10
		      , A.QB1
		      , A.QB2  
		      , A.QB3  
		      , A.QB4  
		      , A.QB5  
		      , A.QB6  
		      , A.QB7  
		      , A.QB8  
		      , A.QB9  
		      , A.QB10
		      , A.QC1
		      , A.QC2  
		      , A.QC3  
		      , A.QC4  
		      , A.QC5  
		      , A.QC6  
		      , A.QC7  
		      , A.QC8  
		      , A.QC9  
		      , A.QC10			 	     		     		     
		     , '' AS TITLE 		     
		     , '' AS SUM_SCO
		  FROM TBL_USR Z
		       LEFT JOIN (
		                    SELECT A.CNSLR_ID		                    
			                     , MAX(CASE WHEN C.FIXD_COL = 'A1'  THEN B.ASCR END)  AS QA1
			                     , MAX(CASE WHEN C.FIXD_COL = 'A2'  THEN B.ASCR END)  AS QA2
			                     , MAX(CASE WHEN C.FIXD_COL = 'A3'  THEN B.ASCR END)  AS QA3
			                     , MAX(CASE WHEN C.FIXD_COL = 'A4'  THEN B.ASCR END)  AS QA4
			                     , MAX(CASE WHEN C.FIXD_COL = 'A5'  THEN B.ASCR END)  AS QA5
			                     , MAX(CASE WHEN C.FIXD_COL = 'A6'  THEN B.ASCR END)  AS QA6
			                     , MAX(CASE WHEN C.FIXD_COL = 'A7'  THEN B.ASCR END)  AS QA7
			                     , MAX(CASE WHEN C.FIXD_COL = 'A8'  THEN B.ASCR END)  AS QA8
			                     , MAX(CASE WHEN C.FIXD_COL = 'A9'  THEN B.ASCR END)  AS QA9
			                     , MAX(CASE WHEN C.FIXD_COL = 'A10' THEN B.ASCR END)  AS QA10
			                     , MAX(CASE WHEN C.FIXD_COL = 'B1'  THEN B.ASCR END)  AS QB1
			                     , MAX(CASE WHEN C.FIXD_COL = 'B2'  THEN B.ASCR END)  AS QB2
			                     , MAX(CASE WHEN C.FIXD_COL = 'B3'  THEN B.ASCR END)  AS QB3
			                     , MAX(CASE WHEN C.FIXD_COL = 'B4'  THEN B.ASCR END)  AS QB4
			                     , MAX(CASE WHEN C.FIXD_COL = 'B5'  THEN B.ASCR END)  AS QB5
			                     , MAX(CASE WHEN C.FIXD_COL = 'B6'  THEN B.ASCR END)  AS QB6
			                     , MAX(CASE WHEN C.FIXD_COL = 'B7'  THEN B.ASCR END)  AS QB7
			                     , MAX(CASE WHEN C.FIXD_COL = 'B8'  THEN B.ASCR END)  AS QB8
			                     , MAX(CASE WHEN C.FIXD_COL = 'B9'  THEN B.ASCR END)  AS QB9
			                     , MAX(CASE WHEN C.FIXD_COL = 'B10' THEN B.ASCR END)  AS QB10
			                     , MAX(CASE WHEN C.FIXD_COL = 'C1'  THEN B.ASCR END)  AS QC1
			                     , MAX(CASE WHEN C.FIXD_COL = 'C2'  THEN B.ASCR END)  AS QC2
			                     , MAX(CASE WHEN C.FIXD_COL = 'C3'  THEN B.ASCR END)  AS QC3
			                     , MAX(CASE WHEN C.FIXD_COL = 'C4'  THEN B.ASCR END)  AS QC4
			                     , MAX(CASE WHEN C.FIXD_COL = 'C5'  THEN B.ASCR END)  AS QC5
			                     , MAX(CASE WHEN C.FIXD_COL = 'C6'  THEN B.ASCR END)  AS QC6
			                     , MAX(CASE WHEN C.FIXD_COL = 'C7'  THEN B.ASCR END)  AS QC7
			                     , MAX(CASE WHEN C.FIXD_COL = 'C8'  THEN B.ASCR END)  AS QC8
			                     , MAX(CASE WHEN C.FIXD_COL = 'C9'  THEN B.ASCR END)  AS QC9
			                     , MAX(CASE WHEN C.FIXD_COL = 'C10' THEN B.ASCR END)  AS QC10		                         
		                    FROM TBL_QA_ASES A
		                         INNER JOIN TBL_QA_ASES_DTLS B ON A.GRP_CD = B.GRP_CD
		                                                      AND A.BIZ_BASC_CD = B.BIZ_BASC_CD
		                                                      AND A.SEQ_NO = B.SEQ_NO
		                                                      AND A.ASES_DTM = B.ASES_DTM
		                                                      AND A.SQN = B.SQN
		                                                      AND A.CNSLR_ID = B.CNSLR_ID
		                         INNER JOIN TBL_QA_ASES_INFO_SMLCLAS C ON B.GRP_CD      = C.GRP_CD     
		                                                             AND B.BIZ_BASC_CD = C.BIZ_BASC_CD
		                                                             AND B.SEQ_NO      = C.SEQ_NO     
		                                                             AND B.LRGCLAS_CD  = C.LRGCLAS_CD 
		                                                             AND B.MEDCLAS_CD  = C.MEDCLAS_CD 
		                                                             AND B.SMLCLAS_CD  = C.SMLCLAS_CD
		                    WHERE A.ASES_ID = A.CNSLR_ID
		                    AND A.GRP_CD = #grp_cd#
		                    AND A.BIZ_BASC_CD = #biz_basc_cd#
		                    AND A.SEQ_NO = (SELECT SEQ_NO FROM TBL_QA_ASES_INFO_GRP WHERE GRP_CD = #grp_cd# AND BIZ_BASC_CD = #biz_basc_cd# AND QA_USAG_DV_CD = '1' AND NVL(USE_YN,'Y') ='Y' AND NVL(DEL_YN,'N') ='N')  
		                    AND A.ASES_YM = #ases_ym#
		                    AND A.SQN = #sqn#
		                    AND A.CNSLR_ID = #cnslr_id#
		                    AND (A.DEL_YN IS NULL OR A.DEL_YN = 'N')
		                    GROUP BY A.CNSLR_ID
		                ) A
		             ON Z.USR_ID = A.CNSLR_ID
		 WHERE Z.USR_ID = #cnslr_id#		               		
	</select>
	
	<!--
		공개여부설정 
	 -->
	<select id="GetQaRlseYn_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT NVL(RLSE_YN, 'N') AS RLSE_YN
		  FROM TBL_QA_ASES_RLSE_YN
		 WHERE GRP_CD = #grp_cd# 
		   AND BIZ_BASC_CD = #biz_basc_cd#
		   AND ASES_YM = #ases_ym#
		   AND SQN = #sqn#		   
	</select>
	
	<!--
		중복여부확인- 담당자
	 -->
	<select id="GetQaDuplication_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT COUNT(*) AS CNT
		  FROM TBL_QA_ASES
		 WHERE GRP_CD       = #grp_cd#          
		   AND BIZ_BASC_CD  = #biz_basc_cd#     
		   AND SEQ_NO       = #seq_no#          
		   AND ASES_YM      = #ases_ym#         
		   AND SQN          = #sqn#             
		   AND CNSLR_ID     = #cnslr_id#  
		    <dynamic>		    
				<isEqual prepend="AND" property="good_self_yn" compareValue="SELF">
			    	ASES_ID = #cnslr_id#
			   	</isEqual>
			</dynamic>		   
		   AND (DEL_YN IS NULL OR DEL_YN = 'N')
	</select>
	
	<!-- 업무상세콤보2 -->
 	<select id="Get_CmbBizDtls2_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DISTINCT BIZ_PROC_DTLS_CD2         AS CODE
		     , BIZ_PROC_DTLS_CDNM2       AS CODE_NM
		  FROM TBL_BIZ_DV_CD
		 WHERE BIZ_DV_CD = 'BNS'
		   AND USE_YN = 'Y'
			ORDER BY BIZ_PROC_DTLS_CD2	 
 	</select>	
 	
 	<select id="Get_DTL1_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT BIZ_PROC_DTLS_CD1 as CODE
			  ,BIZ_PROC_DTLS_CDNM1 as CODE_NM 
		FROM   TBL_BIZ_DV_CD 
		WHERE  USE_YN='Y' 
		AND    BIZ_DV_CD = 'BNS'
		AND    MIG_FLAG = '3'
		GROUP by BIZ_PROC_DTLS_CD1,BIZ_PROC_DTLS_CDNM1
		ORDER BY BIZ_PROC_DTLS_CDNM1
 	</select>
 	<select id="Get_DTL2_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT BIZ_PROC_DTLS_CD2 as CODE
	          ,BIZ_PROC_DTLS_CDNM2 as CODE_NM 
	    FROM   TBL_BIZ_DV_CD 
	    WHERE  BIZ_PROC_DTLS_CD1=#biz_proc_dtls_cd1# 
	    AND    USE_YN='Y'
	    AND    MIG_FLAG = '3'
		GROUP by BIZ_PROC_DTLS_CD2,BIZ_PROC_DTLS_CDNM2
		ORDER BY BIZ_PROC_DTLS_CDNM2
 	</select>
 	
 	
</sqlMap>

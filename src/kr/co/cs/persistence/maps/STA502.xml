<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="STA502">	
	
	<!-- 기간별 콜 통계 CALL_SUMCNT 인입호 , INBND_HOUSE 응답호-->
	<select id="Get_CallStat_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DATA_GB
		     ,GRP_CD as GRP_CDNM
		     , CASE WHEN BASE IS NULL THEN '합계' ELSE SUBSTR(BASE,0,2)||':'||SUBSTR(BASE,3,2) END AS DAY_NM
		     , CNSL_DT_01
	         , CNSL_DT_02
	         , CNSL_DT_03
	         , CNSL_DT_04
	         , CNSL_DT_05
	         , CNSL_DT_06
	         , CNSL_DT_07
	         , CNSL_DT_08
	         , CNSL_DT_09
	         , CNSL_DT_10
	         , CNSL_DT_11
	         , CNSL_DT_12
	         , CNSL_DT_13
	         , CNSL_DT_14
	         , CNSL_DT_15
	         , CNSL_DT_16
	         , CNSL_DT_17
	         , CNSL_DT_18
	         , CNSL_DT_19
	         , CNSL_DT_20
	         , CNSL_DT_21
	         , CNSL_DT_22
	         , CNSL_DT_23
	         , CNSL_DT_24
	         , CNSL_DT_25
	         , CNSL_DT_26
	         , CNSL_DT_27
	         , CNSL_DT_28
	         , CNSL_DT_29
	         , CNSL_DT_30
	         , CNSL_DT_31             
		FROM
		(       
			SELECT
 				CASE WHEN GRP_CD IS NOT NULL AND BASE IS NULL THEN 'GS'
                	 WHEN GRP_CD IS NULL AND BASE IS NULL THEN 'TS'                    
                     ELSE 'D' END AS DATA_GB,
				GRP_CD,
				SUM(CNSL_DT_01) CNSL_DT_01,
				SUM(CNSL_DT_02) CNSL_DT_02,
				SUM(CNSL_DT_03) CNSL_DT_03,
				SUM(CNSL_DT_04) CNSL_DT_04,
				SUM(CNSL_DT_05) CNSL_DT_05,
				SUM(CNSL_DT_06) CNSL_DT_06,
				SUM(CNSL_DT_07) CNSL_DT_07,
				SUM(CNSL_DT_08) CNSL_DT_08,
				SUM(CNSL_DT_09) CNSL_DT_09,
				SUM(CNSL_DT_10) CNSL_DT_10,
				SUM(CNSL_DT_11) CNSL_DT_11,
				SUM(CNSL_DT_12) CNSL_DT_12,
				SUM(CNSL_DT_13) CNSL_DT_13,
				SUM(CNSL_DT_14) CNSL_DT_14,
				SUM(CNSL_DT_15) CNSL_DT_15,
				SUM(CNSL_DT_16) CNSL_DT_16,
				SUM(CNSL_DT_17) CNSL_DT_17,
				SUM(CNSL_DT_18) CNSL_DT_18,
				SUM(CNSL_DT_19) CNSL_DT_19,
				SUM(CNSL_DT_20) CNSL_DT_20,
				SUM(CNSL_DT_21) CNSL_DT_21,
				SUM(CNSL_DT_22) CNSL_DT_22,
				SUM(CNSL_DT_23) CNSL_DT_23,
				SUM(CNSL_DT_24) CNSL_DT_24,
				SUM(CNSL_DT_25) CNSL_DT_25,
				SUM(CNSL_DT_26) CNSL_DT_26,
				SUM(CNSL_DT_27) CNSL_DT_27,
				SUM(CNSL_DT_28) CNSL_DT_28,
				SUM(CNSL_DT_29) CNSL_DT_29,
				SUM(CNSL_DT_30) CNSL_DT_30,
				SUM(CNSL_DT_31) CNSL_DT_31,
				BASE
			FROM
			(
				 SELECT
		        	 GRP_CD
		             , BASE_TM_00
		             , BASE_TM_30
		             , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '01', CALL_SUM, 0)) AS CNSL_DT_01
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '02', CALL_SUM, 0)) AS CNSL_DT_02
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '03', CALL_SUM, 0)) AS CNSL_DT_03
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '04', CALL_SUM, 0)) AS CNSL_DT_04
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '05', CALL_SUM, 0)) AS CNSL_DT_05
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '06', CALL_SUM, 0)) AS CNSL_DT_06
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '07', CALL_SUM, 0)) AS CNSL_DT_07
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '08', CALL_SUM, 0)) AS CNSL_DT_08
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '09', CALL_SUM, 0)) AS CNSL_DT_09
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '10', CALL_SUM, 0)) AS CNSL_DT_10
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '11', CALL_SUM, 0)) AS CNSL_DT_11
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '12', CALL_SUM, 0)) AS CNSL_DT_12
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '13', CALL_SUM, 0)) AS CNSL_DT_13
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '14', CALL_SUM, 0)) AS CNSL_DT_14
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '15', CALL_SUM, 0)) AS CNSL_DT_15
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '16', CALL_SUM, 0)) AS CNSL_DT_16
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '17', CALL_SUM, 0)) AS CNSL_DT_17
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '18', CALL_SUM, 0)) AS CNSL_DT_18
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '19', CALL_SUM, 0)) AS CNSL_DT_19
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '20', CALL_SUM, 0)) AS CNSL_DT_20
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '21', CALL_SUM, 0)) AS CNSL_DT_21
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '22', CALL_SUM, 0)) AS CNSL_DT_22
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '23', CALL_SUM, 0)) AS CNSL_DT_23
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '24', CALL_SUM, 0)) AS CNSL_DT_24
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '25', CALL_SUM, 0)) AS CNSL_DT_25
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '26', CALL_SUM, 0)) AS CNSL_DT_26
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '27', CALL_SUM, 0)) AS CNSL_DT_27
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '28', CALL_SUM, 0)) AS CNSL_DT_28
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '29', CALL_SUM, 0)) AS CNSL_DT_29
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '30', CALL_SUM, 0)) AS CNSL_DT_30
				     , SUM(DECODE(SUBSTR(TT.BASE_TM_30,7,2), '31', CALL_SUM, 0)) AS CNSL_DT_31  
					 , BASE
				FROM 
				(
					SELECT T1.GRP_CD
					     , T1.PART_CD
					     , T1.GRP_CDNM
					     , T1.PART_CDNM
					     , T1.BASE_TM_00
					     , T1.BASE_TM_30
             			 , NVL(T2.CALL_SUM, 0) AS CALL_SUM 
		     		     , T1.BASE
					FROM 					
					(
						SELECT A.GRP_CD
						     , A.PART_CD
						     , B.GRP_CDNM
						     , C.PART_CDNM
						     , D.BASC_DT ||E.SMLCLAS_CDNM AS BASE_TM_30
				     		 , CASE WHEN SUBSTR(E.SMLCLAS_CDNM, 3, 2) = '30' THEN D.BASC_DT||LPAD(TO_CHAR(TO_NUMBER(SUBSTR(E.SMLCLAS_CDNM,1,2))+1),2,'0')||'00'
			     		     	    ELSE D.BASC_DT||E.SMLCLAS_CDNM END AS BASE_TM_00
              				 , E.SMLCLAS_CDNM AS BASE
					  	FROM TBL_USR A
					     , TBL_GRP_CD B
					     , TBL_PART_CD C
					     , TBL_BUSSDD_INFO D
					     , TBL_UNFYCD_SMLCLAS E
					    WHERE A.GRP_CD  = B.GRP_CD
					    AND A.PART_CD = C.PART_CD
					    AND A.GRP_CD  = D.GRP_CD
              			<isNotEmpty property="grp_cd">
					    	AND A.GRP_CD = #grp_cd#
					   	</isNotEmpty>
					   	<isNotEmpty property="part_cd">
					       AND A.PART_CD = #part_cd#
					   	</isNotEmpty>
					  	AND E.LRGCLAS_CD = 'NW115'
					  	AND (A.QUAL_LOSS_DD IS NULL OR A.QUAL_LOSS_DD > #to_dt#)
			   			AND D.BASC_DT BETWEEN #from_dt#  AND #to_dt# 
            			GROUP BY A.GRP_CD, A.PART_CD, B.GRP_CDNM, C.PART_CDNM, D.BASC_DT, E.SMLCLAS_CDNM  
					  	ORDER BY A.GRP_CD, A.PART_CD, B.GRP_CDNM, C.PART_CDNM, D.BASC_DT, E.SMLCLAS_CDNM
					) T1,
                	(        
						SELECT CASE WHEN SUBSTR(A.TIME_KEY,11,2) = '15' OR SUBSTR(A.TIME_KEY,11,2) = '30' THEN SUBSTR(A.TIME_KEY,1,10)||'30'
					            WHEN SUBSTR(A.TIME_KEY,11,2) = '45' THEN TO_CHAR(TO_NUMBER(SUBSTR(TIME_KEY,1,10))+1)||'00'
					            WHEN SUBSTR(A.TIME_KEY,11,2) = '00' THEN SUBSTR(A.TIME_KEY,1,10)||'00'
					            END AS WORK_TM_30
						      , B.GRP_CD
						      , B.PART_CD
           		 			<isNotEmpty property="call_gb">
					     	<isEqual property="call_gb" compareValue="1">
						      , SUM(A.REQ_NCNT) AS CALL_SUM    
					        </isEqual>
					     	<isEqual property="call_gb" compareValue="2">
						      , SUM(A.INBND_HOUSE) AS CALL_SUM 
					        </isEqual>				     	
					     </isNotEmpty>	
						FROM TBL_BT_CTI_RPT_TM A
					   	   , TBL_USR B
						WHERE A.USR_ID = B.USR_ID
	  					<isNotEmpty property="grp_cd">
					  		AND B.GRP_CD = #grp_cd#
					  </isNotEmpty>
					  <isNotEmpty property="part_cd">
					  	AND B.PART_CD = #part_cd#
					  </isNotEmpty>
						AND A.TIME_KEY BETWEEN #from_dt#||'0800' AND #to_dt# ||'1900'
						GROUP BY A.TIME_KEY, B.GRP_CD, B.PART_CD
						ORDER BY A.TIME_KEY, B.GRP_CD, B.PART_CD          
					) T2 
					WHERE T2.GRP_CD(+)     = T1.GRP_CD
				    AND T2.PART_CD(+)    = T1.PART_CD
				    AND T2.WORK_TM_30(+) = T1.BASE_TM_30
      			    ORDER BY T1.GRP_CD, T1.PART_CD, T1.BASE_TM_30
				)TT
				GROUP BY GRP_CD, PART_CD, GRP_CDNM, PART_CDNM,BASE_TM_30,BASE_TM_00,BASE
              
  			)
  			GROUP BY ROLLUP(GRP_CD, BASE)
		)
		WHERE DATA_GB IN ('D','TS') 	  	  
	</select>				
</sqlMap>

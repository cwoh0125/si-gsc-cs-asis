<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="TSS100">
 	
	
	<!-- 시험요청서 조회	  -->
 	<select id="Get_TST_REQ_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	    SELECT A.TST_ACPN_SEQ_NO    <!--  시험 접수 일련번호  -->
         	 , A.CUST_ID            <!--  고객 ID             -->
	         , A.CUST_NM            <!--  고객 명             -->
	         , A.CUST_ZIP_NO        <!--  고객 우편번호       -->
	         , A.CUST_ADDR1         <!--  고객 주소1          -->
	         , A.CUST_ADDR2         <!--  고객 주소2          -->
	         , A.CUST_ADDR3         <!--  고객 주소3          -->
	         , A.CUST_ADDR4         <!--  고객 주소4          -->
	         , A.CUST_TEL_NO        <!--  고객 전화 번호      -->
	         , A.DSFT_ACPN_SEQ_NO   <!--  불만 접수 일련번호  -->
	         , A.DSFT_ENTR_ID       <!--  불만 업체 ID        -->
	         , A.DSFT_ENTR_NM       <!--  불만 업체 명        -->
	         , TO_CHAR(TO_DATE(A.PRBLM_ORGN_DT, 'YYYYMMDD'),'YYYY-MM-DD') AS PRBLM_ORGN_DT  <!--  문제 발생 일자  -->
	         , A.DSFT_TYP_CD        <!--  불만 유형 코드      -->
	         , FUN_GET_DSFT_TYP_CDNM(A.DSFT_TYP_CD) AS DSFT_TYP_CDNM <!--  불만 유형 코드명    -->
	         , TO_CHAR(TO_DATE(A.TST_REQ_DT, 'YYYYMMDD'),'YYYY-MM-DD') AS TST_REQ_DT  <!--  시험 의뢰 일자  -->
	         , A.CHRG_MC_ID          <!--  담당 MC ID          -->
	         , A.CHRG_MC_NM          <!--  담당 MC 명          -->
	         , A.CHRG_TEAM_CD        <!--  담당 팀 코드        -->
	         , A.TEAM_NM             <!--  담당 팀 명          -->
	         , FUN_GET_USRMAIL(A.CHRG_MC_ID) AS CHRG_MC_EML <!--  담당 MC E-MAIL 주소 -->
	         , A.SAMP_CUNT           <!--  시료 개수           -->
	         , A.TSTRM_CD            <!--  시험실 코드         -->
	         , (SELECT B.TSTRM_CDNM
	         	  FROM TBL_TSTRM_CD B
	         	 WHERE A.TSTRM_CD = B.TSTRM_CD
	           ) AS TSTRM_CDNM       <!--  시험실 코드명       -->
	         , A.TST_OFCR_ID        <!--  시험 담당자 ID      -->
	         , A.TST_OFCR_NM        <!--  시험 담당자 명      -->
	         , (SELECT MAX(B.EML_ADDR)
	         	  FROM TBL_TSTRM_OFCR B
	         	 WHERE A.TSTRM_CD = B.TSTRM_CD
  	               AND A.TST_OFCR_ID = B.OFCR_ID
	           ) AS TST_OFCR_EML		     <!-- 시험 담당자 E-MAIL 주소  -->
	         , A.SCHE_CLCT_DT        <!--  예정 채취 일자      -->
	         , A.DTLS_DSFT_MTTR      <!--  상세 불만 사항      -->
	         , A.PRGR_ST_CD          <!--  진행 상태 코드      -->
	         , A.CNVY_METH_CD        <!--  운송 방법 코드      -->
	         , FUN_GET_CDNM('OLH02',A.CNVY_METH_CD) AS CNVY_METH_CDNM	<!--  운송 방법 코드명      -->
	         , A.ACPR_ID             <!--  접수자 ID           -->
	         , A.ACPR_NM             <!--  접수자 명           -->
	         , A.ACPN_DTM            <!--  접수 일시           -->
	         , A.TRMS_NCNT           <!--  송신 건수           -->
	         , FUN_GET_TST_ITEM_CDNM(A.TST_ACPN_SEQ_NO) AS TST_ITEM_CDNM <!--  시험항목 코드명      -->
	         , B.TST_RSLT_OPNN		 <!--  시험 결과 의견           -->
             , CASE WHEN B.TST_RSLT_SINF_DT IS NULL OR B.TST_RSLT_SINF_DT = '' THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
                    ELSE TO_CHAR(TO_DATE(B.TST_RSLT_SINF_DT, 'YYYYMMDD'),'YYYY-MM-DD') END  AS TST_RSLT_SINF_DT	<!-- 시험 결과 통보 일자 -->
	         , '' AS APRV_STG_CD		 <!--  결재 단계 코드 -->
	         , '' AS APRV_RGPS_OPNN		 <!--  결재 권리자 의견  -->
             , '' AS APRV_DT	<!--  결재 일자           -->
	      FROM TBL_TST_REQ A
                LEFT JOIN TBL_TSTRM_OPNN B       <!--  시험실 의견 조인  -->
                       ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
	     WHERE A.TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
 	</select>
 	
 		<!-- 최종 결제 요청 메일 주소 조회	  -->
 	<select id="Get_TST_EML_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
 		SELECT REPLACE(WM_CONCAT(EML_ADDR),',',';') AS EML_ADDR
		FROM TBL_TSTRM_OFCR 
		WHERE TSTRM_CD = '99'
		AND DEL_YN IS NULL  
		 	</select>


	<!-- 시료 채취정보 조회	  -->
 	<select id="Get_SAMP_CLCT_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	    SELECT A.TST_ACPN_SEQ_NO 	 <!--  시험 접수 일련번호  -->
	    	 , A.SAMP_NO             <!--  시료 번호           -->
	         , A.PRDCT_CD            <!--  제품 코드           -->
	         , B.PRDCT_CDNM          <!--  제품 코드명         -->
	         , A.PRDCT_DTLS_CD       <!--  제품 상세 코드      -->
	         , C.PRDCT_DTLS_CDNM     <!--  제품 상세 코드명    -->
	         , A.SAMP_CLCT_DT        <!--  시료 채취 일자      -->
	         , A.CLCT_PLCE_DV_CD     <!--  채취 장소 구분 코드 -->
	         , FUN_GET_CDNM('OLH03', A.CLCT_PLCE_DV_CD) AS CLCT_PLCE_DV_CDNM  <!--  채취 장소 구분 코드명 -->
	         , A.DTLS_PLCE           <!--  상세 장소           -->
	         , A.WTR_DV_CD           <!--  수분 구분 코드      -->
	         , FUN_GET_CDNM('OLH05', A.WTR_DV_CD) AS WTR_DV_CDNM  <!--  수분 구분 코드명 -->
	      FROM TBL_SAMP_CLCT A
               INNER JOIN TBL_PRDCT_CD B            <!--  제품 코드 조인  -->
                       ON A.PRDCT_CD = B.PRDCT_CD
               INNER JOIN TBL_PRDCT_DTLS_CD C       <!--  제품 상세코드 조인  -->
                       ON A.PRDCT_DTLS_CD = C.PRDCT_DTLS_CD
	     WHERE A.TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
	  	 ORDER BY A.SAMP_NO
 	</select>

 <!-- 결재(진행상태코드 UPDATE)  -->
	<update id="Set_PRGR_ST_CD1_UPDATE" parameterClass="java.util.HashMap">
		 UPDATE TBL_TST_REQ 
		    SET PRGR_ST_CD = '06'	<!--  진행 상태 코드(06-시험실결재완료) -->                           
		      , LST_CORC_ID = #gbl_usr_id#
		      , LST_CORC_DTM = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		  WHERE TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
	</update>

 <!-- 반려(진행상태코드 UPDATE)  -->
	<update id="Set_PRGR_ST_CD2_UPDATE" parameterClass="java.util.HashMap">
		 UPDATE TBL_TST_REQ 
		    SET PRGR_ST_CD = '07'	<!--  진행 상태 코드(07-시험실결재반려) -->                           
		      , LST_CORC_ID = #gbl_usr_id#
		      , LST_CORC_DTM = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		  WHERE TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
	</update>

<!-- 시험실 결재 등록(결재) : 기존에 있으면 UPDATE, 없으면 INSERT  -->
	<update id="Set_TSTRM_APRV_UPDATE" parameterClass="java.util.HashMap">
	    MERGE INTO TBL_TSTRM_APRV A
	    USING (SELECT #tst_acpn_seq_no# AS TST_ACPN_SEQ_NO
   	    		 FROM DUAL) B
	       ON (A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO)
         WHEN MATCHED THEN
     	      UPDATE SET
                     APRV_STG_CD           = 'B'              <!-- 결재 단계 코드(B-시험실결재완료)     -->
                   , APRV_RGPS_OPNN        = #aprv_rgps_opnn# <!-- 결재 권리자 의견   -->
                   , APRV_DT               = TO_CHAR(SYSDATE,'YYYYMMDD') <!-- 결재 일자          -->
                   , LST_CORC_ID           = #gbl_usr_id#     <!--  최종 수정 ID        -->
                   , LST_CORC_DTM          = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')  <!--  최종 수정 일시      -->
         WHEN NOT MATCHED THEN
       		  INSERT (
                     TST_ACPN_SEQ_NO         <!--  시험 접수 일련번호 -->
                   , APRV_STG_CD             <!-- 결재 단계 코드     -->
                   , APRV_RGPS_OPNN          <!-- 결재 권리자 의견   -->
                   , APRV_DT                 <!-- 결재 일자          -->
                   , REG_ID                  <!--  등록 ID             -->
                   , REG_DTM                 <!--  등록 일시           -->
                   , LST_CORC_ID             <!--  최종 수정 ID        -->
                   , LST_CORC_DTM            <!--  최종 수정 일시      -->
        	  )VALUES(
                     #tst_acpn_seq_no#
                   , 'B'
                   , #aprv_rgps_opnn#
                   , TO_CHAR(SYSDATE,'YYYYMMDD')
                   , #gbl_usr_id#
                   , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
                   , #gbl_usr_id#
                   , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
          	  )
	</update>

<!-- 시험실 결재 등록(반려) : 기존에 있으면 UPDATE, 없으면 INSERT  -->
	<update id="Set_TSTRM_RETURN_UPDATE" parameterClass="java.util.HashMap">
	    MERGE INTO TBL_TSTRM_APRV A
	    USING (SELECT #tst_acpn_seq_no# AS TST_ACPN_SEQ_NO
   	    		 FROM DUAL) B
	       ON (A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO)
         WHEN MATCHED THEN
     	      UPDATE SET
                     APRV_STG_CD           = 'C'              <!-- 결재 단계 코드(C-시험실결재반려)     -->
                   , LST_CORC_ID           = #gbl_usr_id#     <!--  최종 수정 ID        -->
                   , LST_CORC_DTM          = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')  <!--  최종 수정 일시      -->
         WHEN NOT MATCHED THEN
       		  INSERT (
                     TST_ACPN_SEQ_NO         <!--  시험 접수 일련번호 -->
                   , APRV_STG_CD             <!-- 결재 단계 코드     -->
                   , REG_ID                  <!--  등록 ID             -->
                   , REG_DTM                 <!--  등록 일시           -->
                   , LST_CORC_ID             <!--  최종 수정 ID        -->
                   , LST_CORC_DTM            <!--  최종 수정 일시      -->
        	  )VALUES(
                     #tst_acpn_seq_no#
                   , 'C'
                   , #gbl_usr_id#
                   , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
                   , #gbl_usr_id#
                   , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
          	  )
	</update>

 </sqlMap>

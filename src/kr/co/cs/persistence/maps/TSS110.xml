<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="TSS110">
 	
	
	<!-- 시험요청서 조회	  -->
 	<select id="Get_TST_REQ_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	    SELECT A.TST_ACPN_SEQ_NO    <!--  시험 접수 일련번호  -->
         	 , A.CUST_ID            <!--  고객 ID             -->
	         , A.CUST_NM            <!--  고객 명             -->
	         , A.CUST_ZIP_NO        <!--  고객 우편번호       -->
	         , A.CUST_ADDR1         <!--  고객 주소1          -->
	         , A.CUST_ADDR2         <!--  고객 주소2          -->
	         , A.CUST_ADDR3         <!--  고객 주소3          -->
	         , A.CUST_ADDR4         <!--  고객 주소4          -->
	         , A.CUST_TEL_NO        <!--  고객 전화 번호      -->
	         , A.DSFT_ACPN_SEQ_NO   <!--  불만 접수 일련번호  -->
	         , A.DSFT_ENTR_ID       <!--  불만 업체 ID        -->
	         , A.DSFT_ENTR_NM       <!--  불만 업체 명        -->
	         , TO_CHAR(TO_DATE(A.PRBLM_ORGN_DT, 'YYYYMMDD'),'YYYY-MM-DD') AS PRBLM_ORGN_DT  <!--  문제 발생 일자  -->
	         , A.DSFT_TYP_CD        <!--  불만 유형 코드      -->
	         , FUN_GET_DSFT_TYP_CDNM(A.DSFT_TYP_CD) AS DSFT_TYP_CDNM <!--  불만 유형 코드명    -->
	         , TO_CHAR(TO_DATE(A.TST_REQ_DT, 'YYYYMMDD'),'YYYY-MM-DD') AS TST_REQ_DT  <!--  시험 의뢰 일자  -->
	         , A.CHRG_MC_ID          <!--  담당 MC ID          -->
	         , A.CHRG_MC_NM          <!--  담당 MC 명          -->
	         , A.CHRG_TEAM_CD        <!--  담당 팀 코드        -->
	         , A.TEAM_NM             <!--  담당 팀 명          -->
	         , FUN_GET_USRMAIL(A.CHRG_MC_ID) AS CHRG_MC_EML <!--  담당 MC E-MAIL 주소 -->
	         , A.SAMP_CUNT           <!--  시료 개수           -->
	         , A.TSTRM_CD            <!--  시험실 코드         -->
	         , (SELECT B.TSTRM_CDNM
	         	  FROM TBL_TSTRM_CD B
	         	 WHERE A.TSTRM_CD = B.TSTRM_CD
	           ) AS TSTRM_CDNM       <!--  시험실 코드명       -->
	         , A.TST_OFCR_ID        <!--  시험 담당자 ID      -->
	         , A.TST_OFCR_NM        <!--  시험 담당자 명      -->
	         , A.SCHE_CLCT_DT        <!--  예정 채취 일자      -->
	         , A.DTLS_DSFT_MTTR      <!--  상세 불만 사항      -->
	         , A.PRGR_ST_CD          <!--  진행 상태 코드      -->
	         , A.CNVY_METH_CD        <!--  운송 방법 코드      -->
	         , FUN_GET_CDNM('OLH02',A.CNVY_METH_CD) AS CNVY_METH_CDNM	<!--  운송 방법 코드명      -->
	         , A.ACPR_ID             <!--  접수자 ID           -->
	         , A.ACPR_NM             <!--  접수자 명           -->
	         , F.EML_ADDR            <!--  접수자 이메일 주소 -->
	         , A.ACPN_DTM            <!--  접수 일시           -->
	         , A.TRMS_NCNT           <!--  송신 건수           -->
	         , FUN_GET_TST_ITEM_CDNM(A.TST_ACPN_SEQ_NO) AS TST_ITEM_CDNM <!--  시험항목 코드명      -->
	         , B.TST_RSLT_OPNN		 <!--  시험 결과 의견           -->
             , CASE WHEN B.TST_RSLT_SINF_DT IS NULL OR B.TST_RSLT_SINF_DT = '' THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
                    ELSE TO_CHAR(TO_DATE(B.TST_RSLT_SINF_DT, 'YYYYMMDD'),'YYYY-MM-DD') END  AS TST_RSLT_SINF_DT	<!-- 시험 결과 통보 일자 -->
	         , C.OFCR_ID               <!-- 담당자 ID   -->
	         , C.OFCR_OPNN             <!-- 담당자 의견 -->
             , CASE WHEN C.OPNN_REG_DT IS NULL OR C.OPNN_REG_DT = '' THEN TO_CHAR(SYSDATE,'YYYY-MM-DD')
                    ELSE TO_CHAR(TO_DATE(C.OPNN_REG_DT, 'YYYYMMDD'),'YYYY-MM-DD') END  AS OPNN_REG_DT	<!-- 의견 등록 일자 -->

             , TO_CHAR(TO_DATE(D.RECV_DT, 'YYYYMMDD'),'YYYY-MM-DD')	AS RECV_DT <!-- 시료수신일자  -->
             , TO_CHAR(TO_DATE(E.APRV_DT, 'YYYYMMDD'),'YYYY-MM-DD')	AS APRV_DT <!-- 시험실 결재일자  --> 
	      FROM TBL_TST_REQ A
                LEFT JOIN TBL_TSTRM_OPNN B       <!--  시험실 의견 조인  -->
                       ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
                LEFT JOIN TBL_OFCR_OPNN C       <!--  담당자 의견 조인  -->
                       ON A.TST_ACPN_SEQ_NO = C.TST_ACPN_SEQ_NO
       	       INNER JOIN (
                         SELECT A.TST_ACPN_SEQ_NO
                              , MAX(B.RECV_DT) AS RECV_DT
                           FROM TBL_SAMP_CLCT A
                                INNER JOIN TBL_SAMP_RECV_CNFM B
                                        ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
                          GROUP BY A.TST_ACPN_SEQ_NO
                         ) D	<!--  시료수신 MAX값  -->
                       ON A.TST_ACPN_SEQ_NO = D.TST_ACPN_SEQ_NO
               INNER JOIN TBL_TSTRM_APRV E       <!--  시험실 결재 조인  -->
                       ON A.TST_ACPN_SEQ_NO = E.TST_ACPN_SEQ_NO
		        LEFT JOIN TBL_USR F <!--유저테이블 조인-->
		       		   ON A.ACPR_ID = F.USR_ID
	     WHERE A.TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
 	</select>


	<!-- 시료 채취정보 조회	  -->
 	<select id="Get_SAMP_CLCT_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	    SELECT A.TST_ACPN_SEQ_NO 	 <!--  시험 접수 일련번호  -->
	    	 , A.SAMP_NO             <!--  시료 번호           -->
	         , A.PRDCT_CD            <!--  제품 코드           -->
	         , B.PRDCT_CDNM          <!--  제품 코드명         -->
	         , A.PRDCT_DTLS_CD       <!--  제품 상세 코드      -->
	         , C.PRDCT_DTLS_CDNM     <!--  제품 상세 코드명    -->
	         , A.SAMP_CLCT_DT        <!--  시료 채취 일자      -->
	         , A.CLCT_PLCE_DV_CD     <!--  채취 장소 구분 코드 -->
	         , FUN_GET_CDNM('OLH03', A.CLCT_PLCE_DV_CD) AS CLCT_PLCE_DV_CDNM  <!--  채취 장소 구분 코드명 -->
	         , A.DTLS_PLCE           <!--  상세 장소           -->
	         , A.WTR_DV_CD           <!--  수분 구분 코드      -->
	         , FUN_GET_CDNM('OLH05', A.WTR_DV_CD) AS WTR_DV_CDNM  <!--  수분 구분 코드명 -->
	         , D.DSFT_CAUS_CD    <!-- 불만 원인 코드 -->
	         , D.UNSL_NRM        <!-- 비정상 규격    -->
             , CASE WHEN D.RPS_SAMP_YN = 'Y' THEN '1'
                    ELSE '0' END  AS RPS_SAMP_YN	<!-- 대표 시료 여부 -->
             , CASE WHEN D.STTC_SCRN_APCL_YN = 'Y' THEN '1'
                    ELSE '0' END  AS STTC_SCRN_APCL_YN	<!-- 품질불만원인 통계화면 적용 -->
	      FROM TBL_SAMP_CLCT A
               INNER JOIN TBL_PRDCT_CD B            <!--  제품 코드 조인  -->
                       ON A.PRDCT_CD = B.PRDCT_CD
               INNER JOIN TBL_PRDCT_DTLS_CD C       <!--  제품 상세코드 조인  -->
                       ON A.PRDCT_DTLS_CD = C.PRDCT_DTLS_CD
                LEFT JOIN TBL_SAMP_BY_OFCR_OPNN D   <!--  시료 별 담당자 의견  -->
                       ON A.TST_ACPN_SEQ_NO = D.TST_ACPN_SEQ_NO
                      AND A.SAMP_NO = D.SAMP_NO
	     WHERE A.TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
	  	 ORDER BY A.SAMP_NO
 	</select>


	<!-- 시험실 이메일 주소	  -->
 	<select id="Get_TSTRM_EML_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
	    SELECT DISTINCT OFCR_DV_CD <!-- 담당자 구분 코드 -->
			 , OFCR_ID	<!-- 담당자 ID -->
			 , OFCR_NM	<!-- 담당자 명 -->
			 , EML_ADDR	<!-- 이메일 주소 -->
	      FROM TBL_TSTRM_OFCR
	     WHERE TSTRM_CD = '99' <!-- 시험실코드 99 = CSC -->
	  ORDER BY OFCR_DV_CD, OFCR_ID
 	</select>

<!-- 품질불만원인코드 조회  -->
 	<select id="Get_Caus_List_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DSFT_CAUS_CD		AS CODE							   <!-- 품질불만원인코드 -->
			 , DSFT_CAUS_CDNM   AS CODE_NM                         <!-- 품질불만원인코드명 -->
		  FROM TBL_DSFT_CAUS_CD
		 WHERE DEL_YN = 'Y' <!-- 사용여부로 의미변경 -->
		 ORDER BY DSFT_CAUS_CD
 	</select>

 <!-- CSC결재완료(진행상태코드 UPDATE)  -->
	<update id="Set_PRGR_ST_CD_UPDATE" parameterClass="java.util.HashMap">
		 UPDATE TBL_TST_REQ 
		    SET PRGR_ST_CD = '08'	<!--  진행 상태 코드(08-CSC결재완료) -->                           
		      , LST_CORC_ID = #gbl_usr_id#
		      , LST_CORC_DTM = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		  WHERE TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
	</update>

<!-- 담당자 의견 테이블 삽입	  -->
	<insert id="Set_OFCR_OPNN_INSERT" parameterClass="java.util.HashMap">
		INSERT INTO TBL_OFCR_OPNN(
           TST_ACPN_SEQ_NO      <!-- 시험 접수 일련번호  -->
         , OFCR_ID              <!-- 담당자 ID           -->
         , OFCR_OPNN            <!-- 담당자 의견         -->
         , DSFT_CAUS_CD         <!-- 불만 원인 코드      -->
         , TST_CPLT_ST_CD       <!-- 시험 완료 상태 코드 -->
         , OPNN_REG_DT          <!-- 의견 등록 일자      -->
         , REG_ID               <!-- 등록 ID             -->
         , REG_DTM              <!-- 등록 일시           -->
         , LST_CORC_ID          <!-- 최종 수정 ID        -->
         , LST_CORC_DTM         <!-- 최종 수정 일시      -->
		) VALUES (
           #tst_acpn_seq_no#
         , #ofcr_id#
         , #ofcr_opnn#
         , #dsft_caus_cd#
         , #tst_cplt_st_cd#
         , #opnn_reg_dt#
         , #gbl_usr_id#
         , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
         , #gbl_usr_id#
         , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		)
	</insert>

<!-- 시료 별 담당자 의견 테이블 삽입	  -->
	<insert id="Set_SAMP_OFCROPNN_INSERT" parameterClass="java.util.HashMap">
		INSERT INTO TBL_SAMP_BY_OFCR_OPNN(
           TST_ACPN_SEQ_NO      <!-- 시험 접수 일련번호 -->
         , SAMP_NO              <!-- 시료 번호          -->
         , DSFT_CAUS_CD         <!-- 불만 원인 코드     -->
         , UNSL_NRM             <!-- 비정상 규격        -->
         , RPS_SAMP_YN          <!-- 대표 시료 여부     -->
         , STTC_SCRN_APCL_YN    <!-- 품질불만원인 통계화면 적용 -->
         , REG_ID               <!-- 등록 ID            -->
         , REG_DTM              <!-- 등록 일시          -->
         , LST_CORC_ID          <!-- 최종 수정 ID       -->
         , LST_CORC_DTM         <!-- 최종 수정 일시     -->
		) VALUES (
           #tst_acpn_seq_no#
         , #samp_no#
         , #dsft_caus_cd#
         , #unsl_nrm#
         , CASE WHEN #rps_samp_yn# = '1' THEN 'Y'
                ELSE '' END
         , CASE WHEN #sttc_scrn_apcl_yn# = '1' THEN 'Y'
                ELSE '' END
         , #gbl_usr_id#
         , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
         , #gbl_usr_id#
         , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		)
	</insert>

<!-- 첨부 파일 저장 -->
	<insert id="Set_APND_FILE_INSERT" parameterClass="java.util.HashMap">
		INSERT INTO TBL_APND_FILE(
	           SEQ_NO             <!-- 일련번호    -->
	         , FILE_SEQ           <!-- 파일 순서   -->
	         , FILE_NM            <!-- 파일 명     -->
	         , FILE_SZ            <!-- 파일 크기   -->
	         , FILE_PHYSNM        <!-- 파일 물리명 -->
	         , FILE_PATH          <!-- 파일 경로   -->
		) VALUES (
	           #seq_no#
	         , #file_seq#
	         , #file_nm#
	         , #file_sz#
	         , #file_physnm#
	         , #file_path#
		)
	</insert>

	<!-- 시험항목 가져오기(체크항목만)-->
 	<select id="Get_TEST_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT DISTINCT A.PRDCT_DTLS_CD
         , A.PRDCT_DTLS_CDNM
         , A.SRT_SEQ
         , A.TST_ITEM_CDNM
		  FROM (SELECT A.TST_ACPN_SEQ_NO
			         , A.SAMP_NO
               , A.PRDCT_DTLS_CD
			         , D.PRDCT_DTLS_CDNM
			         , B.SRT_SEQ
               , C.TST_ITEM_CD
			         , C.TST_ITEM_CDNM
				  FROM TBL_SAMP_CLCT A
					   INNER JOIN TBL_PRDCT_BY_TST_ITEM_CD B
			                   ON A.PRDCT_DTLS_CD = B.PRDCT_DTLS_CD
					   INNER JOIN TBL_TST_ITEM_CD C
			                   ON B.TST_ITEM_CD = C.TST_ITEM_CD
             INNER JOIN TBL_PRDCT_DTLS_CD D
                     ON A.PRDCT_DTLS_CD = D.PRDCT_DTLS_CD
				 WHERE A.TST_ACPN_SEQ_NO = #tst_acpn_seq_no#
			   ) A
			  LEFT JOIN TBL_ANAL_RSLTSTAT B
				 	 ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
					AND A.SAMP_NO = B.SAMP_NO
					AND A.TST_ITEM_CD = B.TST_ITEM_CD
	     WHERE B.CHO_YN = 'Y'
	  ORDER BY A.PRDCT_DTLS_CD, A.SRT_SEQ
 	</select>
 </sqlMap>

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="TSS010">
 	
 	<!-- 시험실 콤보	  -->
  	<select id="Get_TSTRM_CD_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT  TSTRM_CD    AS  CODE		<!-- 시험실 코드 -->
		     ,  TSTRM_CDNM  AS  CODE_NM		<!-- 시험실 코드명 -->
		  FROM  TBL_TSTRM_CD 
         WHERE  (DEL_YN = 'N' OR DEL_YN IS NULL)
	  ORDER BY  TSTRM_CD
 	</select>

 	<!-- 제품명 콤보	  -->
  	<select id="Get_PRDCT_CD_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT  PRDCT_CD    AS  CODE		  <!-- 제품 코드(테크) -->
		     ,  PRDCT_CDNM  AS  CODE_NM		<!-- 제품 코드명(테크) -->
		  FROM  TBL_PRDCT_CD
     	 WHERE  TECH_SVC_YN = 'Y'
	  ORDER BY  PRDCT_CD         			        		                
 	</select>

 	<!-- 품질담당자 콤보	  -->
  	<select id="Get_TSTRM_OFCR_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT  OFCR_ID   AS  CODE      <!-- 담당자 ID -->
		     ,  OFCR_NM   AS  CODE_NM   <!-- 담당자 명 -->
		  FROM  TBL_TSTRM_OFCR
	     WHERE  TSTRM_CD = '99' <!-- CSC 시험실 인원  99-->
	       AND  (DEL_YN = 'N' OR DEL_YN IS NULL)
	  ORDER BY  OFCR_NM
 	</select>

	<!-- 시험진행조회-->
 	<select id="Get_TSS_List_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
    SELECT A.TST_ACPN_SEQ_NO     <!--  시험 접수 일련번호  -->
         , A.CUST_ID             <!--  고객 ID             -->
         , A.CUST_NM             <!--  고객 명             -->
         , A.CUST_ZIP_NO         <!--  고객 우편번호       -->
         , A.CUST_ADDR1          <!--  고객 주소1          -->
         , A.CUST_ADDR2          <!--  고객 주소2          -->
         , A.CUST_ADDR3          <!--  고객 주소3          -->
         , A.CUST_ADDR4          <!--  고객 주소4          -->
         , A.CUST_TEL_NO         <!--  고객 전화 번호      -->
         , A.DSFT_ACPN_SEQ_NO    <!--  불만 접수 일련번호  -->
         , A.DSFT_ENTR_ID        <!--  불만 업체 ID        -->
         , A.DSFT_ENTR_NM        <!--  불만 업체 명        -->
         , A.PRBLM_ORGN_DT       <!--  문제 발생 일자      -->
         , A.DSFT_TYP_CD         <!--  불만 유형 코드      -->
         , D.DSFT_TYP_CDNM       <!--  불만 유형 코드명      -->
         , A.TST_REQ_DT          <!--  시험 의뢰 일자      -->
         , A.CHRG_MC_ID          <!--  담당 MC ID          -->
         , A.CHRG_MC_NM          <!--  담당 MC 명          -->
         , A.CHRG_TEAM_CD        <!--  담당 팀 코드        -->
         , A.TEAM_NM             <!--  팀 명               -->
         , A.SAMP_CUNT           <!--  시료 개수           -->
         , A.TSTRM_CD            <!--  시험실 코드         -->
         , (SELECT E.TSTRM_CDNM
         	    FROM TBL_TSTRM_CD E
         	   WHERE A.TSTRM_CD = E.TSTRM_CD
           ) AS TSTRM_CDNM	   <!--  시험실 코드명       -->
         , A.TST_OFCR_ID       <!--  시험 담당자 ID      -->
         , A.TST_OFCR_NM       <!--  시험 담당자 명      -->
         , A.SCHE_CLCT_DT      <!--  예정 채취 일자      -->
         , A.DTLS_DSFT_MTTR    <!--  상세 불만 사항      -->
         , A.PRGR_ST_CD        <!--  진행 상태 코드      -->
         , C.PRGR_ST_CDNM      <!--  진행 상태 코드명    -->
         , C.BFTH_PGM_ID       <!--  이전 프로그램 ID    -->
         , C.NEXT_PGM_ID       <!--  다음 프로그램 ID    -->
         , A.CNVY_METH_CD      <!--  운송 방법 코드        -->
         , A.ACPR_ID           <!--  접수자 ID             -->
         , A.ACPR_NM           <!--  접수자 명             -->
         , A.ACPN_DTM          <!--  접수 일시             -->
         , A.TRMS_NCNT         <!--  송신 건수             -->
         , B.PRDCT_CD1         <!--  제품 코드(고객)       -->
         , B.PRDCT_CD2         <!--  제품 코드(주유소)     -->
         , B.PRDCT_DTLS_CD1    <!--  제품 상세코드(고객)   -->
         , B.PRDCT_DTLS_CD2    <!--  제품 상세코드(주유소) -->
		 , FUN_GET_PRDCT_DTL_CDNM(B.PRDCT_DTLS_CD1) AS PRDCT_DTLS_CDNM1  <!--  제품 상세코드명(고객)   -->
		 , FUN_GET_PRDCT_DTL_CDNM(B.PRDCT_DTLS_CD2) AS PRDCT_DTLS_CDNM2  <!--  제품 상세코드명(주유소) -->
         , B.DSFT_CAUS_CD1        <!--  불만 원인 코드(고객)    -->
         , B.DSFT_CAUS_CD2        <!--  불만 원인 코드(주유소)  -->
         , B.DSFT_CAUS_CDNM1      <!--  불만 원인 코드명(고객)    -->
         , B.DSFT_CAUS_CDNM2      <!--  불만 원인 코드명(주유소)  -->
	     , E.OFCR_ID               <!-- 담당자 ID   -->
      FROM TBL_TST_REQ A
           INNER JOIN 
				(SELECT A.TST_ACPN_SEQ_NO <!--  대표 시료별로 제품코드, 제품상세코드, 불만원인 출력 HA : 고객, HB : 주유소 -->
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN B.PRDT_CD END) AS PRDCT_CD1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.PRDT_CD END) AS PRDCT_CD2
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN B.PRDT_DTLS_CD END) AS PRDCT_DTLS_CD1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.PRDT_DTLS_CD END) AS PRDCT_DTLS_CD2      
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN B.DSFT_CAUSE_CD END) AS DSFT_CAUS_CD1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.DSFT_CAUSE_CD END) AS DSFT_CAUS_CD2 
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD =  'HA' THEN FUN_GET_DSFT_CAUS_CDNM(B.DSFT_CAUSE_CD)
				      			 ELSE NULL END) AS DSFT_CAUS_CDNM1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN FUN_GET_DSFT_CAUS_CDNM(B.DSFT_CAUSE_CD)
				      			 ELSE NULL END) AS DSFT_CAUS_CDNM2
				   FROM TBL_SAMP_CLCT A
				        INNER JOIN
				        	 (SELECT A.TST_ACPN_SEQ_NO
				                   , A.CLCT_PLCE_DV_CD
				                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN A.PRDCT_CD 
				                          WHEN B.RPS_SAMP_YN IS NULL 
				                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN A.PRDCT_CD
				                     END PRDT_CD
				                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN A.PRDCT_DTLS_CD 
				                          WHEN B.RPS_SAMP_YN IS NULL 
				                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN A.PRDCT_DTLS_CD
				                     END PRDT_DTLS_CD
				                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN B.DSFT_CAUS_CD
				                          WHEN B.RPS_SAMP_YN IS NULL 
				                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN B.DSFT_CAUS_CD
				                     END DSFT_CAUSE_CD
				                   , ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY B.RPS_SAMP_YN) AS RNK
				                FROM TBL_SAMP_CLCT A
				                     LEFT JOIN TBL_SAMP_BY_OFCR_OPNN B
				                            ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
				                           AND A.SAMP_NO = B.SAMP_NO   
				       ) B
				       	    ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
				           AND B.RNK = 1
				  GROUP BY A.TST_ACPN_SEQ_NO
				) B
                ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
	         LEFT JOIN TBL_PRGR_ST_CD C            <!--  진행 상태 조인  -->
	                 ON A.PRGR_ST_CD = C.PRGR_ST_CD
	         LEFT JOIN TBL_DSFT_TYP_CD D            <!--  불만 유형 코드 조인  -->
	                 ON A.DSFT_TYP_CD = D.DSFT_TYP_CD
             LEFT JOIN TBL_OFCR_OPNN E       <!--  담당자 의견 조인  -->
                     ON A.TST_ACPN_SEQ_NO = E.TST_ACPN_SEQ_NO
       WHERE A.TST_REQ_DT BETWEEN #tst_req_dt_from# AND #tst_req_dt_to#
 		 AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
	<dynamic>
	  <isNotEmpty prepend="AND" property="dsft_acpn_seq_no">		<!-- 불만일련번호 조회 -->
			    A.DSFT_ACPN_SEQ_NO = #dsft_acpn_seq_no#
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="dsft_entr_nm">			<!-- 불만발생업체 -->
			    A.DSFT_ENTR_NM LIKE '%'|| #dsft_entr_nm# ||'%'
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="prdct_cd2">			<!-- 제품코드(주유소시료) 검색(주유소 없으면 고객시료)	-->
      			(B.PRDCT_CD2 = #prdct_cd2# OR (B.PRDCT_CD2 IS NULL AND B.PRDCT_CD1 = #prdct_cd2#))
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="cust_addr2">			<!-- 고객 주소지  -->
			    1 = (CASE WHEN #cust_addr2# = '전체' THEN 1
                    ELSE CASE WHEN A.CUST_ADDR2 LIKE '%'|| #cust_addr2# ||'%' THEN 1 ELSE 0 END
               END)
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="dsft_typ_cdnm">			<!-- 품질불만유형명 -->
			    D.DSFT_TYP_CDNM = #dsft_typ_cdnm#
	  </isNotEmpty>
	  <isNotEmpty prepend="AND" property="tstrm_cd">		<!-- 시험실 -->
			    A.TSTRM_CD = #tstrm_cd#
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="prblm_orgn_dt_from">			<!-- 문제발생일 -->
			    A.PRBLM_ORGN_DT BETWEEN #prblm_orgn_dt_from# AND #prblm_orgn_dt_to#
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="team_nm">			<!-- 처리팀/지사  -->
			    A.TEAM_NM LIKE '%'|| #team_nm# ||'%'
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="dsft_caus_cdnm2">			<!-- 불만 원인 코드명(주유소시료) 검색(주유소 없으면 고객시료)	-->
      			(B.DSFT_CAUS_CDNM2 LIKE '%'|| #dsft_caus_cdnm2# ||'%' OR B.DSFT_CAUS_CDNM1 LIKE '%'|| #dsft_caus_cdnm2# ||'%')
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="chrg_mc_nm">			<!--  담당 MC 명  -->
			    A.CHRG_MC_NM LIKE '%'|| #chrg_mc_nm# ||'%'
	  </isNotEmpty>
      <isNotEmpty prepend="AND" property="acpr_nm">			<!--  접수자(시험의뢰자) 명	-->
			    A.ACPR_NM = #acpr_nm#
	  </isNotEmpty>
	  <isNotEmpty prepend="AND" property="ofcr_id">		<!--  품질 담당자 -->                 
			    E.OFCR_ID = #ofcr_id#                                                             
	  </isNotEmpty>
	<!--AND (B.DSFT_CAUS_CD2 = '00' OR (B.DSFT_CAUS_CD2 IS NULL AND B.DSFT_CAUS_CD1 = '00')) 정상(주유소시료) 검색(주유소 없으면 고객시료)	-->
	<!--불만처리여부 체크항목이 하나도 없거나, 모두 체크되어 있는 경우 전체데이터가 조회된다.-->
 	<isEqual property="tss_handle_type" compareValue="1"> <!-- 미처리 -->
				AND A.PRGR_ST_CD != '08' <!-- 진행 상태 코드('08' CSC결재완료) -->
 	</isEqual>
 	<isEqual property="tss_handle_type" compareValue="2"> <!-- 처리 -->
			    AND A.PRGR_ST_CD = '08'  <!--  진행 상태 코드('08' CSC결재완료)  -->
 	</isEqual>
	</dynamic>
	ORDER BY A.TST_REQ_DT DESC                                                                        
 	</select>

 	 <!-- 시험실 구성원 조회 -->
	<select id="Get_OFCR_BY_TSTRM_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT TSTRM_CD
			 , OFCR_DV_CD
			 , OFCR_ID
			 , OFCR_NM
			 , TEL_NO
			 , MBPH_NO
			 , EML_ADDR
			 , NVL(TST_OFCR_YN,'N') AS TST_OFCR_YN
			 , MAND_YN
			 , MAND_STR_DT
			 , MAND_END_DT
		  FROM TBL_TSTRM_OFCR
		 WHERE TSTRM_CD = #tstrm_cd#
	  ORDER BY TSTRM_CD, OFCR_DV_CD
 	</select>

 	<!-- CSC시험실 구성원 조회 -->
  	<select id="Get_CSC_OFCR_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT  OFCR_ID
		     ,  OFCR_NM
		  FROM  TBL_TSTRM_OFCR
	     WHERE  TSTRM_CD = '99' <!-- CSC 시험실 인원 99 -->
	       AND  (DEL_YN = 'N' OR DEL_YN IS NULL)
	  ORDER BY  OFCR_NM
 	</select>

	<!-- 불만일련번호로 조회 -->
 	<select id="Get_TSS_List2_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
    SELECT A.TST_ACPN_SEQ_NO     <!--  시험 접수 일련번호  -->
         , A.CUST_ID             <!--  고객 ID             -->
         , A.CUST_NM             <!--  고객 명             -->
         , A.CUST_ZIP_NO         <!--  고객 우편번호       -->
         , A.CUST_ADDR1          <!--  고객 주소1          -->
         , A.CUST_ADDR2          <!--  고객 주소2          -->
         , A.CUST_ADDR3          <!--  고객 주소3          -->
         , A.CUST_ADDR4          <!--  고객 주소4          -->
         , A.CUST_TEL_NO         <!--  고객 전화 번호      -->
         , A.DSFT_ACPN_SEQ_NO    <!--  불만 접수 일련번호  -->
         , A.DSFT_ENTR_ID        <!--  불만 업체 ID        -->
         , A.DSFT_ENTR_NM        <!--  불만 업체 명        -->
         , A.PRBLM_ORGN_DT       <!--  문제 발생 일자      -->
         , A.DSFT_TYP_CD         <!--  불만 유형 코드      -->
         , D.DSFT_TYP_CDNM       <!--  불만 유형 코드명      -->
         , A.TST_REQ_DT          <!--  시험 의뢰 일자      -->
         , A.CHRG_MC_ID          <!--  담당 MC ID          -->
         , A.CHRG_MC_NM          <!--  담당 MC 명          -->
         , A.CHRG_TEAM_CD        <!--  담당 팀 코드        -->
         , A.TEAM_NM             <!--  팀 명               -->
         , A.SAMP_CUNT           <!--  시료 개수           -->
         , A.TSTRM_CD            <!--  시험실 코드         -->
         , (SELECT E.TSTRM_CDNM
         	    FROM TBL_TSTRM_CD E
         	   WHERE A.TSTRM_CD = E.TSTRM_CD
           ) AS TSTRM_CDNM	   <!--  시험실 코드명       -->
         , A.TST_OFCR_ID       <!--  시험 담당자 ID      -->
         , A.TST_OFCR_NM       <!--  시험 담당자 명      -->
         , A.SCHE_CLCT_DT      <!--  예정 채취 일자      -->
         , A.DTLS_DSFT_MTTR    <!--  상세 불만 사항      -->
         , A.PRGR_ST_CD        <!--  진행 상태 코드      -->
         , C.PRGR_ST_CDNM      <!--  진행 상태 코드명    -->
         , C.BFTH_PGM_ID       <!--  이전 프로그램 ID    -->
         , C.NEXT_PGM_ID       <!--  다음 프로그램 ID    -->
         , A.CNVY_METH_CD      <!--  운송 방법 코드        -->
         , A.ACPR_ID           <!--  접수자 ID             -->
         , A.ACPR_NM           <!--  접수자 명             -->
         , A.ACPN_DTM          <!--  접수 일시             -->
         , A.TRMS_NCNT         <!--  송신 건수             -->
         , B.PRDCT_CD1         <!--  제품 코드(고객)       -->
         , B.PRDCT_CD2         <!--  제품 코드(주유소)     -->
         , B.PRDCT_DTLS_CD1    <!--  제품 상세코드(고객)   -->
         , B.PRDCT_DTLS_CD2    <!--  제품 상세코드(주유소) -->
		 , FUN_GET_PRDCT_DTL_CDNM(B.PRDCT_DTLS_CD1) AS PRDCT_DTLS_CDNM1  <!--  제품 상세코드명(고객)   -->
		 , FUN_GET_PRDCT_DTL_CDNM(B.PRDCT_DTLS_CD2) AS PRDCT_DTLS_CDNM2  <!--  제품 상세코드명(주유소) -->
         , B.DSFT_CAUS_CD1        <!--  불만 원인 코드(고객)    -->
         , B.DSFT_CAUS_CD2        <!--  불만 원인 코드(주유소)  -->
         , B.DSFT_CAUS_CDNM1      <!--  불만 원인 코드명(고객)    -->
         , B.DSFT_CAUS_CDNM2      <!--  불만 원인 코드명(주유소)  -->
	     , E.OFCR_ID               <!-- 담당자 ID   -->
      FROM TBL_TST_REQ A
           INNER JOIN 
				(SELECT A.TST_ACPN_SEQ_NO <!--  대표 시료별로 제품코드, 제품상세코드, 불만원인 출력 HA : 고객, HB : 주유소 -->
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD = 'HA' THEN B.PRDT_CD END) AS PRDCT_CD1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.PRDT_CD END) AS PRDCT_CD2
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD = 'HA' THEN B.PRDT_DTLS_CD END) AS PRDCT_DTLS_CD1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.PRDT_DTLS_CD END) AS PRDCT_DTLS_CD2      
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD = 'HA' THEN B.DSFT_CAUSE_CD END) AS DSFT_CAUS_CD1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN B.DSFT_CAUSE_CD END) AS DSFT_CAUS_CD2 
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD = 'HA' THEN FUN_GET_DSFT_CAUS_CDNM(B.DSFT_CAUSE_CD)
				      			 ELSE NULL END) AS DSFT_CAUS_CDNM1
				      , MAX(CASE WHEN B.CLCT_PLCE_DV_CD <![CDATA[<>]]> 'HA' THEN FUN_GET_DSFT_CAUS_CDNM(B.DSFT_CAUSE_CD)
				      			 ELSE NULL END) AS DSFT_CAUS_CDNM2
				   FROM TBL_SAMP_CLCT A
				        INNER JOIN
				        	 (SELECT A.TST_ACPN_SEQ_NO
				                   , A.CLCT_PLCE_DV_CD
				                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN A.PRDCT_CD 
				                          WHEN B.RPS_SAMP_YN IS NULL 
				                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN A.PRDCT_CD
				                     END PRDT_CD
				                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN A.PRDCT_DTLS_CD 
				                          WHEN B.RPS_SAMP_YN IS NULL 
				                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN A.PRDCT_DTLS_CD
				                     END PRDT_DTLS_CD
				                   , CASE WHEN B.RPS_SAMP_YN = 'Y' THEN B.DSFT_CAUS_CD
				                          WHEN B.RPS_SAMP_YN IS NULL 
				                           AND (ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY TO_NUMBER(SUBSTR(A.SAMP_NO,5,4)))) = 1 THEN B.DSFT_CAUS_CD
				                     END DSFT_CAUSE_CD
				                   , ROW_NUMBER() OVER (PARTITION BY A.TST_ACPN_SEQ_NO,A.CLCT_PLCE_DV_CD ORDER BY B.RPS_SAMP_YN) AS RNK
				                FROM TBL_SAMP_CLCT A
				                     LEFT JOIN TBL_SAMP_BY_OFCR_OPNN B
				                            ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
				                           AND A.SAMP_NO = B.SAMP_NO   
				       ) B
				       	    ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
				           AND B.RNK = 1
				  GROUP BY A.TST_ACPN_SEQ_NO
				) B
                ON A.TST_ACPN_SEQ_NO = B.TST_ACPN_SEQ_NO
	         INNER JOIN TBL_PRGR_ST_CD C            <!--  진행 상태 조인  -->
	                 ON A.PRGR_ST_CD = C.PRGR_ST_CD
	         INNER JOIN TBL_DSFT_TYP_CD D            <!--  불만 유형 코드 조인  -->
	                 ON A.DSFT_TYP_CD = D.DSFT_TYP_CD
              LEFT JOIN TBL_OFCR_OPNN E       <!--  담당자 의견 조인  -->
                     ON A.TST_ACPN_SEQ_NO = E.TST_ACPN_SEQ_NO
       WHERE A.DSFT_ACPN_SEQ_NO = #dsft_acpn_seq_no#
 		 AND (A.DEL_YN = 'N' OR A.DEL_YN IS NULL)
	ORDER BY A.ACPN_DTM DESC                                                                        
 	</select>

 </sqlMap>

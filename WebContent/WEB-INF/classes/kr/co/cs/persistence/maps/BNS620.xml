<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BNS620">
<select id="Get_UsrCtt_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">	
		SELECT INS_MTTR
		FROM TBL_QUST_INFO
		WHERE QUST_SEQ_NO = #qust_seq_no#      				 		  
 	</select>
 	
 	<select id="Get_UsrMttr_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT     CTT,QUST_RSPS_YN
		FROM  	TBL_CMP_TGT_CUST
			WHERE 	 CMP_ID = #cmp_id#        		
			AND CUST_ID = #cust_no#					 		  
 	</select>
 	
 	
 	<select id="Get_CmbBizDtls1_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT     DISTINCT
				   BIZ_DV_CD				 AS HIG_CODE
		          ,BIZ_PROC_DTLS_CD1         AS CODE
		          ,BIZ_PROC_DTLS_CDNM1       AS CODE_NM
		FROM  	TBL_BIZ_DV_CD
		WHERE 	
					USE_YN = 'Y'
				AND BIZ_PROC_DTLS_CD1  <![CDATA[<>]]> 'BNSV'
				AND MIG_FLAG = '3'
				<!-- 2011.11 SMT그룹 추가로 SMT그룹은 업무구분이 SMT인 코드목록 조회되도록 변경. -->
				<!-- 2012.07 CPN그룹 추가로 CPN그룹은 업무구분이 CPN인 코드목록 조회되도록 변경/SMT,CPN을 제외한 그룹은 BNS로 세팅되게 -->
				<!-- 2017.11 OIL그룹 추가로 OIL그룹은 업무구분이 OIL인 코드목록 조회되도록 변경. -->										 
				<dynamic>
					<isNotEmpty prepend="AND" property="gbl_grp_cd">
						<isEqual property="gbl_grp_cd" compareValue="SMT">
							BIZ_DV_CD = 'SMT' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OIL">
							BIZ_DV_CD = 'OIL' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="CPN">
							BIZ_DV_CD = 'CPN' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="BNS">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="TEC">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="SYS">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="PLN">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OBD">
							BIZ_DV_CD = 'OBD' 
						</isEqual>
					</isNotEmpty>
				</dynamic> 
		ORDER BY BIZ_PROC_DTLS_CD1
		  
 	</select>

 	<select id="Get_CmbBizDtls2_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT     DISTINCT
				   BIZ_DV_CD				 AS HIG_CODE					
				  ,BIZ_PROC_DTLS_CD1		 AS HIG_CODE2
		          ,BIZ_PROC_DTLS_CD2         AS CODE
		          ,BIZ_PROC_DTLS_CDNM2       AS CODE_NM
		FROM  	TBL_BIZ_DV_CD
		WHERE 		 
					USE_YN = 'Y'
				AND BIZ_PROC_DTLS_CD1  <![CDATA[<>]]> 'BNSV'
				AND MIG_FLAG = '3'
				<!-- 2011.11 SMT그룹 추가로 SMT그룹은 업무구분이 SMT인 코드목록 조회되도록 변경. -->		
				<!-- 2012.07 CPN그룹 추가로 CPN그룹은 업무구분이 CPN인 코드목록 조회되도록 변경/SMT,CPN을 제외한 그룹은 BNS로 세팅되게 -->
				<!-- 2017.11 OIL그룹 추가로 OIL그룹은 업무구분이 OIL인 코드목록 조회되도록 변경. -->								 
				<dynamic>
					<isNotEmpty prepend="AND" property="gbl_grp_cd">
						<isEqual property="gbl_grp_cd" compareValue="SMT">
							BIZ_DV_CD = 'SMT' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="CPN">
							BIZ_DV_CD = 'CPN' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OIL">
							BIZ_DV_CD = 'OIL' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="BNS">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="TEC">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="SYS">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="PLN">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OBD">
							BIZ_DV_CD = 'OBD' 
						</isEqual>
					</isNotEmpty>
				</dynamic> 
		ORDER BY BIZ_PROC_DTLS_CD1,SRT_SEQ  	  
 	</select>
 <!-- 통합고객 번호 추가(G코드) -->
	<insert id="Set_TmpCustCnslSeq_INSERT" parameterClass="java.util.HashMap">
		INSERT INTO TBL_CNSL_HIST(
			 CNSL_SEQ_NO
			,CUST_ID
			,CNSLR_ID
			,CNSLR_NM
			,CNSL_DTM
			,EXT_NO
			,CMP_ID
			,ph_rec_seq_no			
			,REG_ID
			,REG_DTM
			,LST_CORC_ID
			,LST_CORC_DTM
			,CUST_NO
			) VALUES (
			 #cnsl_seq_no#			 
			,#cust_id#
			,#gbl_usr_id#
			,#gbl_usr_nm#
			,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			,#gbl_ext_no#
			,#cmp_id#
			,#ph_rec_seq_no#
			,#gbl_usr_id#
			,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			,#gbl_usr_id#
			,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			,#cust_no#			
			)
	</insert>
	
	<update id="Set_CmpCustCurTcnt_UPDATE" parameterClass="java.util.HashMap">	         
		UPDATE TBL_CMP_TGT_CUST 
		   SET   
				TOT_CUR_TCNT = NVL(TOT_CUR_TCNT,0) + 1
		WHERE  		CMP_ID = #cmp_id# 
				AND CUST_ID = #cust_id#  
	</update>
 
 	<select id="Get_TmpCustCnslSeq_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT   GSIB.FUN_GET_SEQ('BNS620',#gbl_usr_id#)	AS CNSL_SEQ_NO
				,GSIB.FUN_GET_TMP_CUST_ID()					AS CUST_NO			 
		FROM  	 DUAL

 	</select>
 	
 	<select id="Get_CnslSeq_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT   GSIB.FUN_GET_SEQ('BNS620',#gbl_usr_id#)	AS CNSL_SEQ_NO			 
		FROM  	 DUAL

 	</select>

	<update id="Set_CallEndDtm_UPDATE" parameterClass="java.util.HashMap">
		UPDATE 	TBL_CNSL_HIST
		SET		 CUST_CUR_END_DTM   	= #cust_cur_end_dtm#
				,CUST_CUR_DRTM			= NVL(TO_CHAR(TO_DATE(#cust_cur_end_dtm# ,'YYYYMMDDHH24MISS'),'SSSSS') - TO_CHAR(TO_DATE(#cust_cur_str_dtm#,'YYYYMMDDHH24MISS'),'SSSSS'),'0')
				
	 	WHERE 			PH_REC_SEQ_NO 	= #ph_rec_seq_no#
	 			AND		CNSLR_ID 		= #gbl_usr_id#
	  	 		AND     EXT_NO			= #gbl_ext_no#
		
	</update>
 	
	<update id="Set_CnslHistInfo_UPDATE" parameterClass="java.util.HashMap">	         
		UPDATE TBL_CNSL_HIST 
		   SET   CUST_ID			= #cust_id#
				,CUST_NM			= #cust_nm#
				,WEB_ID				= #web_id#
				,CUR_TEL_NO			= #cur_tel_no#
				,CNTC_CHNL_CD		= #cntc_chnl_cd#
				,CUST_DV_CD			= #cust_dv_cd#
				,BIZ_DV_CD			= #biz_dv_cd#
				,CUR_TYP_CD			= #cur_typ_cd#
				,CNSL_CTT			= #cnsl_ctt#
<!--				
  				,PH_REC_SEQ_NO		= #ph_rec_seq_no#		
-->
				,CNSLR_CUR_STR_DTM  = #cnslr_cur_str_dtm#
				,CUST_CUR_STR_DTM   = #cust_cur_str_dtm#								
				,CUST_CUR_END_DTM   = CASE WHEN PH_REC_SEQ_NO IS NOT NULL THEN
											(
												CASE WHEN  #cust_cur_end_dtm# IS NULL 
													THEN TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
												ELSE #cust_cur_end_dtm#	
												END
											)								
									  ELSE  #cust_cur_end_dtm# 
									  END
				,CUST_CUR_DRTM		= CASE WHEN PH_REC_SEQ_NO IS NOT NULL THEN
											(
												CASE WHEN  #cust_cur_end_dtm# IS NULL
													THEN NVL(TO_CHAR(SYSDATE,'SSSSS') - TO_CHAR(TO_DATE(#cust_cur_str_dtm#,'YYYYMMDDHH24MISS'),'SSSSS'),'0')
												ELSE NVL(TO_CHAR(TO_DATE(#cust_cur_end_dtm# ,'YYYYMMDDHH24MISS'),'SSSSS') - TO_CHAR(TO_DATE(#cust_cur_str_dtm#,'YYYYMMDDHH24MISS'),'SSSSS'),'0')
												END
											)
									  ELSE
									  		NVL(TO_CHAR(TO_DATE(#cust_cur_end_dtm# ,'YYYYMMDDHH24MISS'),'SSSSS') - TO_CHAR(TO_DATE(#cust_cur_str_dtm#,'YYYYMMDDHH24MISS'),'SSSSS'),'0')									  	
									  END								
				,LST_CORC_ID		= #gbl_usr_id#
				,LST_CORC_DTM		= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') 
				,CUST_NO = #cust_no#
		 WHERE CNSL_SEQ_NO 	= #cnsl_seq_no#  
	</update>
	
	<delete id="Set_CnslHistBizDtls_DELETE" parameterClass="java.util.HashMap">	         
		 DELETE TBL_CNSL_HIST_BIZ_DTLS 
		 WHERE  CNSL_SEQ_NO 	= #cnsl_seq_no#  
	</delete>	
	
	<insert id="Set_CnslHistBizDtls_INSERT" parameterClass="java.util.HashMap">
		INSERT INTO TBL_CNSL_HIST_BIZ_DTLS(
				 CNSL_SEQ_NO
				,BIZ_DTLS_SEQ
				,BIZ_DV_DTLS_CD1
				,BIZ_DV_DTLS_CD2
				,REG_ID
				,REG_DTM
				,LST_CORC_ID
				,LST_CORC_DTM
			) VALUES (
				 #cnsl_seq_no#			 
				,#biz_dtls_seq#
				,#biz_dv_dtls_cd1#
				,#biz_dv_dtls_cd2#			
				,#gbl_usr_id#
				,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				,#gbl_usr_id#
				,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')	
			)
	</insert>		
	
	<update id="Set_CustTdnc_UPDATE" parameterClass="java.util.HashMap">
	     MERGE INTO TBL_CUST_TDNC T1        
		 USING(                        
		        SELECT  #cust_id#                            AS CUST_ID      
				FROM DUAL
			   ) T2                
		 ON (Trim(T1.CUST_ID) = T2.CUST_ID)
	     WHEN MATCHED THEN
		 UPDATE SET 		      
		   		 TDNC_DV_CD		= #tdnc_dv_cd#
				,CTT			= #cust_tdnc#
				,LST_CORC_ID	= #gbl_usr_id#
				,LST_CORC_DTM	= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		 WHEN NOT MATCHED THEN                
		 INSERT (
				 CUST_ID
				,TDNC_DV_CD				
				,CTT
				,REG_ID
				,REG_DTM
				,LST_CORC_ID
				,LST_CORC_DTM
			) VALUES (
				 #cust_id#
				,#tdnc_dv_cd#			 
				,#cust_tdnc#
				,#gbl_usr_id#
				,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				,#gbl_usr_id#
				,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')				
			)	
	</update>
	
	<update id="Set_CallRsvProc_UPDATE" parameterClass="java.util.HashMap">	         
		UPDATE TBL_CALL_RSV 
		   SET   
				 PROC_DTM	= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				,PROC_ST_CD = (SELECT REFN_CD_VLU1 FROM TBL_UNFYCD_SMLCLAS WHERE LRGCLAS_CD = 'OLA02' AND SMLCLAS_CD = #cur_typ_cd#)
				,LST_CORC_ID = #gbl_usr_id#
				,LST_CORC_DTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')				
		 WHERE RSV_SEQ_NO 	= #rsv_seq_no#  
	</update>
	
 	<select id="Get_BizProcInfo_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT   
		 			 a.BIZ_PROC_SEQ_NO        AS BIZ_PROC_SEQ_NO
					,a.PGM_ID                 AS PGM_ID
					,NVL(b.PGM_NM,'')         AS PGM_NM
					,a.PROC_DTM               AS PROC_DTM
					,a.CUST_ID                AS CUST_ID
					,NVL(a.CRD_NO,'')         AS CRD_NO
					,NVL(a.PROC_ATM,'')       AS PROC_ATM
					,NVL(a.CNSL_SEQ_NO,'')    AS CNSL_SEQ_NO
								 			 
		FROM		TBL_BIZ_PROC_INFO a 	INNER JOIN 
					TBL_PGM_INFO b 			ON a.PGM_ID = b.PGM_ID
		WHERE		a.CUST_ID = #cust_id# AND a.CNSL_SEQ_NO = #cnsl_seq_no#
		ORDER BY 	PROC_DTM DESC

 	</select>
	
	
<select id="Get_CmbBizDtls1_650_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT     DISTINCT
				   BIZ_DV_CD				 AS HIG_CODE
		          ,BIZ_PROC_DTLS_CD1         AS CODE
		          ,BIZ_PROC_DTLS_CDNM1       AS CODE_NM
		FROM  	TBL_BIZ_DV_CD
		WHERE 	
				BIZ_PROC_DTLS_CD1  <![CDATA[<>]]> 'BNSV'
				<!-- 2011.11 SMT그룹 추가로 SMT그룹은 업무구분이 SMT인 코드목록 조회되도록 변경. -->		
				<!-- 2012.07 CPN그룹 추가로 CPN그룹은 업무구분이 CPN인 코드목록 조회되도록 변경/SMT,CPN을 제외한 그룹은 BNS로 세팅되게 -->
				<!-- 2014.02.26 BNS,CPN그룹은 업무구분이 BNS,CPN인 코드목록 조회되도록 변경/SMT,TEC,SYS,PLN는 제외 -->					 
				<dynamic>
					<isNotEmpty prepend="AND" property="gbl_grp_cd">
						<isEqual property="gbl_grp_cd" compareValue="SMT">
							BIZ_DV_CD = 'SMT' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="CPN">
							BIZ_DV_CD IN ('CPN', 'BNS')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="BNS">
							BIZ_DV_CD IN ('BNS', 'CPN') 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="TEC">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="SYS">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="PLN">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OBD">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
					</isNotEmpty>
				</dynamic> 
		ORDER BY BIZ_PROC_DTLS_CDNM1
		  
 	</select>

 	<select id="Get_CmbBizDtls2_650_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT     DISTINCT
				   BIZ_DV_CD				 AS HIG_CODE					
				  ,BIZ_PROC_DTLS_CD1		 AS HIG_CODE2
		          ,BIZ_PROC_DTLS_CD2         AS CODE
		          ,BIZ_PROC_DTLS_CDNM2       AS CODE_NM
		FROM  	TBL_BIZ_DV_CD
		WHERE 		 
				 BIZ_PROC_DTLS_CD1  <![CDATA[<>]]> 'BNSV'
				<!-- 2011.11 SMT그룹 추가로 SMT그룹은 업무구분이 SMT인 코드목록 조회되도록 변경. -->		
				<!-- 2012.07 CPN그룹 추가로 CPN그룹은 업무구분이 CPN인 코드목록 조회되도록 변경/SMT,CPN을 제외한 그룹은 BNS로 세팅되게 -->
				<!-- 2014.02.26 BNS,CPN그룹은 업무구분이 BNS,CPN인 코드목록 조회되도록 변경/SMT,TEC,SYS,PLN는 제외 -->								 
				<dynamic>
					<isNotEmpty prepend="AND" property="gbl_grp_cd">
						<isEqual property="gbl_grp_cd" compareValue="SMT">
							BIZ_DV_CD = 'SMT' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="CPN">
							BIZ_DV_CD IN ('CPN', 'BNS')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="BNS">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="TEC">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="SYS">
							BIZ_DV_CD IN ('BNS', 'CPN') 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="PLN">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OBD">
							BIZ_DV_CD IN ('BNS', 'CPN')
						</isEqual>
					</isNotEmpty>
				</dynamic> 
		ORDER BY BIZ_PROC_DTLS_CDNM2	  
 	</select>	
	
	<select id="Get_KeyWord_forSearch_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT	DISTINCT
			   	BIZ_DV_CD				 AS HIG_CODE					
				,BIZ_PROC_DTLS_CD1 || '/' || BIZ_PROC_DTLS_CD2	 AS CODE
		        ,BIZ_PROC_DTLS_CDNM2       AS CODE_NM
		FROM  	TBL_BIZ_DV_CD
		WHERE 	USE_YN = 'Y'
		AND MIG_FLAG = '3'
				<isNotEmpty prepend="AND" property="code_nm">
					BIZ_PROC_DTLS_CDNM2 like '%' || #code_nm# || '%'
				</isNotEmpty>
				<dynamic>
					<isNotEmpty prepend="AND" property="gbl_grp_cd">
						<isEqual property="gbl_grp_cd" compareValue="SMT">
							BIZ_DV_CD = 'SMT' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="CPN">
							BIZ_DV_CD = 'CPN' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="BNS">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="TEC">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="SYS">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="PLN">
							BIZ_DV_CD = 'BNS' 
						</isEqual>
						<isEqual property="gbl_grp_cd" compareValue="OBD">
							BIZ_DV_CD = 'OBD' 
						</isEqual>
					</isNotEmpty>
				</dynamic> 
		ORDER BY BIZ_PROC_DTLS_CDNM2	  
 	</select>
 	
 	<select id="Get_Script_SELECT" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
 		SELECT SCRT_CD		AS CODE
		     , SCRT_CDNM	AS CODE_NM
		     , CTT			AS CODE1
		     , BIZ_DV_CD	AS CODE2 
		  FROM TBL_SCRT
		<!-- WHERE BIZ_DV_CD = 'BDVC' -->
		 WHERE BIZ_DV_CD = 'GUD1'
		   AND USE_YN = 'Y'
 	</select> 
 
<update id="Set_CustStsTdnc_UPDATE" parameterClass="java.util.HashMap">
	     MERGE INTO TBL_CUST_STS_TDNC T1        
		 USING(                        
		        SELECT  #cust_id#                            AS CUST_ID      
				FROM DUAL
			   ) T2                
		 ON (Trim(T1.CUST_ID) = T2.CUST_ID)
	     WHEN MATCHED THEN
		 UPDATE SET 		      
		   		 TDNC_DV_CD		= #tdnc_dv_cd#
				,CTT			= #cust_tdnc#
				,LST_CORC_ID	= #gbl_usr_id#
				,LST_CORC_DTM	= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		 WHEN NOT MATCHED THEN                
		 INSERT (
				 CUST_ID
				,TDNC_DV_CD				
				,CTT
				,REG_ID
				,REG_DTM
				,LST_CORC_ID
				,LST_CORC_DTM
			) VALUES (
				 #cust_id#
				,#tdnc_dv_cd#			 
				,#cust_tdnc#
				,#gbl_usr_id#
				,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				,#gbl_usr_id#
				,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')				
			)	
	</update>
	
</sqlMap>

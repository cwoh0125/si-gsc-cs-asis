<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="QAS011">

<select id="Get_QA_ASES_RLSE_SELECT" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	SELECT    GRP_CD                                	 <!-- 그룹 코드     -->
			, FUN_GET_GRPNM(GRP_CD) AS GRP_NM      		 <!-- 그룹 코드명     -->
			, BIZ_BASC_CD         				    	 <!-- 업무 기준 코드-->
			, ASES_YM                               	 <!-- 평가 년월     -->
			, NVL(SQN,'')	AS SQN										 <!-- 회차추가 2011.03.28 -->			
			, RLSE_YN                               	 <!-- 공개 여부     -->
			, REG_ID                                	 <!-- 등록 ID       -->
			, FUN_GET_USRNM(REG_ID) AS REG_NM      		 <!-- 등록 ID명       -->
			, REG_DTM                               	 <!-- 등록 일시     -->
			, LST_CORC_ID                           	 <!-- 최종 수정 ID  -->
			, FUN_GET_USRNM(LST_CORC_ID) AS LST_CORC_NM  <!-- 최종 수정 ID  -->
			, LST_CORC_DTM                          	 <!-- 최종 수정 일시-->
	FROM TBL_QA_ASES_RLSE_YN
	WHERE 1=1
	<dynamic>
			<isNotEmpty prepend="AND" property="grp_cd">        <!-- 그룹 구분 검색	-->
			    	GRP_CD = #grp_cd#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="biz_cd">       <!--  업무구분 검색	-->
				    BIZ_BASC_CD = #biz_cd#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cal_st">	<!-- 조회기간 검색	-->
				     ASES_YM BETWEEN #cal_st# AND #cal_en# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sqn">       <!--  업무구분 검색	-->
				    SQN = #sqn#
			</isNotEmpty>			
		</dynamic>
		order by ASES_YM ,SQN
</select>


<update id="Get_QA_RLSE_SELECT"  parameterClass="java.util.HashMap">
	MERGE INTO TBL_QA_ASES_RLSE_YN T1        
	 USING(                        
	        SELECT                     
		          #grp_cd#      AS GRP_CD                    <!--  그룹 코드		-->    
		        , 'I' AS BIZ_BASC_CD               <!--  업무 기준 코드   -->     
		        , substr(#ases_ym#,0,6)     AS ASES_YM          		 <!--  평가년월       	-->
		        , #sqn#		AS SQN
		        , #rlse_yn#     AS RLSE_YN					 <!--  공개여부       	-->
		        , #gbl_usr_id#                        AS REG_ID	                
		        , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') AS REG_DTM
		        , #gbl_usr_id#                        AS LST_CORC_ID
		        , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') AS LST_CORC_DTM            
	        FROM DUAL
	      ) T2                
	      ON (T1.GRP_CD 			= T2.GRP_CD				<!-- 값을 비교 -->
	     	  AND T1.BIZ_BASC_CD 	= T2.BIZ_BASC_CD
	      	  AND T1.ASES_YM 		= T2.ASES_YM
	      	  AND T1.SQN			= T2.SQN)     
	 WHEN MATCHED THEN                    
	      UPDATE SET                       
				   T1.RLSE_YN   	= T2.RLSE_YN			<!-- 입력값을 DB로 옮겨감  -->
		     	 , T1.LST_CORC_ID   = T2.LST_CORC_ID 
			 	 , T1.LST_CORC_DTM 	= T2.LST_CORC_DTM
			 	 
	 WHEN NOT MATCHED THEN                
	      INSERT (               
				   T1.GRP_CD     
				 , T1.BIZ_BASC_CD    
				 , T1.ASES_YM
				 , T1.SQN
				 , T1.RLSE_YN
				 , T1.REG_ID
				 , T1.REG_DTM
		     	 , T1.LST_CORC_ID
			 	 , T1.LST_CORC_DTM                     
	      ) VALUES (               
				   T2.GRP_CD                    
				 , T2.BIZ_BASC_CD   
				 , T2.ASES_YM
				 , T2.SQN
				 , T2.RLSE_YN            
				 , T2.REG_ID                     
				 , T2.REG_DTM             
		     	 , T2.LST_CORC_ID  
			 	 , T2.LST_CORC_DTM 
	      )
</update>

</sqlMap>
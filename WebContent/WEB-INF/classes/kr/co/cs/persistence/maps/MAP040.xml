<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="MAP040">


	<!-- 
		기초데이터 조회1
	 -->
	<select id="Get_MM_list1" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">


		select
				ASES_YM,
				GRP_CD,
				INCL_CALL,
				RSPS_CALL,
				AVG_INCL_CALL,
				AVG_RSPS_CALL,
				AVG_CUR_DRTM,
				AVG_JOB_DRTM,
				AVG_EML_DRTM,
				AVG_WKG_DRTM,
				HDOFC_PRSCNT_CNT
	
				from TBL_MM_ASES_GRP_STTC where 1=1
				
		<dynamic>
			<isNotEmpty prepend="AND" property="ases_ym">
				ASES_YM = #ases_ym#
			</isNotEmpty>
		</dynamic>

		<dynamic>
			<isNotEmpty prepend="AND" property="grp_cd">
				GRP_CD = #grp_cd#
			</isNotEmpty>
		</dynamic>



	</select>

	<!-- 
		기초데이터 조회2
	 -->
	<select id="Get_MM_list2" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">


		select
				ASES_YM,
				CNSLR_ID,
				RECV_CALL,
				DPCH_CALL,
				EML_NCNT,
				FAX_NCNT,
				QUST_SCSS_NCNT,
				QUST_TRY_NCNT,
				DSFT_ACPN_NCNT,
				PROPS_REG_NCNT,			
				RECV_CUR_DRTM,
				DPCH_CUR_DRTM,
				JOB_DRTM,
				EML_DRTM,
				REST_DRTM,
				TOT_WKG_DRTM,
				EDU_DRTM,
				EDU_CMPLTN,
				BIZ_ASES,
				ATTD,
				ERR,
				PRIS_ACPN,
				MIST_CNSL_NCNT,
				DGIND_SCOR,
				QA_SCOR,
				USR_NM
			
				from tbl_mm_ases_cnslr_sttc A 
				LEFT OUTER JOIN 
				tbl_usr B ON A.CNSLR_ID=B.USR_ID 
				where 1=1
		
		<dynamic>
			<isNotEmpty prepend="AND" property="ases_ym">
				ASES_YM = #ases_ym#
			</isNotEmpty>
		</dynamic>

		<dynamic>
			<isNotEmpty prepend="AND" property="grp_cd">
				GRP_CD = #grp_cd#
			</isNotEmpty>
		</dynamic>
		
		<dynamic>
			<isNotEmpty prepend="AND" property="part_cd">
				PART_CD = #part_cd#
			</isNotEmpty>
		</dynamic>
		
		<dynamic>
			<isNotEmpty prepend="AND" property="cnslr_id">
				CNSLR_ID = #cnslr_id#
			</isNotEmpty>
		</dynamic>
	</select>

	<!-- 
		파트콤보를 조회한다.
	 -->
  	<select id="Get_PartCdList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT GRP_CD       AS HIG_CODE		<!-- 상위그룹코드 -->
		     , PART_CD      AS CODE			<!-- 파트코드 -->
		     , PART_CDNM    AS CODE_NM		<!-- 파트코드명 -->
		  FROM TBL_PART_CD    
		 WHERE USE_YN ='Y'
		ORDER BY GRP_CD, SRT_SEQ      
 	</select>
 	
	<!-- 
		사용자콤보를 조회한다.
	 -->
  	<select id="Get_UsrList_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT GRP_CD       AS HIG_CODE01	
		, PART_CD AS HIG_CODE02
		,USR_ID      AS 	CODE		<!-- 상담원ID -->
		, USR_NM      AS 	CODE_NM		<!-- 상담원명 -->		     
		  FROM TBL_USR    
		 WHERE NVL(USE_YN,'Y') = 'Y'
		   AND (QUAL_LOSS_DD IS NULL OR QUAL_LOSS_DD = '')
			<dynamic>
				<isNotEmpty prepend="AND" property="grp_cd">
					GRP_CD = #grp_cd#
				</isNotEmpty>		
				<isNotEmpty prepend="AND" property="part_cd">
					PART_CD = #part_cd#
				</isNotEmpty>				
			</dynamic>		 
		ORDER BY USR_NM     
 	</select>
 	
 	<!-- 
		진현주님께서 요청 하신 월평가
	 -->
 		<select id="Get_MM_List3" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
 	
 	select  A.TIME_KEY as TIME_KEY
        ,B.USR_ID
        ,B.USR_NM as USR_NM
        ,A.INBND_HOUSE as INBND_HOUSE
        ,A.OTBND_HOUSE as OTBND_HOUSE
        
        ,(select count(*) from TBL_EML_SNDG where REG_ID != 'DBA' and REG_ID=B.USR_ID and 
        SNDG_DTM between #time_key# || '00000000' and #time_key# || '32000000') as EMAIL
        
		from tbl_bt_cti_rpt_ym A LEFT OUTER JOIN tbl_usr B ON A.USR_ID=B.USR_ID
		where A.time_key=#time_key#
		<dynamic>
				<isNotEmpty prepend="AND" property="grp_cd">
				 B.GRP_CD=#grp_cd# 
	   		 </isNotEmpty>
	   		 	<isNotEmpty prepend="AND" property="part_cd">
		  		B.PART_CD=#part_cd#		   
 			</isNotEmpty>
 	</dynamic>		
 	
 	
 	</select>
 	
 	
 	

</sqlMap>

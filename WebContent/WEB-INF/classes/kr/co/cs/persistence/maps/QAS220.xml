<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="QAS220">
	
	<!-- QA통계 - 회차별 세부항목현황 -->
	
	<!-- 회차별 메뉴 -->
	<select id="GetASES_INFO_2_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		SELECT 'COL_'||(ROW_NUMBER() OVER (ORDER BY SUBSTR(FIXD_COL, 1,1) || LPAD(SUBSTR(FIXD_COL, 2,2),2,'0')))AS NUM
		    , REPLACE(FIXD_COL,'0','') AS FIXD_COL
		    , CASE WHEN DISP_HEAD1 = '선택' THEN DISP_HEAD1
		            ELSE DISP_HEAD1||'('||SCOR||')' 
		        END AS DISP_HEAD1
		    , DISP_HEAD2
            , DISP_HEAD3
		FROM (
		        SELECT GRP_CD
		            , BIZ_BASC_CD
		            , SEQ_NO
		            , LRGCLAS_CD
		            , DISP_HEAD1
		            , SCOR
		            , FIXD_COL
		            , MEDCLAS_CD
		            , DISP_HEAD2
		            , SMLCLAS_CD
		            , DISP_HEAD3
		        FROM (SELECT A.GRP_CD
		                    , A.BIZ_BASC_CD
		                    , A.SEQ_NO
		                    , B.LRGCLAS_CD
		                    , B.LRGCLAS_CDNM AS DISP_HEAD1
		                    , B.SCOR
		                    , SUBSTR(D.FIXD_COL, 1,1) || LPAD(SUBSTR(D.FIXD_COL, 2,2),2,'0') AS FIXD_COL
		                    , C.MEDCLAS_CD
		                    , C.MEDCLAS_CDNM AS DISP_HEAD2
		                    , D.SMLCLAS_CD
		                    , D.ASGN_SCOR1 AS DISP_HEAD3
		                FROM TBL_QA_ASES_INFO_GRP A
		                INNER JOIN TBL_QA_ASES_INFO_LRGCLAS B
		                ON (A.GRP_CD = B.GRP_CD AND A.BIZ_BASC_CD = B.BIZ_BASC_CD AND A.SEQ_NO = B.SEQ_NO)
		                INNER JOIN TBL_QA_ASES_INFO_MEDCLAS C
		                ON (B.GRP_CD = C.GRP_CD  AND B.BIZ_BASC_CD = C.BIZ_BASC_CD AND B.SEQ_NO = C.SEQ_NO AND B.LRGCLAS_CD = C.LRGCLAS_CD) 
		                INNER JOIN TBL_QA_ASES_INFO_SMLCLAS D
		                ON (C.GRP_CD = D.GRP_CD AND C.BIZ_BASC_CD = D.BIZ_BASC_CD AND C.SEQ_NO = D.SEQ_NO AND C.LRGCLAS_CD = D.LRGCLAS_CD AND C.MEDCLAS_CD = D.MEDCLAS_CD) 
		                WHERE A.QA_USAG_DV_CD = '1'
		                AND B.BIZ_BASC_CD = 'I'
		                AND A.GRP_CD = #grp_cd#
		                AND NVL(A.DEL_YN,'N') = 'N'
		                AND NVL(A.USE_YN,'Y') = 'Y'
		                AND NVL(B.DEL_YN,'N') = 'N'   
		                AND NVL(C.DEL_YN,'N') = 'N'      
		                AND NVL(D.DEL_YN,'N') = 'N'
		                AND D.FIXD_COL IS NOT NULL
		                UNION ALL
		                SELECT MAX(A.GRP_CD) AS GRP_CD
		                    , MAX(A.BIZ_BASC_CD) AS BIZ_BASC_CD
		                    , MAX(A.SEQ_NO) AS SEQ_NO
		                    , B.LRGCLAS_CD
		                    , '소계' LRGCLAS_CDNM
		                    , MAX(B.SCOR) AS SCOR
		                    , SUBSTR(D.FIXD_COL, 1,1) || '11' AS FIXD_COL
		                    , MAX(C.MEDCLAS_CD) AS MEDCLAS_CD
		                    , '소계' AS MEDCLAS_CDNM
		                    , MAX(D.SMLCLAS_CD) AS SMLCLAS_CD
		                    , MAX(D.ASGN_SCOR1) AS ASGN_SCOR1
		                FROM TBL_QA_ASES_INFO_GRP A
		                INNER JOIN TBL_QA_ASES_INFO_LRGCLAS B
		                ON (A.GRP_CD = B.GRP_CD AND A.BIZ_BASC_CD = B.BIZ_BASC_CD AND A.SEQ_NO = B.SEQ_NO)
		                INNER JOIN TBL_QA_ASES_INFO_MEDCLAS C
		                ON (B.GRP_CD = C.GRP_CD  AND B.BIZ_BASC_CD = C.BIZ_BASC_CD AND B.SEQ_NO = C.SEQ_NO AND B.LRGCLAS_CD = C.LRGCLAS_CD) 
		                INNER JOIN TBL_QA_ASES_INFO_SMLCLAS D
		                ON (C.GRP_CD = D.GRP_CD AND C.BIZ_BASC_CD = D.BIZ_BASC_CD AND C.SEQ_NO = D.SEQ_NO AND C.LRGCLAS_CD = D.LRGCLAS_CD AND C.MEDCLAS_CD = D.MEDCLAS_CD) 
		                WHERE A.QA_USAG_DV_CD = '1'
		                AND B.BIZ_BASC_CD = 'I'
		                AND A.GRP_CD = #grp_cd#
		                AND NVL(A.DEL_YN,'N') = 'N'
		                AND NVL(A.USE_YN,'Y') = 'Y'
		                AND NVL(B.DEL_YN,'N') = 'N'   
		                AND NVL(C.DEL_YN,'N') = 'N'      
		                AND NVL(D.DEL_YN,'N') = 'N'
		                GROUP BY B.LRGCLAS_CD,SUBSTR(D.FIXD_COL, 1,1) || '11'
		                UNION ALL
		                SELECT MAX(A.GRP_CD) AS GRP_CD
		                    , MAX(A.BIZ_BASC_CD) AS BIZ_BASC_CD
		                    , MAX(A.SEQ_NO) AS SEQ_NO
		                    , '4' AS LRGCLAS_CD
		                    , '총점' LRGCLAS_CDNM
		                    , TO_NUMBER(SUM(D.ASGN_SCOR1)) AS SCOR
		                    , 'D' || '11' AS FIXD_COL
		                    , '7'  AS MEDCLAS_CD
		                    , '총점' AS MEDCLAS_CDNM
		                    , MAX(D.SMLCLAS_CD) AS SMLCLAS_CD
		                    , TO_CHAR(SUM(D.ASGN_SCOR1)) AS ASGN_SCOR1
		                FROM TBL_QA_ASES_INFO_GRP A
		                INNER JOIN TBL_QA_ASES_INFO_LRGCLAS B
		                ON (A.GRP_CD = B.GRP_CD AND A.BIZ_BASC_CD = B.BIZ_BASC_CD AND A.SEQ_NO = B.SEQ_NO)
		                INNER JOIN TBL_QA_ASES_INFO_MEDCLAS C
		                ON (B.GRP_CD = C.GRP_CD  AND B.BIZ_BASC_CD = C.BIZ_BASC_CD AND B.SEQ_NO = C.SEQ_NO AND B.LRGCLAS_CD = C.LRGCLAS_CD) 
		                INNER JOIN TBL_QA_ASES_INFO_SMLCLAS D
		                ON (C.GRP_CD = D.GRP_CD AND C.BIZ_BASC_CD = D.BIZ_BASC_CD AND C.SEQ_NO = D.SEQ_NO AND C.LRGCLAS_CD = D.LRGCLAS_CD AND C.MEDCLAS_CD = D.MEDCLAS_CD) 
		                WHERE A.QA_USAG_DV_CD = '1'
		                AND B.BIZ_BASC_CD = 'I'  
		                AND A.GRP_CD = #grp_cd#
		                AND NVL(A.DEL_YN,'N') = 'N'
		                AND NVL(A.USE_YN,'Y') = 'Y'
		                AND NVL(B.DEL_YN,'N') = 'N'   
		                AND NVL(C.DEL_YN,'N') = 'N'      
		                AND NVL(D.DEL_YN,'N') = 'N'
		                UNION ALL
		                SELECT MAX(A.GRP_CD) AS GRP_CD
		                    , MAX(A.BIZ_BASC_CD) AS BIZ_BASC_CD
		                    , MAX(A.SEQ_NO) AS SEQ_NO
		                    , '5' AS LRGCLAS_CD
		                    , '선택' LRGCLAS_CDNM
		                    , 0 AS SCOR
		                    , 'F' || '11' AS FIXD_COL
		                    , '7'  AS MEDCLAS_CD
		                    , '선택' AS MEDCLAS_CDNM
		                    , MAX(D.SMLCLAS_CD) AS SMLCLAS_CD
		                    , '' AS DISP_HEAD3
		                FROM TBL_QA_ASES_INFO_GRP A
		                INNER JOIN TBL_QA_ASES_INFO_LRGCLAS B
		                ON (A.GRP_CD = B.GRP_CD AND A.BIZ_BASC_CD = B.BIZ_BASC_CD AND A.SEQ_NO = B.SEQ_NO)
		                INNER JOIN TBL_QA_ASES_INFO_MEDCLAS C
		                ON (B.GRP_CD = C.GRP_CD  AND B.BIZ_BASC_CD = C.BIZ_BASC_CD AND B.SEQ_NO = C.SEQ_NO AND B.LRGCLAS_CD = C.LRGCLAS_CD) 
		                INNER JOIN TBL_QA_ASES_INFO_SMLCLAS D
		                ON (C.GRP_CD = D.GRP_CD AND C.BIZ_BASC_CD = D.BIZ_BASC_CD AND C.SEQ_NO = D.SEQ_NO AND C.LRGCLAS_CD = D.LRGCLAS_CD AND C.MEDCLAS_CD = D.MEDCLAS_CD) 
		                WHERE A.QA_USAG_DV_CD = '1'
		                AND B.BIZ_BASC_CD = 'I'  
		                AND A.GRP_CD = #grp_cd#
		                AND NVL(A.DEL_YN,'N') = 'N'
		                AND NVL(A.USE_YN,'Y') = 'Y'
		                AND NVL(B.DEL_YN,'N') = 'N'   
		                AND NVL(C.DEL_YN,'N') = 'N'      
		                AND NVL(D.DEL_YN,'N') = 'N'
		        )A  
		        ORDER BY FIXD_COL   
		)A                            
	</select>

	<!-- 회차별 세부항목현황 -->
	<select id="GetSQN_DETAIL_SELECT" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
			WITH T AS
		(    
	   				  SELECT A.ASES_YM
	                      , A.GRP_CD
	                      , A.LRGCLAS_CD
	                      , A.MEDCLAS_CD
	                      , A.SMLCLAS_CD
	                      , A.FIXD_COL
	                      , A.ASCR
	                      , A.CNSLR_ID 
	                      , A.ASGN_SCOR1 
	                      , A.SQN_CNT
	                      , A.SQN
	                      , A.CNSLR_ID_CNT
	                      , A.SUB_SCOR
	                      , A.CNSL_AVG_SUM
	                  FROM(
	                          SELECT C.ASES_YM
	                            , A.GRP_CD
	                            , B.LRGCLAS_CD
	                            , B.MEDCLAS_CD
	                            , B.SMLCLAS_CD
	                            , A.FIXD_COL
	                            , B.ASCR
	                            , SUM(B.ASCR) OVER(PARTITION BY D.GRP_CD,C.ASES_YM,A.FIXD_COL,B.SQN) AS CNSL_AVG_SUM
	                            , COUNT(DISTINCT B.CNSLR_ID) OVER(PARTITION BY D.GRP_CD,C.ASES_YM,B.SQN) AS CNSLR_ID_CNT
	                            , COUNT(B.SQN) OVER(PARTITION BY A.FIXD_COL,D.GRP_CD,C.ASES_YM) AS SQN_CNT
	                            , B.SQN
	                            , B.CNSLR_ID 
	                            , A.ASGN_SCOR1
	                            , GSIB.FUN_GET_LRGCLAS_SCOR(A.GRP_CD,A.SEQ_NO,B.LRGCLAS_CD) AS SUB_SCOR
	                           
	                            
	                          FROM TBL_QA_ASES_INFO_SMLCLAS A 
	                            INNER JOIN TBL_QA_ASES_DTLS B
	                               ON (A.GRP_CD = B.GRP_CD
	                                   AND A.BIZ_BASC_CD = B.BIZ_BASC_CD
	                                   AND A.SEQ_NO = B.SEQ_NO
	                                   AND A.LRGCLAS_CD = B.LRGCLAS_CD                       
	                                   AND A.MEDCLAS_CD = B.MEDCLAS_CD
	                                   AND A.SMLCLAS_CD = B.SMLCLAS_CD) 
	                            INNER JOIN TBL_QA_ASES C 
	                               ON (B.GRP_CD = C.GRP_CD 
	                                    AND B.BIZ_BASC_CD = C.BIZ_BASC_CD 
	                                    AND B.SEQ_NO = C.SEQ_NO 
	                                    AND B.ASES_DTM = C.ASES_DTM 
	                                    AND B.SQN = C.SQN 
	                                    AND B.CNSLR_ID = C.CNSLR_ID) 
	                            INNER JOIN TBL_CNSLR_PART_HIST D
                                   ON (C.ASES_YM = D.REG_YM AND C.CNSLR_ID = D.CNSLR_ID AND A.GRP_CD = D.GRP_CD)	                                                                                         
									                          
                     WHERE
                     	 <!--   
                     	 NVL(C.SELF_CHCK_YN,'N') = 'N'
                     	 -->
                         NVL(C.DEL_YN,'N') = 'N'
                     AND NVL(B.DEL_YN,'N') = 'N' 
                     AND B.ASCR IS NOT NULL
                     AND B.CNSLR_ID != C.ASES_ID
                     <dynamic>	 
						<isNotEmpty prepend="AND" property="grp_cd">
							D.GRP_CD = #grp_cd#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="part_cd">
							D.PART_CD = #part_cd#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="cnslr_id">
							B.CNSLR_ID = #cnslr_id#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="ases_ym">
							C.ASES_YM  = #ases_ym#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="tst_ases_yn">
							C.TST_ASES_YN = #tst_ases_yn#
						</isNotEmpty>
						<isNotEmpty prepend="AND" property="sqn">
							B.SQN = #sqn#
						</isNotEmpty>							
					</dynamic>
              )A
		)	
	
	
		SELECT A.BRANCH 
		    , A.GUBUN
		    , A.COL_A1   
		    , A.COL_A2   
		    , A.COL_A3   
		    , A.COL_A4   
		    , A.COL_A5   
		    , A.COL_A6   
		    , A.COL_A7   
		    , A.COL_A8   
		    , A.COL_A9   
		    , A.COL_A10  
		    , A.COL_A11  
		    , A.COL_B1   
		    , A.COL_B2   
		    , A.COL_B3   
		    , A.COL_B4   
		    , A.COL_B5   
		    , A.COL_B6   
		    , A.COL_B7   
		    , A.COL_B8   
		    , A.COL_B9   
		    , A.COL_B10  
		    , A.COL_B11  
		    , A.COL_C1   
		    , A.COL_C2   
		    , A.COL_C3   
		    , A.COL_C4   
		    , A.COL_C5   
		    , A.COL_C6   
		    , A.COL_C7   
		    , A.COL_C8   
		    , A.COL_C9   
		    , A.COL_C10  
		    , A.COL_C11  
		    , A.COL_D11  
		FROM (      
		        SELECT A.BRANCH
		            , A.GUBUN
		            , A.COL_A1   
		            , A.COL_A2
		            , A.COL_A3
		            , A.COL_A4
		            , A.COL_A5
		            , A.COL_A6
		            , A.COL_A7
		            , A.COL_A8
		            , A.COL_A9
	                , A.COL_A10
	                , ROUND(A.COL_A1 + A.COL_A2 + A.COL_A3 + A.COL_A4 + A.COL_A5 + A.COL_A6 + A.COL_A7 + A.COL_A8 + A.COL_A9 + A.COL_A10, 1) AS COL_A11
	                , A.COL_B1   
	                , A.COL_B2
	                , A.COL_B3
	                , A.COL_B4
	                , A.COL_B5
	                , A.COL_B6
	                , A.COL_B7
	                , A.COL_B8
	                , A.COL_B9
	                , A.COL_B10
	                , ROUND(A.COL_B1 + A.COL_B2 + A.COL_B3 + A.COL_B4 + A.COL_B5 + A.COL_B6 + A.COL_B7 + A.COL_B8 + A.COL_B9 + A.COL_B10, 1) AS COL_B11
	                , A.COL_C1   
	                , A.COL_C2
	                , A.COL_C3
	                , A.COL_C4
	                , A.COL_C5
	                , A.COL_C6
	                , A.COL_C7
	                , A.COL_C8
	                , A.COL_C9
	                , A.COL_C10
	                , ROUND(A.COL_C1 + A.COL_C2 + A.COL_C3 + A.COL_C4 + A.COL_C5 + A.COL_C6 + A.COL_C7 + A.COL_C8 + A.COL_C9 + A.COL_C10, 1) AS COL_C11
	                , ROUND(A.COL_A11 + A.COL_B11 + A.COL_C11, 1)  AS COL_D11
				FROM (
                        SELECT A.BRANCH||'차' AS BRANCH
                            , A.GUBUN
                            , ROUND(A.COL_A1, 1)    AS COL_A1    
                            , ROUND(A.COL_A2, 1)    AS COL_A2 
                            , ROUND(A.COL_A3, 1)    AS COL_A3 
                            , ROUND(A.COL_A4, 1)    AS COL_A4 
                            , ROUND(A.COL_A5, 1)    AS COL_A5 
                            , ROUND(A.COL_A6, 1)    AS COL_A6 
                            , ROUND(A.COL_A7, 1)    AS COL_A7 
                            , ROUND(A.COL_A8, 1)    AS COL_A8 
                            , ROUND(A.COL_A9, 1)    AS COL_A9 
                            , ROUND(A.COL_A10,1)    AS COL_A10
                            , A.COL_A1 + A.COL_A2 + A.COL_A3 + A.COL_A4 + A.COL_A5 + A.COL_A6 + A.COL_A7 + A.COL_A8 + A.COL_A9 + A.COL_A10 AS COL_A11  
                            , ROUND(A.COL_B1, 1)   AS COL_B1  
                            , ROUND(A.COL_B2, 1)   AS COL_B2 
                            , ROUND(A.COL_B3, 1)   AS COL_B3 
                            , ROUND(A.COL_B4, 1)   AS COL_B4 
                            , ROUND(A.COL_B5, 1)   AS COL_B5 
                            , ROUND(A.COL_B6, 1)   AS COL_B6 
                            , ROUND(A.COL_B7, 1)   AS COL_B7 
                            , ROUND(A.COL_B8, 1)   AS COL_B8 
                            , ROUND(A.COL_B9, 1)   AS COL_B9 
                            , ROUND(A.COL_B10,1)  AS COL_B10
                            , A.COL_B1 + A.COL_B2 + A.COL_B3 + A.COL_B4 + A.COL_B5 + A.COL_B6 + A.COL_B7 + A.COL_B8 + A.COL_B9 + A.COL_B10 AS COL_B11  
                            , ROUND(A.COL_C1, 1)   AS COL_C1 
                            , ROUND(A.COL_C2, 1)   AS COL_C2 
                            , ROUND(A.COL_C3, 1)   AS COL_C3 
                            , ROUND(A.COL_C4, 1)   AS COL_C4 
                            , ROUND(A.COL_C5, 1)   AS COL_C5 
                            , ROUND(A.COL_C6, 1)   AS COL_C6 
                            , ROUND(A.COL_C7, 1)   AS COL_C7 
                            , ROUND(A.COL_C8, 1)   AS COL_C8 
                            , ROUND(A.COL_C9, 1)   AS COL_C9 
                            , ROUND(A.COL_C10,1)  AS COL_C10
                            , A.COL_C1 + A.COL_C2 + A.COL_C3 + A.COL_C4 + A.COL_C5 + A.COL_C6 + A.COL_C7 + A.COL_C8 + A.COL_C9 + A.COL_C10 AS COL_C11  
                        FROM (  SELECT A.SQN AS BRANCH 
                                    , '점수' AS GUBUN   
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A1' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A1  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A2' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A2  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A3' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A3  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A4' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A4  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A5' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A5  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A6' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A6     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A7' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A7     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A8' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A8     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A9' THEN A.ASCR/A.SQN_NO END),0)    AS COL_A9     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'A10' THEN A.ASCR/A.SQN_NO END),0)   AS COL_A10   
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B1' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B1  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B2' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B2  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B3' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B3  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B4' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B4  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B5' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B5  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B6' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B6     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B7' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B7     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B8' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B8     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B9' THEN A.ASCR/A.SQN_NO END),0)    AS COL_B9     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'B10' THEN A.ASCR/A.SQN_NO END),0)   AS COL_B10 
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C1' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C1  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C2' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C2  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C3' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C3  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C4' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C4  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C5' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C5  
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C6' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C6     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C7' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C7     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C8' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C8     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C9' THEN A.ASCR/A.SQN_NO END),0)    AS COL_C9     
                                    , NVL(MAX(CASE WHEN A.FIXD_COL = 'C10' THEN A.ASCR/A.SQN_NO END),0)   AS COL_C10   
                                FROM(  
                                        SELECT A.SQN
                                            , A.GRP_CD
                                            , A.LRGCLAS_CD
                                            , A.MEDCLAS_CD
                                            , A.SMLCLAS_CD
                                            , A.FIXD_COL
                                            , A.ASCR
                                            , A.CNSLR_ID_CNT
                                            , A.CNSLR_ID 
                                            , A.ASGN_SCOR1 
                                            , A.SQN_NO
                                        FROM(
                                        		SELECT B.SQN
	                                              , A.GRP_CD
	                                              , B.LRGCLAS_CD
	                                              , B.MEDCLAS_CD
	                                              , B.SMLCLAS_CD
	                                              , A.FIXD_COL
	                                              , SUM(B.ASCR) OVER(PARTITION BY A.FIXD_COL,B.SQN,D.GRP_CD,C.ASES_YM) AS ASCR
	                                              , COUNT(DISTINCT B.CNSLR_ID) OVER(PARTITION BY D.GRP_CD,C.ASES_YM) AS CNSLR_ID_CNT
	                                              , COUNT(B.SQN) OVER(PARTITION BY A.FIXD_COL,B.SQN,D.GRP_CD,C.ASES_YM) AS SQN_NO
	                                              , B.CNSLR_ID 
	                                              , A.ASGN_SCOR1
                                            	FROM TBL_QA_ASES_INFO_SMLCLAS A 
                                              	INNER JOIN TBL_QA_ASES_DTLS B
                                                     ON (A.GRP_CD = B.GRP_CD
                                                         AND A.BIZ_BASC_CD = B.BIZ_BASC_CD
                                                         AND A.SEQ_NO = B.SEQ_NO
                                                         AND A.LRGCLAS_CD = B.LRGCLAS_CD                       
                                                         AND A.MEDCLAS_CD = B.MEDCLAS_CD
                                                         AND A.SMLCLAS_CD = B.SMLCLAS_CD) 
                                              	INNER JOIN TBL_QA_ASES C 
                                                     ON (B.GRP_CD = C.GRP_CD 
                                                          AND B.BIZ_BASC_CD = C.BIZ_BASC_CD 
                                                          AND B.SEQ_NO = C.SEQ_NO 
                                                          AND B.ASES_DTM = C.ASES_DTM 
                                                          AND B.SQN = C.SQN 
                                                          AND B.CNSLR_ID = C.CNSLR_ID) 
                                              	INNER JOIN TBL_CNSLR_PART_HIST D
                             						 ON (C.ASES_YM = D.REG_YM AND C.CNSLR_ID = D.CNSLR_ID AND A.GRP_CD = D.GRP_CD)                                                     
	                                            WHERE
	                                            	<!--   
	                                            	NVL(C.SELF_CHCK_YN,'N') = 'N'
	                                            	--> 
	                                                NVL(C.DEL_YN,'N') = 'N'
	                                            AND NVL(B.DEL_YN,'N') = 'N' 
	                                            AND B.ASCR IS NOT NULL
	                                            AND B.CNSLR_ID != C.ASES_ID
                                            	<dynamic>	 
													<isNotEmpty prepend="AND" property="grp_cd">
														D.GRP_CD = #grp_cd#
													</isNotEmpty>
													<isNotEmpty prepend="AND" property="part_cd">
														D.PART_CD = #part_cd#
													</isNotEmpty>
													<isNotEmpty prepend="AND" property="cnslr_id">
														B.CNSLR_ID = #cnslr_id#
													</isNotEmpty>
													<isNotEmpty prepend="AND" property="sqn">
														B.SQN = #sqn#
													</isNotEmpty>
													<isNotEmpty prepend="AND" property="ases_ym">
														C.ASES_YM = #ases_ym#
													</isNotEmpty>
													<isNotEmpty prepend="AND" property="tst_ases_yn">
														C.TST_ASES_YN = #tst_ases_yn#
													</isNotEmpty>
												</dynamic>
                                        )A
                                 )A
                                 GROUP BY A.SQN
		                    )A
		        )A
		        
		        UNION ALL
				SELECT 
                      A.BRANCH
                    , A.GUBUN
		            , A.COL_A1   
		            , A.COL_A2
		            , A.COL_A3
		            , A.COL_A4
		            , A.COL_A5
		            , A.COL_A6
		            , A.COL_A7
		            , A.COL_A8
		            , A.COL_A9
		            , A.COL_A10
		            , A.COL_A11 
		            , A.COL_B1   
		            , A.COL_B2
		            , A.COL_B3
		            , A.COL_B4
		            , A.COL_B5
		            , A.COL_B6
		            , A.COL_B7
		            , A.COL_B8
		            , A.COL_B9
		            , A.COL_B10
		            , A.COL_B11 
		            , A.COL_C1   
		            , A.COL_C2
		            , A.COL_C3
		            , A.COL_C4
		            , A.COL_C5
		            , A.COL_C6
		            , A.COL_C7
		            , A.COL_C8
		            , A.COL_C9
		            , A.COL_C10
		            , A.COL_C11 
		            , TRUNC(ROUND((A.COL_A11_T + A.COL_B11_T + A.COL_C11_T)* 100/100,1),1) AS COL_D11		            
		        FROM (
		                SELECT
		                      A.BRANCH
				            , A.GUBUN
				            , TRUNC(ROUND(A.COL_A1,1),1) AS COL_A1
				            , TRUNC(ROUND(A.COL_A2,1),1) AS COL_A2
				            , TRUNC(ROUND(A.COL_A3,1),1) AS COL_A3
                            , TRUNC(ROUND(A.COL_A4,1),1) AS COL_A4
                            , TRUNC(ROUND(A.COL_A5,1),1) AS COL_A5
                            , TRUNC(ROUND(A.COL_A6,1),1) AS COL_A6
                            , TRUNC(ROUND(A.COL_A7,1),1) AS COL_A7
                            , TRUNC(ROUND(A.COL_A8,1),1) AS COL_A8
                            , TRUNC(ROUND(A.COL_A9,1),1) AS COL_A9
                            , TRUNC(ROUND(A.COL_A10,1),1) AS COL_A10
				            , A.COL_A_SCR1 + A.COL_A_SCR2 + A.COL_A_SCR3 + A.COL_A_SCR4 + A.COL_A_SCR5 + A.COL_A_SCR6 + A.COL_A_SCR7 + A.COL_A_SCR8 + A.COL_A_SCR9 + A.COL_A_SCR10 AS COL_A11_T                            
				            , CASE WHEN A.SUB_SCOR_A = 0 THEN 0 
				                    ELSE TRUNC(ROUND((A.COL_A_SCR1 + A.COL_A_SCR2 + A.COL_A_SCR3 + A.COL_A_SCR4 + A.COL_A_SCR5 + A.COL_A_SCR6 + A.COL_A_SCR7 + A.COL_A_SCR8 + A.COL_A_SCR9 + A.COL_A_SCR10)*100/A.SUB_SCOR_A,1),1) END AS COL_A11
				                                        		                    
				            , TRUNC(ROUND(A.COL_B1,1),1) AS COL_B1				            
				            , TRUNC(ROUND(A.COL_B2,1),1) AS COL_B2
				            , TRUNC(ROUND(A.COL_B3,1),1) AS COL_B3
				            , TRUNC(ROUND(A.COL_B4,1),1) AS COL_B4
				            , TRUNC(ROUND(A.COL_B5,1),1) AS COL_B5
				            , TRUNC(ROUND(A.COL_B6,1),1) AS COL_B6
				            , TRUNC(ROUND(A.COL_B7,1),1) AS COL_B7
				            , TRUNC(ROUND(A.COL_B8,1),1) AS COL_B8
				            , TRUNC(ROUND(A.COL_B9,1),1) AS COL_B9
				            , TRUNC(ROUND(A.COL_B10,1),1) AS COL_B10
				            , A.COL_B_SCR1 + A.COL_B_SCR2 + A.COL_B_SCR3 + A.COL_B_SCR4 + A.COL_B_SCR5 + A.COL_B_SCR6 + A.COL_B_SCR7 + A.COL_B_SCR8 + A.COL_B_SCR9 + A.COL_B_SCR10 AS COL_B11_T
				            , CASE WHEN A.SUB_SCOR_B = 0 THEN 0
				                    ELSE TRUNC(ROUND((A.COL_B_SCR1 + A.COL_B_SCR2 + A.COL_B_SCR3 + A.COL_B_SCR4 + A.COL_B_SCR5 + A.COL_B_SCR6 + A.COL_B_SCR7 + A.COL_B_SCR8 + A.COL_B_SCR9 + A.COL_B_SCR10)*100/A.SUB_SCOR_B,1),1) END AS COL_B11
				            
				            , TRUNC(ROUND(A.COL_C1,1),1) AS COL_C1
				            , TRUNC(ROUND(A.COL_C2,1),1) AS COL_C2
				            , TRUNC(ROUND(A.COL_C3,1),1) AS COL_C3
				            , TRUNC(ROUND(A.COL_C4,1),1) AS COL_C4
				            , TRUNC(ROUND(A.COL_C5,1),1) AS COL_C5
				            , TRUNC(ROUND(A.COL_C6,1),1) AS COL_C6
				            , TRUNC(ROUND(A.COL_C7,1),1) AS COL_C7
				            , TRUNC(ROUND(A.COL_C8,1),1) AS COL_C8
				            , TRUNC(ROUND(A.COL_C9,1),1) AS COL_C9
				            , TRUNC(ROUND(A.COL_C10,1),1) AS COL_C10
				            , A.COL_C_SCR1 + A.COL_C_SCR2 + A.COL_C_SCR3 + A.COL_C_SCR4 + A.COL_C_SCR5 + A.COL_C_SCR6 + A.COL_C_SCR7 + A.COL_C_SCR8 + A.COL_C_SCR9 + A.COL_C_SCR10 AS COL_C11_T				            
				            , CASE WHEN A.SUB_SCOR_C = 0 THEN 0
				                    ELSE TRUNC(ROUND((A.COL_C_SCR1 + A.COL_C_SCR2 + A.COL_C_SCR3 + A.COL_C_SCR4 + A.COL_C_SCR5 + A.COL_C_SCR6 + A.COL_C_SCR7 + A.COL_C_SCR8 + A.COL_C_SCR9 + A.COL_C_SCR10)*100/A.SUB_SCOR_C,1),1) END AS COL_C11
				            
		                FROM(
				                SELECT A.SQN || '차' AS BRANCH
				                    , '달성도(%)' AS GUBUN
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                     
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A1' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A1
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A2' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A2
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A3' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A3
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A4' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A4
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A5' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A5
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A6' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A6
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A7' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A7
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A8' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A8
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A9' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A9
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A10' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_A10
				                    
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B1' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B1
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B2' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B2
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B3' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B3
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B4' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B4
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B5' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B5
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B6' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B6
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B7' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B7
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B8' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B8
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B9' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B9
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B10' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_B10
				                    
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C1' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C1
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C2' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C2
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C3' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C3
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C4' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C4
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C5' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C5
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C6' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C6
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C7' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C7
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C8' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C8
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C9' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END   AS COL_C9
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                           WHEN MAX(A.ASGN_SCOR1) = '0' THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C10' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT * 100/NULLIF(A.ASGN_SCOR1,'0') ELSE 0 END),0) END    AS COL_C10				                    

				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A1' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR1
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A2' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR2
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A3' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR3
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A4' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR4
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A5' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR5
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A6' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR6
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A7' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR7
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A8' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR8
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A9' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_A_SCR9
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'A10' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END          AS COL_A_SCR10
				                    
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B1' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR1
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B2' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR2
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B3' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR3
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B4' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR4
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B5' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR5
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B6' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR6
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B7' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR7
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B8' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR8
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B9' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_B_SCR9
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'B10' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END          AS COL_B_SCR10

				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C1' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR1
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C2' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR2
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C3' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR3
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C4' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR4
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C5' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR5
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C6' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR6
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C7' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR7
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C8' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR8
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C9' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END           AS COL_C_SCR9
				                    , CASE WHEN MAX(A.CNSLR_ID_CNT) = 0 THEN 0				                    
				                            ELSE NVL(MAX(CASE WHEN A.FIXD_COL = 'C10' THEN A.CNSL_AVG_SUM/A.CNSLR_ID_CNT END),0) END          AS COL_C_SCR10	
				                    
				                    , NVL(MAX(CASE WHEN A.FIXD_COL LIKE '%A%' THEN A.SUB_SCOR END),1)            AS SUB_SCOR_A
				                    , NVL(MAX(CASE WHEN A.FIXD_COL LIKE '%B%' THEN A.SUB_SCOR END),1)            AS SUB_SCOR_B
				                    , NVL(MAX(CASE WHEN A.FIXD_COL LIKE '%C%' THEN A.SUB_SCOR END),1)            AS SUB_SCOR_C

				                FROM(  
  				                        SELECT * FROM T 
				                 )A
				                 GROUP BY A.ASES_YM,A.SQN	                		                
		                    )A        
		        	 )A				 
		)A
		ORDER BY A.BRANCH, A.GUBUN DESC
	</select>
</sqlMap>
